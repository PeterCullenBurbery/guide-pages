(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1161899,      23393]
NotebookOptionsPosition[   1134373,      22920]
NotebookOutlinePosition[   1134844,      22937]
CellTagsIndexPosition[   1134801,      22934]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["FindShortestPath", "Chapter",
 CellChangeTimes->{{3.866812816397374*^9, 
  3.8668128207763724`*^9}},ExpressionUUID->"05f54bbf-d844-48ae-97ff-\
f3ad29a09294"],

Cell[CellGroupData[{

Cell["Basic Examples", "Section",
 CellChangeTimes->{{3.866812832827396*^9, 
  3.8668128405414686`*^9}},ExpressionUUID->"66b53cf4-67fe-4c2c-889d-\
46963121e300"],

Cell["\<\
Find a shortest path between two individual vertices in a graph:\
\>", "Text",
 CellChangeTimes->{{3.8668128422824736`*^9, 
  3.8668128520284605`*^9}},ExpressionUUID->"bd31ab1a-0cd7-468f-84c3-\
42a2c86dd709"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 6}, {3, 
         4}, {4, 5}, {5, 6}}}, {
        GraphHighlightStyle -> {"Thick"}, GraphLayout -> "StarEmbedding", 
         ImagePadding -> 0, ImageSize -> {124.5, Automatic}, 
         VertexShapeFunction -> {{White, 
            Disk[#, 0.1], Black, 
            Text[#2, #]}& }}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.}, {-0.5877852522924726, -0.8090169943749468}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.}, {0.5877852522924738, -0.8090169943749481}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.}, {0.9510565162951533, 0.30901699437494634`}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.}, {-7.044813998280222*^-16, 1.}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.}, {-0.9510565162951538, 0.30901699437494945`}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{-0.5877852522924726, -0.8090169943749468}, {
            0.5877852522924738, -0.8090169943749481}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{-0.5877852522924726, -0.8090169943749468}, \
{-0.9510565162951538, 0.30901699437494945`}}, 0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0.5877852522924738, -0.8090169943749481}, {
            0.9510565162951533, 0.30901699437494634`}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0.9510565162951533, 
            0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{-7.044813998280222*^-16, 1.}, {-0.9510565162951538, 
            0.30901699437494945`}}, 0.021812234931106983`]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
           {GrayLevel[1], DiskBox[{0., 0.}, 0.1]}, 
           {GrayLevel[0], InsetBox["1", {0., 0.}]}}, {
           {GrayLevel[1], 
            DiskBox[{-0.5877852522924726, -0.8090169943749468}, 0.1]}, 
           {GrayLevel[0], 
            InsetBox["2", {-0.5877852522924726, -0.8090169943749468}]}}, {
           {GrayLevel[1], 
            DiskBox[{0.5877852522924738, -0.8090169943749481}, 0.1]}, 
           {GrayLevel[0], 
            InsetBox["3", {0.5877852522924738, -0.8090169943749481}]}}, {
           {GrayLevel[1], 
            DiskBox[{0.9510565162951533, 0.30901699437494634}, 0.1]}, 
           {GrayLevel[0], 
            InsetBox["4", {0.9510565162951533, 0.30901699437494634}]}}, {
           {GrayLevel[1], DiskBox[{-7.044813998280222*^-16, 1.}, 0.1]}, 
           {GrayLevel[0], InsetBox["5", {-7.044813998280222*^-16, 1.}]}}, {
           {GrayLevel[1], 
            DiskBox[{-0.9510565162951538, 0.30901699437494945}, 0.1]}, 
           {GrayLevel[0], 
            InsetBox["6", {-0.9510565162951538, 0.30901699437494945}]}}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->0,
    ImageSize->{124.5, Automatic}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8668128531034536`*^9, 3.8668128623854494`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"1fec9562-14ea-4f5c-aae6-9012de4393ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindShortestPath", "[", 
  RowBox[{"g", ",", "3", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.866812864089464*^9, 3.866812868730465*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"54720075-5a01-44f0-99f8-8d34e3907cc5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.8668128690954447`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"c9b790ae-6982-4bad-a24c-e693457af257"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{"Graph", "[", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["2504", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Graph[{1, 2, 3, 4, 5, 6}, {
      UndirectedEdge[1, 2], 
      UndirectedEdge[1, 3], 
      UndirectedEdge[1, 4], 
      UndirectedEdge[1, 5], 
      UndirectedEdge[1, 6], 
      UndirectedEdge[2, 3], 
      UndirectedEdge[2, 6], 
      UndirectedEdge[3, 4], 
      UndirectedEdge[4, 5], 
      UndirectedEdge[5, 6]}, {
     GraphHighlightStyle -> {"Thick"}, GraphLayout -> "StarEmbedding", 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> 0, 
      ImageSize -> {124.5, Automatic}, VertexShapeFunction -> {{White, 
         Disk[#, 0.1], Black, 
         Text[#2, #]}& }}],
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"PathGraph", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "1", ",", "5"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.866812886714493*^9},
 NumberMarks->False,ExpressionUUID->"037f2cf3-9d56-4d22-b1be-1673ac4ab582"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 6}, {3, 4}, {
       4, 5}, {5, 6}}}, {GraphHighlight -> {
         UndirectedEdge[1, 5], 1, 5, 
         UndirectedEdge[3, 1], 3}, GraphHighlightStyle -> {"Thick"}, 
       GraphLayout -> "StarEmbedding", GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> 0, 
       ImageSize -> {124.5, Automatic}, VertexShapeFunction -> {{White, 
          Disk[#, 0.1], Black, 
          Text[#2, #]}& }}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {-0.5877852522924726, -0.8090169943749468}}, 
          0.021812234931106983`]}, 
        {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.}, {0.5877852522924738, -0.8090169943749481}}, 
           0.021812234931106983`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {0.9510565162951533, 0.30901699437494634`}}, 
          0.021812234931106983`]}, 
        {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.}, {-7.044813998280222*^-16, 1.}}, 
           0.021812234931106983`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {-0.9510565162951538, 0.30901699437494945`}}, 
          0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.5877852522924726, -0.8090169943749468}, {
          0.5877852522924738, -0.8090169943749481}}, 0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.5877852522924726, -0.8090169943749468}, \
{-0.9510565162951538, 0.30901699437494945`}}, 0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.5877852522924738, -0.8090169943749481}, {
          0.9510565162951533, 0.30901699437494634`}}, 0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9510565162951533, 
          0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}, 
          0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-7.044813998280222*^-16, 1.}, {-0.9510565162951538, 
          0.30901699437494945`}}, 0.021812234931106983`]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
         Thickness[Large]}], 
         {GrayLevel[1], DiskBox[{0., 0.}, 0.1]}, 
         {GrayLevel[0], InsetBox["1", {0., 0.}]}}, {
         {GrayLevel[1], 
          DiskBox[{-0.5877852522924726, -0.8090169943749468}, 0.1]}, 
         {GrayLevel[0], 
          InsetBox["2", {-0.5877852522924726, -0.8090169943749468}]}}, 
        {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
         Thickness[Large]}], 
         {GrayLevel[1], 
          DiskBox[{0.5877852522924738, -0.8090169943749481}, 0.1]}, 
         {GrayLevel[0], 
          InsetBox["3", {0.5877852522924738, -0.8090169943749481}]}}, {
         {GrayLevel[1], 
          DiskBox[{0.9510565162951533, 0.30901699437494634}, 0.1]}, 
         {GrayLevel[0], 
          InsetBox["4", {0.9510565162951533, 0.30901699437494634}]}}, 
        {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
         Thickness[Large]}], 
         {GrayLevel[1], DiskBox[{-7.044813998280222*^-16, 1.}, 0.1]}, 
         {GrayLevel[0], InsetBox["5", {-7.044813998280222*^-16, 1.}]}}, {
         {GrayLevel[1], 
          DiskBox[{-0.9510565162951538, 0.30901699437494945}, 0.1]}, 
         {GrayLevel[0], 
          InsetBox["6", {-0.9510565162951538, 0.30901699437494945}]}}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->0,
  ImageSize->{124.5, Automatic}]], "Output",
 CellChangeTimes->{3.866812873154455*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"9b84ca6d-692d-46fa-8977-089e2c6cdd99"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Section",
 CellChangeTimes->{{3.8668128958364573`*^9, 
  3.866812896517448*^9}},ExpressionUUID->"4d2780f2-5f84-4280-9ed9-\
b3d64b337aee"],

Cell[CellGroupData[{

Cell["Method", "Subsection",
 CellChangeTimes->{{3.8668128984024577`*^9, 
  3.8668128990364532`*^9}},ExpressionUUID->"a0ed2fe3-1af0-4cbe-9fe5-\
98148799bb9f"],

Cell["The method is automatically chosen depending on the input:", "Text",
 CellChangeTimes->{{3.866812899811462*^9, 
  3.866812910002472*^9}},ExpressionUUID->"dde36f01-cdd9-4f82-a93a-\
0e4e27cedbda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"PetersenGraph", "[", 
    RowBox[{"4", ",", "1", ",", 
     RowBox[{"VertexSize", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", "Medium"}], ",", 
        RowBox[{"7", "->", "Medium"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"PetersenGraph", "[", 
    RowBox[{"4", ",", "1", ",", 
     RowBox[{"EdgeWeight", "->", 
      RowBox[{"{", 
       RowBox[{
       "4", ",", "0", ",", "3", ",", "1", ",", "3", ",", "2", ",", "7", ",", 
        "8", ",", "5", ",", "2", ",", "1", ",", "6"}], "}"}]}], ",", 
     RowBox[{"VertexSize", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", "Medium"}], ",", 
        RowBox[{"7", "->", "Medium"}]}], "}"}]}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8668129107414737`*^9, 3.866812938745466*^9}, {
  3.8668129744638844`*^9, 3.866813011306897*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"ceb923dd-a70f-4905-881e-733e6c8b74fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {7 -> Medium, 1 -> Medium}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {
            4, 8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}, 0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.1], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.1], DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {7 -> Medium, 1 -> Medium}, 
         EdgeWeight -> {4, 0, 3, 1, 3, 2, 7, 8, 5, 2, 1, 6}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {
            4, 8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}, 0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.1], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.1], DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8668130148928733`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"ef5568bd-95a6-4a67-b3ec-59d2f8b29515"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"PathGraph", "@", 
      RowBox[{"FindShortestPath", "[", 
       RowBox[{"g", ",", "1", ",", "7"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", "ListIcon", 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["2", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["1152", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {
       PetersenGraph[4, 1, VertexSize -> {1 -> Medium, 7 -> Medium}], 
       PetersenGraph[
       4, 1, EdgeWeight -> {4, 0, 3, 1, 3, 2, 7, 8, 5, 2, 1, 6}, 
        VertexSize -> {1 -> Medium, 7 -> Medium}]},
      SelectWithContents->True,
      Selectable->False]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866813020510866*^9, 3.866813056106871*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"68224d02-1f1e-4201-8e48-4f17dd1157bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {7 -> Medium, 1 -> Medium}, GraphHighlight -> {7, 
           UndirectedEdge[3, 7], 
           UndirectedEdge[1, 2], 1, 
           UndirectedEdge[2, 3], 3, 2}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{1., 6.123233995736766*^-17}, {
              1.2246467991473532`*^-16, -1.}}, 0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 
             6.123233995736766*^-17}, {-2.4492935982947064`*^-16, 1.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {2., 
             1.2246467991473532`*^-16}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{
              1.2246467991473532`*^-16, -1.}, {-1., \
-1.8369701987210297`*^-16}}, 0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{1.2246467991473532`*^-16, -1.}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{-1., -1.8369701987210297`*^-16}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2.4492935982947064`*^-16, 
             1.}, {-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.2246467991473532`*^-16}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 
             1.2246467991473532`*^-16}, {-4.898587196589413*^-16, 2.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             2.4492935982947064`*^-16, -2.}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[1, 0.1]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[2, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[3, 0.03700564971751412]}, DiskBox[4, 0.03700564971751412],
            DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[7, 0.1]}, DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {1 -> Medium, 7 -> Medium}, GraphHighlight -> {
           UndirectedEdge[1, 4], 1, 6, 
           UndirectedEdge[2, 6], 
           UndirectedEdge[6, 7], 2, 
           UndirectedEdge[4, 3], 4, 7, 
           UndirectedEdge[3, 2], 3}, 
         EdgeWeight -> {4, 0, 3, 1, 3, 2, 7, 8, 5, 2, 1, 6}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {
             1.2246467991473532`*^-16, -1.}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{1., 
              6.123233995736766*^-17}, {-2.4492935982947064`*^-16, 1.}}, 
              0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {2., 
             1.2246467991473532`*^-16}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{
              1.2246467991473532`*^-16, -1.}, {-1., \
-1.8369701987210297`*^-16}}, 0.03700564971751412]}}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{1.2246467991473532`*^-16, -1.}, {
              2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}}, 0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2.4492935982947064`*^-16, 
             1.}, {-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.2246467991473532`*^-16}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 
             1.2246467991473532`*^-16}, {-4.898587196589413*^-16, 2.}}, 
             0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{
              2.4492935982947064`*^-16, -2.}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[1, 0.1]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[2, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[3, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.03700564971751412]}, DiskBox[5, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[6, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[7, 0.1]}, DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8668130585528636`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"1a96f85d-2f7d-4a4f-b69c-ccec106200b3"]
}, Open  ]],

Cell["\[OpenCurlyDoubleQuote]UnitWeight\[CloseCurlyDoubleQuote] method will \
use the weight 1 for every edge:", "Text",
 CellChangeTimes->{{3.866813065236872*^9, 
  3.866813078920869*^9}},ExpressionUUID->"41958c3f-2bdb-4827-8f12-\
2d06b6d0538a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"EdgeWeight", "->", 
    RowBox[{"{", 
     RowBox[{
     "5", ",", "2", ",", "2", ",", "5", ",", "1", ",", "2", ",", "2"}], 
     "}"}]}], ",", 
   RowBox[{"VertexSize", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "->", "Small"}], ",", 
      RowBox[{"5", "->", "Small"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668130806878834`*^9, 3.866813098776883*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b966fe5d-855f-42d3-89e7-582c40d2902e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 2, 4, 7, 10, 12, 14}, {{2}, {3}, {1}, {4}, {1}, {4}, {5}, {
          2}, {3}, {6}, {3}, {6}, {4}, {5}}}, Pattern}]}, {
      EdgeWeight -> {5, 2, 2, 5, 1, 2, 2}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {2, 3}}, 
       VertexSize -> {1 -> Small, 5 -> Small}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {2., 1.}, {2., 2.}, {3., 1.}, {
       3., 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}}, 
          0.02261146496815286]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.05], DiskBox[6, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668130991598825`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"c7ba9c42-1e73-48bb-b121-bc87da5cf91d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{"GridGraph", "[", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["672", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    GridGraph[{2, 3}, EdgeWeight -> {5, 2, 2, 5, 1, 2, 2}, 
     VertexSize -> {1 -> Small, 5 -> Small}],
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"PathGraph", "@", 
    RowBox[{"FindShortestPath", "[", 
     RowBox[{
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{"Expression", 
          RowBox[{"GridGraph", "[", 
            DynamicBox[
             FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
            "]"}], 
          GridBox[{{
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["672", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          Dynamic[Typeset`open]},
         "IconizedObject"]],
       GridGraph[{2, 3}, EdgeWeight -> {5, 2, 2, 5, 1, 2, 2}, 
        VertexSize -> {1 -> Small, 5 -> Small}],
       SelectWithContents->True,
       Selectable->False], ",", "1", ",", "5", ",", 
      RowBox[{"Method", "->", "\"\<UnitWeight\>\""}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8668131007458754`*^9, 3.8668131359578805`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"beb75c3c-4b7e-48aa-82be-b0c6794dabd8"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 2, 4, 7, 10, 12, 14}, {{2}, {3}, {1}, {4}, {1}, {4}, {5}, {
          2}, {3}, {6}, {3}, {6}, {4}, {5}}}, Pattern}]}, {
      EdgeWeight -> {5, 2, 2, 5, 1, 2, 2}, GraphHighlight -> {1, 
         UndirectedEdge[3, 5], 5, 
         UndirectedEdge[1, 3], 3}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {2, 3}}, 
       VertexSize -> {1 -> Small, 5 -> Small}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {2., 1.}, {2., 2.}, {3., 1.}, {
       3., 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {1., 2.}}, 0.02261146496815286]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 1.}, {2., 1.}}, 0.02261146496815286]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 2.}, {2., 2.}}, 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {2., 2.}}, 0.02261146496815286]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2., 1.}, {3., 1.}}, 0.02261146496815286]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {3., 2.}}, 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 1.}, {3., 2.}}, 0.02261146496815286]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[1, 0.05]}, DiskBox[2, 0.02261146496815286], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[3, 0.02261146496815286]}, DiskBox[4, 0.02261146496815286], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[5, 0.05]}, DiskBox[6, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668131363528795`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"dd17ae4d-2c7d-479a-950c-2ac5a2f3bd5b"]
}, Open  ]],

Cell["\<\
\[OpenCurlyDoubleQuote]Dijkstra\[CloseCurlyDoubleQuote] can be used for \
graphs with positive edge weights only:\
\>", "Text",
 CellChangeTimes->{{3.866813141050868*^9, 
  3.8668131547678757`*^9}},ExpressionUUID->"eef8d496-7d7c-4c46-961d-\
459321b97448"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"EdgeWeight", "->", 
    RowBox[{"{", 
     RowBox[{
     "5", ",", "2", ",", "2", ",", "5", ",", "1", ",", "2", ",", "2"}], 
     "}"}]}], ",", 
   RowBox[{"VertexSize", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "->", "Small"}], ",", 
      RowBox[{"5", "->", "Small"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866813157577876*^9, 3.866813176895872*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4f0e2b0a-0dbc-4ae1-837c-1bc7a3848ff1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 2, 4, 7, 10, 12, 14}, {{2}, {3}, {1}, {4}, {1}, {4}, {5}, {
          2}, {3}, {6}, {3}, {6}, {4}, {5}}}, Pattern}]}, {
      EdgeWeight -> {5, 2, 2, 5, 1, 2, 2}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {2, 3}}, 
       VertexSize -> {1 -> Small, 5 -> Small}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {2., 1.}, {2., 2.}, {3., 1.}, {
       3., 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}}, 
          0.02261146496815286]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.05], DiskBox[6, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668131772878695`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"0f191ba9-5f45-4526-9c13-4982ea685528"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{"GridGraph", "[", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["672", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    GridGraph[{2, 3}, EdgeWeight -> {5, 2, 2, 5, 1, 2, 2}, 
     VertexSize -> {1 -> Small, 5 -> Small}],
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"PathGraph", "@", 
    RowBox[{"FindShortestPath", "[", 
     RowBox[{
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{"Expression", 
          RowBox[{"GridGraph", "[", 
            DynamicBox[
             FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
            "]"}], 
          GridBox[{{
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["672", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          Dynamic[Typeset`open]},
         "IconizedObject"]],
       GridGraph[{2, 3}, EdgeWeight -> {5, 2, 2, 5, 1, 2, 2}, 
        VertexSize -> {1 -> Small, 5 -> Small}],
       SelectWithContents->True,
       Selectable->False], ",", "1", ",", "5", ",", 
      RowBox[{"Method", "->", "\"\<Dijkstra\>\""}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8668131876328707`*^9, 3.8668131904488883`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"80beca00-74e3-4ec2-beae-0d4ef38c833f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 2, 4, 7, 10, 12, 14}, {{2}, {3}, {1}, {4}, {1}, {4}, {5}, {
          2}, {3}, {6}, {3}, {6}, {4}, {5}}}, Pattern}]}, {
      EdgeWeight -> {5, 2, 2, 5, 1, 2, 2}, GraphHighlight -> {1, 
         UndirectedEdge[3, 5], 5, 
         UndirectedEdge[1, 3], 3}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {2, 3}}, 
       VertexSize -> {1 -> Small, 5 -> Small}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {2., 1.}, {2., 2.}, {3., 1.}, {
       3., 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {1., 2.}}, 0.02261146496815286]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 1.}, {2., 1.}}, 0.02261146496815286]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 2.}, {2., 2.}}, 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {2., 2.}}, 0.02261146496815286]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2., 1.}, {3., 1.}}, 0.02261146496815286]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {3., 2.}}, 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 1.}, {3., 2.}}, 0.02261146496815286]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[1, 0.05]}, DiskBox[2, 0.02261146496815286], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[3, 0.02261146496815286]}, DiskBox[4, 0.02261146496815286], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[5, 0.05]}, DiskBox[6, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668131908668833`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"05fa2494-6b65-4406-b55d-2af6e11db6b5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties and Relations", "Subsection",
 CellChangeTimes->{{3.866813197665857*^9, 
  3.866813200470874*^9}},ExpressionUUID->"cd541097-59d5-4c5b-b42a-\
7a51588bd271"],

Cell["\<\
The distance between two vertices can be found using the shortest path:\
\>", "Text",
 CellChangeTimes->{{3.866813202411868*^9, 
  3.8668132125488825`*^9}},ExpressionUUID->"c1fb84ff-95ab-4bb8-bc30-\
adeea627c78c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GridGraph", "[", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866813213440875*^9, 3.8668132197918863`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"93ef3e91-fccc-4d63-82c6-d77571b846ff"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
       SparseArray[
       Automatic, {12, 12}, 0, {
        1, {{0, 2, 5, 8, 10, 13, 17, 21, 24, 26, 29, 32, 34}, {{2}, {5}, {
          1}, {3}, {6}, {2}, {4}, {7}, {3}, {8}, {1}, {6}, {9}, {2}, {5}, {
          7}, {10}, {3}, {6}, {8}, {11}, {4}, {7}, {12}, {5}, {10}, {6}, {
          9}, {11}, {7}, {10}, {12}, {8}, {11}}}, Pattern}]}, {
      GraphLayout -> {"GridEmbedding", "Dimension" -> {4, 3}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {1., 3.}, {1., 4.}, {2., 1.}, {
       2., 2.}, {2., 3.}, {2., 4.}, {3., 1.}, {3., 2.}, {3., 3.}, {3., 4.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 8}, {5,
           6}, {5, 9}, {6, 7}, {6, 10}, {7, 8}, {7, 11}, {8, 12}, {9, 10}, {
          10, 11}, {11, 12}}, 0.030239520958083826`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.030239520958083826], DiskBox[2, 0.030239520958083826], 
         DiskBox[3, 0.030239520958083826], DiskBox[4, 0.030239520958083826], 
         DiskBox[5, 0.030239520958083826], DiskBox[6, 0.030239520958083826], 
         DiskBox[7, 0.030239520958083826], DiskBox[8, 0.030239520958083826], 
         DiskBox[9, 0.030239520958083826], DiskBox[10, 0.030239520958083826], 
         DiskBox[11, 0.030239520958083826], 
         DiskBox[12, 0.030239520958083826]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668132202688694`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"1ff1c865-526e-477e-8bfa-970b6af73633"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindShortestPath", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{"GridGraph", "[", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["136", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    GridGraph[{4, 3}],
    SelectWithContents->True,
    Selectable->False], ",", "1", ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.8668132214108896`*^9, 3.866813246369892*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3ac0fdf5-0b78-4ae3-aecb-402b8c0c6b15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "8", ",", "12"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8668132468158817`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"3770a42b-4d4c-4376-80d7-82a86bc31689"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{"FindShortestPath", "[", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["232", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    FindShortestPath[
     GridGraph[{4, 3}], 1, 12],
    SelectWithContents->True,
    Selectable->False], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.8668132477728806`*^9, 3.8668132577388754`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"832e0bdd-78ba-4037-b1b6-9dc6eb1019b1"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8668132581128607`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"97d10f41-6e7f-4a4d-8f4b-1571d74e6366"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDistance", "[", 
  RowBox[{"g", ",", "1", ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.866813258821869*^9, 3.866813263161903*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"951b1554-24d7-493d-a4bc-86d3da4520f9"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8668132635208716`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"20795ffd-0321-468d-99fd-b579ba184270"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ShortestPathFunction", "Chapter",
 CellChangeTimes->{{3.8668132817138834`*^9, 
  3.866813285547886*^9}},ExpressionUUID->"59322dc3-d711-494a-a85f-\
6929d6346be0"],

Cell[CellGroupData[{

Cell["Basic Examples", "Section",
 CellChangeTimes->{{3.8668132878958745`*^9, 
  3.866813289507885*^9}},ExpressionUUID->"1fd60702-c847-4eb7-9daf-\
d0709cc9ec34"],

Cell["Obtain a function that gives shortest paths from vertex 4:", "Text",
 CellChangeTimes->{{3.866813290652869*^9, 
  3.866813298639878*^9}},ExpressionUUID->"ad9b2e05-642d-4e39-ae48-\
61b82eb816a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"PetersenGraph", "[", 
   RowBox[{"4", ",", "1", ",", 
    RowBox[{"VertexSize", "->", 
     RowBox[{"{", 
      RowBox[{"4", "->", "Medium"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.86681330009888*^9, 3.866813309834888*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e98dd5e5-8ce5-4ce4-a3c4-753fe1305aa3"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
      Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 8}, {
       5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
      VertexSize -> {4 -> Medium}, 
       VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
        1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
        2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
       1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
       2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4,
           8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}, 0.03700564971751412]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
         DiskBox[3, 0.03700564971751412], DiskBox[4, 0.1], 
         DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
         DiskBox[7, 0.03700564971751412], DiskBox[8, 0.03700564971751412]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668133103608723`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"0afc7f9a-e0bf-46d6-a44d-1f1994227da4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spf", "=", 
  RowBox[{"FindShortestPath", "[", 
   RowBox[{"g", ",", "4", ",", "All"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866813310981881*^9, 3.8668133173428793`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"28b2ff61-0167-4596-a27d-a1c013c909e5"],

Cell[BoxData[
 TagBox[
  RowBox[{"ShortestPathFunction", "[", 
   TagBox[
    RowBox[{"{", 
     RowBox[{"4", ",", "All"}], "}"}],
    Identity,
    Editable->False,
    Selectable->True], ",", 
   RowBox[{"\[LeftSkeleton]", "\[RightSkeleton]"}], "]"}],
  InterpretTemplate[
  ShortestPathFunction[#, {
    1, {1, 2, 3, 4, 5, 6, 7, 8}, {{1, 2, 3, 4, 5, 6, 7, 8}}, {{{0, 1, 0, 1, 1,
      0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 
     0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0}, {0, 
     0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0}}}}]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.8668133177368665`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"da657f69-8bfb-483b-89cd-c0ee6317549e"]
}, Open  ]],

Cell["Use it to show the shortest paths to all vertices:", "Text",
 CellChangeTimes->{{3.866813322119872*^9, 
  3.86681332938486*^9}},ExpressionUUID->"0cbff545-7c65-48f0-ab3e-\
150568e8ab51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"PathGraph", "[", 
      RowBox[{"spf", "[", "v", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", 
     RowBox[{"VertexList", "[", "g", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668133299738693`*^9, 3.8668133432708664`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"7e3896bf-c98a-4843-b19f-7aa9f0609180"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {4 -> Medium}, GraphHighlight -> {
           UndirectedEdge[4, 1], 1, 4}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {
             1.2246467991473532`*^-16, -1.}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{1., 
              6.123233995736766*^-17}, {-2.4492935982947064`*^-16, 1.}}, 
              0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {2., 
             1.2246467991473532`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             1.2246467991473532`*^-16, -1.}, {-1., \
-1.8369701987210297`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1.2246467991473532`*^-16, -1.}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2.4492935982947064`*^-16, 
             1.}, {-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.2246467991473532`*^-16}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 
             1.2246467991473532`*^-16}, {-4.898587196589413*^-16, 2.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             2.4492935982947064`*^-16, -2.}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[1, 0.03700564971751412]}, DiskBox[2, 0.03700564971751412],
            DiskBox[3, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.1]}, DiskBox[5, 0.03700564971751412], 
           DiskBox[6, 0.03700564971751412], DiskBox[7, 0.03700564971751412], 
           DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {4 -> Medium}, GraphHighlight -> {
           UndirectedEdge[4, 1], 1, 
           UndirectedEdge[1, 2], 2, 4}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{1., 6.123233995736766*^-17}, {
              1.2246467991473532`*^-16, -1.}}, 0.03700564971751412]}}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{1., 
              6.123233995736766*^-17}, {-2.4492935982947064`*^-16, 1.}}, 
              0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {2., 
             1.2246467991473532`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             1.2246467991473532`*^-16, -1.}, {-1., \
-1.8369701987210297`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1.2246467991473532`*^-16, -1.}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2.4492935982947064`*^-16, 
             1.}, {-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.2246467991473532`*^-16}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 
             1.2246467991473532`*^-16}, {-4.898587196589413*^-16, 2.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             2.4492935982947064`*^-16, -2.}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[1, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[2, 0.03700564971751412]}, DiskBox[3, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.1]}, DiskBox[5, 0.03700564971751412], 
           DiskBox[6, 0.03700564971751412], DiskBox[7, 0.03700564971751412], 
           DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {4 -> Medium}, GraphHighlight -> {3, 
           UndirectedEdge[4, 3], 4}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {
             1.2246467991473532`*^-16, -1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 
             6.123233995736766*^-17}, {-2.4492935982947064`*^-16, 1.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {2., 
             1.2246467991473532`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             1.2246467991473532`*^-16, -1.}, {-1., \
-1.8369701987210297`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1.2246467991473532`*^-16, -1.}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}}, 0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2.4492935982947064`*^-16, 
             1.}, {-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.2246467991473532`*^-16}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 
             1.2246467991473532`*^-16}, {-4.898587196589413*^-16, 2.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             2.4492935982947064`*^-16, -2.}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[3, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.1]}, DiskBox[5, 0.03700564971751412], 
           DiskBox[6, 0.03700564971751412], DiskBox[7, 0.03700564971751412], 
           DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {4 -> Medium}, GraphHighlight -> {4}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {
            4, 8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}, 0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.1]}, DiskBox[5, 0.03700564971751412], 
           DiskBox[6, 0.03700564971751412], DiskBox[7, 0.03700564971751412], 
           DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {4 -> Medium}, GraphHighlight -> {
           UndirectedEdge[4, 1], 1, 5, 
           UndirectedEdge[1, 5], 4}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {
             1.2246467991473532`*^-16, -1.}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{1., 
              6.123233995736766*^-17}, {-2.4492935982947064`*^-16, 1.}}, 
              0.03700564971751412]}}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{1., 6.123233995736766*^-17}, {2., 
              1.2246467991473532`*^-16}}, 0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             1.2246467991473532`*^-16, -1.}, {-1., \
-1.8369701987210297`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1.2246467991473532`*^-16, -1.}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2.4492935982947064`*^-16, 
             1.}, {-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.2246467991473532`*^-16}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 
             1.2246467991473532`*^-16}, {-4.898587196589413*^-16, 2.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             2.4492935982947064`*^-16, -2.}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[1, 0.03700564971751412]}, DiskBox[2, 0.03700564971751412],
            DiskBox[3, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.1]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[5, 0.03700564971751412]}, DiskBox[6, 0.03700564971751412],
            DiskBox[7, 0.03700564971751412], 
           DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {4 -> Medium}, GraphHighlight -> {8, 6, 7, 
           UndirectedEdge[4, 8], 
           UndirectedEdge[8, 7], 4, 
           UndirectedEdge[7, 6]}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {
             1.2246467991473532`*^-16, -1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 
             6.123233995736766*^-17}, {-2.4492935982947064`*^-16, 1.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {2., 
             1.2246467991473532`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             1.2246467991473532`*^-16, -1.}, {-1., \
-1.8369701987210297`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1.2246467991473532`*^-16, -1.}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{-2.4492935982947064`*^-16, 
              1.}, {-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.2246467991473532`*^-16}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 
             1.2246467991473532`*^-16}, {-4.898587196589413*^-16, 2.}}, 
             0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{
              2.4492935982947064`*^-16, -2.}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.1]}, DiskBox[5, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[6, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[7, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[8, 0.03700564971751412]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {4 -> Medium}, GraphHighlight -> {8, 
           UndirectedEdge[8, 7], 7, 
           UndirectedEdge[4, 8], 4}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {
             1.2246467991473532`*^-16, -1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 
             6.123233995736766*^-17}, {-2.4492935982947064`*^-16, 1.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {2., 
             1.2246467991473532`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             1.2246467991473532`*^-16, -1.}, {-1., \
-1.8369701987210297`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1.2246467991473532`*^-16, -1.}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{-2.4492935982947064`*^-16, 
              1.}, {-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.2246467991473532`*^-16}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 
             1.2246467991473532`*^-16}, {-4.898587196589413*^-16, 2.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             2.4492935982947064`*^-16, -2.}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.1]}, DiskBox[5, 0.03700564971751412], 
           DiskBox[6, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[7, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[8, 0.03700564971751412]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        VertexSize -> {4 -> Medium}, GraphHighlight -> {8, 
           UndirectedEdge[4, 8], 4}, 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {
             1.2246467991473532`*^-16, -1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 
             6.123233995736766*^-17}, {-2.4492935982947064`*^-16, 1.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 6.123233995736766*^-17}, {2., 
             1.2246467991473532`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             1.2246467991473532`*^-16, -1.}, {-1., \
-1.8369701987210297`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1.2246467991473532`*^-16, -1.}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-1., -1.8369701987210297`*^-16}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Hue[1, 1, 0.7], Opacity[1], 
            {Arrowheads[0.], 
             ArrowBox[{{-2.4492935982947064`*^-16, 
              1.}, {-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.2246467991473532`*^-16}, {
             2.4492935982947064`*^-16, -2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 
             1.2246467991473532`*^-16}, {-4.898587196589413*^-16, 2.}}, 
             0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{
             2.4492935982947064`*^-16, -2.}, {-2., \
-3.6739403974420594`*^-16}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, 0.03700564971751412]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.03700564971751412], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[4, 0.1]}, DiskBox[5, 0.03700564971751412], 
           DiskBox[6, 0.03700564971751412], DiskBox[7, 0.03700564971751412], 
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[8, 0.03700564971751412]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.8668133437838593`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"f482f053-897a-46b0-8bad-25e821354ed0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindHamiltonianPath", "Chapter",
 CellChangeTimes->{{3.866813362070876*^9, 
  3.86681336521988*^9}},ExpressionUUID->"abe9e32f-e45b-4003-90f5-\
eee76362df7e"],

Cell[CellGroupData[{

Cell["Basic Examples", "Section",
 CellChangeTimes->{{3.866813369532863*^9, 
  3.8668133710998583`*^9}},ExpressionUUID->"cb9509e5-a4b0-42ca-b44a-\
0fe16f45c33c"],

Cell["Find a Hamiltonian path through vertices in a graph:", "Text",
 CellChangeTimes->{{3.866813372467868*^9, 
  3.866813379802866*^9}},ExpressionUUID->"5ce0af44-fa12-45d0-ac9b-\
0486ab077fa2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"PolyhedronData", "[", 
   RowBox[{"\"\<Dodecahedron\>\"", ",", "\"\<Skeleton\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.866813380685876*^9, 3.86681339356387*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a6c7bca3-63a1-4846-884a-2434dc400073"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, {Null, {{1, 14}, {1, 15}, {1, 16}, {2, 5}, {2, 6}, {2, 13}, {3, 
       7}, {3, 14}, {3, 19}, {4, 8}, {4, 15}, {4, 20}, {5, 11}, {5, 19}, {6, 
       12}, {6, 20}, {7, 11}, {7, 16}, {8, 12}, {8, 16}, {9, 10}, {9, 14}, {9,
        17}, {10, 15}, {10, 18}, {11, 12}, {13, 17}, {13, 18}, {17, 19}, {18, 
       20}}}, {VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/SP48dLZR37sr8/aUzJZ4oH9vvlS+ndVPtlHpVjf
9++9vt9yy4myffPf7QdypucJfd3PAAX2pnG7PHl+2UPl7WHyUPPsYeadLAOZ
+H3/m8Adcq2v/8P1v6sBmcDssGnu++XHvO/vVzfkWCMTdWR/u9jNc9+DL0Pt
vQXTbw/Tf/irRkz/ISYHiPoX9lD99jD9ISDrFT7tZwnj09009/r+NDB4tv9h
lcg694fv7KH6D/xZ+fGSb9ILe5h7lgF1bSh6ALPfHmY/RF0A1P+fYebZw8wD
AAicpMI=
        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/SP48dLZR37sr8/aUzJZ4oH9vvlS+ndVPtlHpVjf
9++9vt9yy4myffPf7QdypucJfd3PAAX2pnG7PHl+2UPl7WHyUPPsYeadLAOZ
+H3/m8Adcq2v/8P1v6sBmcDssGnu++XHvO/vVzfkWCMTdWR/u9jNc9+DL0Pt
vQXTbw/Tf/irRkz/ISYHiPoX9lD99jD9ISDrFT7tZwnj09009/r+NDB4tv9h
lcg694fv7KH6D/xZ+fGSb9ILe5h7lgF1bSh6ALPfHmY/RF0A1P+fYebZw8wD
AAicpMI=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 14}, {1, 15}, {1, 16}, {2, 5}, {2, 6}, {2, 13}, {3, 
          7}, {3, 14}, {3, 19}, {4, 8}, {4, 15}, {4, 20}, {5, 11}, {5, 19}, {
          6, 12}, {6, 20}, {7, 11}, {7, 16}, {8, 12}, {8, 16}, {9, 10}, {9, 
          14}, {9, 17}, {10, 15}, {10, 18}, {11, 12}, {13, 17}, {13, 18}, {17,
           19}, {18, 20}}, 0.0412452419793366]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.0412452419793366], DiskBox[2, 0.0412452419793366], 
         DiskBox[3, 0.0412452419793366], DiskBox[4, 0.0412452419793366], 
         DiskBox[5, 0.0412452419793366], DiskBox[6, 0.0412452419793366], 
         DiskBox[7, 0.0412452419793366], DiskBox[8, 0.0412452419793366], 
         DiskBox[9, 0.0412452419793366], DiskBox[10, 0.0412452419793366], 
         DiskBox[11, 0.0412452419793366], DiskBox[12, 0.0412452419793366], 
         DiskBox[13, 0.0412452419793366], DiskBox[14, 0.0412452419793366], 
         DiskBox[15, 0.0412452419793366], DiskBox[16, 0.0412452419793366], 
         DiskBox[17, 0.0412452419793366], DiskBox[18, 0.0412452419793366], 
         DiskBox[19, 0.0412452419793366], DiskBox[20, 0.0412452419793366]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668133939198675`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"c099265f-a37b-42d9-a859-ea9ea14b0881"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindHamiltonianPath", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.8668133946178684`*^9, 3.866813403548884*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ecb7bdca-890f-4552-aee2-b4ac7337e2c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13", ",", "18", ",", "10", ",", "15", ",", "4", ",", "20", ",", "6", ",", 
   "2", ",", "5", ",", "19", ",", "3", ",", "7", ",", "11", ",", "12", ",", 
   "8", ",", "16", ",", "1", ",", "14", ",", "9", ",", "17"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.866813403897873*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"dead6a8b-e1a0-40e0-adb1-6a8c04ca0048"]
}, Open  ]],

Cell["Highlight the path:", "Text",
 CellChangeTimes->{{3.866813405227886*^9, 
  3.866813407606861*^9}},ExpressionUUID->"64e132a5-4e4f-4531-a534-\
6c4fe7b39cdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"PathGraph", "[", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", 
        RowBox[{"FindHamiltonianPath", "[", 
          DynamicBox[
           FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
        GridBox[{{
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["48", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     FindHamiltonianPath[$CellContext`g],
     SelectWithContents->True,
     Selectable->False], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668134083728647`*^9, 3.8668134196988564`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"805f6980-4718-4a62-ab99-677cd9047645"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, {Null, {{1, 14}, {1, 15}, {1, 16}, {2, 5}, {2, 6}, {2, 13}, {3, 
       7}, {3, 14}, {3, 19}, {4, 8}, {4, 15}, {4, 20}, {5, 11}, {5, 19}, {6, 
       12}, {6, 20}, {7, 11}, {7, 16}, {8, 12}, {8, 16}, {9, 10}, {9, 14}, {9,
        17}, {10, 15}, {10, 18}, {11, 12}, {13, 17}, {13, 18}, {17, 19}, {18, 
       20}}}, {GraphHighlight -> {17, 
         UndirectedEdge[9, 17], 1, 16, 3, 
         UndirectedEdge[13, 18], 4, 
         UndirectedEdge[7, 11], 
         UndirectedEdge[6, 2], 14, 
         UndirectedEdge[18, 10], 
         UndirectedEdge[20, 6], 11, 
         UndirectedEdge[11, 12], 5, 10, 6, 
         UndirectedEdge[15, 4], 18, 15, 
         UndirectedEdge[3, 7], 
         UndirectedEdge[4, 20], 2, 
         UndirectedEdge[2, 5], 
         UndirectedEdge[12, 8], 
         UndirectedEdge[14, 9], 
         UndirectedEdge[16, 1], 9, 7, 13, 
         UndirectedEdge[8, 16], 8, 20, 
         UndirectedEdge[10, 15], 19, 
         UndirectedEdge[1, 14], 12, 
         UndirectedEdge[5, 19], 
         UndirectedEdge[19, 3]}, VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/SP48dLZR37sr8/aUzJZ4oH9vvlS+ndVPtlHpVjf
9++9vt9yy4myffPf7QdypucJfd3PAAX2pnG7PHl+2UPl7WHyUPPsYeadLAOZ
+H3/m8Adcq2v/8P1v6sBmcDssGnu++XHvO/vVzfkWCMTdWR/u9jNc9+DL0Pt
vQXTbw/Tf/irRkz/ISYHiPoX9lD99jD9ISDrFT7tZwnj09009/r+NDB4tv9h
lcg694fv7KH6D/xZ+fGSb9ILe5h7lgF1bSh6ALPfHmY/RF0A1P+fYebZw8wD
AAicpMI=
        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/SP48dLZR37sr8/aUzJZ4oH9vvlS+ndVPtlHpVjf
9++9vt9yy4myffPf7QdypucJfd3PAAX2pnG7PHl+2UPl7WHyUPPsYeadLAOZ
+H3/m8Adcq2v/8P1v6sBmcDssGnu++XHvO/vVzfkWCMTdWR/u9jNc9+DL0Pt
vQXTbw/Tf/irRkz/ISYHiPoX9lD99jD9ISDrFT7tZwnj09009/r+NDB4tv9h
lcg694fv7KH6D/xZ+fGSb9ILe5h7lgF1bSh6ALPfHmY/RF0A1P+fYebZw8wD
AAicpMI=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-1.548, 0.503}, {-1.133, -0.369}}, 
            0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{-1.548, 0.503}, {-0.7, 0.965}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-1.548, 0.503}, {-2.345, 0.762}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.134, -0.368}, {0.957, -1.317}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.134, -0.368}, {1.548, 0.503}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.134, -0.368}, {0.489, -0.159}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.957, -1.317}, {-1.449, -1.995}}, 
            0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{-0.957, -1.317}, {-1.133, -0.369}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.957, -1.317}, {-0.001, -1.192}}, 
            0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0., 1.628}, {0., 2.466}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.628}, {-0.7, 0.965}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.628}, {0.7, 0.965}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.957, -1.317}, {1.449, -1.995}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.957, -1.317}, {-0.001, -1.192}}, 
            0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.548, 0.503}, {2.345, 0.761}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.548, 0.503}, {0.7, 0.965}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-1.449, -1.995}, {1.449, -1.995}}, 
            0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{-1.449, -1.995}, {-2.345, 0.762}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 2.466}, {2.345, 0.761}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 2.466}, {-2.345, 0.762}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{-0.489, -0.159}, {-0.302, 0.416}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.489, -0.159}, {-1.133, -0.369}}, 
            0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.489, -0.159}, {0., -0.514}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.302, 0.416}, {-0.7, 0.965}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.302, 0.416}, {0.302, 0.416}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.449, -1.995}, {2.345, 0.761}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.489, -0.159}, {0., -0.514}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.489, -0.159}, {0.302, 0.416}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0., -0.514}, {-0.001, -1.192}}, 0.0412452419793366]}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.302, 0.416}, {0.7, 0.965}}, 0.0412452419793366]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[1, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[2, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[3, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[4, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[5, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[6, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[7, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[8, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[9, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[10, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[11, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[12, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[13, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[14, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[15, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[16, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[17, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[18, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[19, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[20, 0.0412452419793366]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668134209608593`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"646d7201-442a-4229-8e80-e146f02a20f7"]
}, Open  ]],

Cell["\<\
Find a Hamiltonian path between two individual vertices in a graph:\
\>", "Text",
 CellChangeTimes->{{3.8668134264818754`*^9, 
  3.866813437175887*^9}},ExpressionUUID->"3bcf28a8-bbc8-4ba0-8897-\
862143da9f35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"PolyhedronData", "[", 
   RowBox[{"\"\<Dodecahedron\>\"", ",", "\"\<Skeleton\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.866813437940874*^9, 3.8668134470168676`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0e88d0c8-bacc-4176-84ca-469428191254"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, {Null, {{1, 14}, {1, 15}, {1, 16}, {2, 5}, {2, 6}, {2, 13}, {3, 
       7}, {3, 14}, {3, 19}, {4, 8}, {4, 15}, {4, 20}, {5, 11}, {5, 19}, {6, 
       12}, {6, 20}, {7, 11}, {7, 16}, {8, 12}, {8, 16}, {9, 10}, {9, 14}, {9,
        17}, {10, 15}, {10, 18}, {11, 12}, {13, 17}, {13, 18}, {17, 19}, {18, 
       20}}}, {VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/SP48dLZR37sr8/aUzJZ4oH9vvlS+ndVPtlHpVjf
9++9vt9yy4myffPf7QdypucJfd3PAAX2pnG7PHl+2UPl7WHyUPPsYeadLAOZ
+H3/m8Adcq2v/8P1v6sBmcDssGnu++XHvO/vVzfkWCMTdWR/u9jNc9+DL0Pt
vQXTbw/Tf/irRkz/ISYHiPoX9lD99jD9ISDrFT7tZwnj09009/r+NDB4tv9h
lcg694fv7KH6D/xZ+fGSb9ILe5h7lgF1bSh6ALPfHmY/RF0A1P+fYebZw8wD
AAicpMI=
        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/SP48dLZR37sr8/aUzJZ4oH9vvlS+ndVPtlHpVjf
9++9vt9yy4myffPf7QdypucJfd3PAAX2pnG7PHl+2UPl7WHyUPPsYeadLAOZ
+H3/m8Adcq2v/8P1v6sBmcDssGnu++XHvO/vVzfkWCMTdWR/u9jNc9+DL0Pt
vQXTbw/Tf/irRkz/ISYHiPoX9lD99jD9ISDrFT7tZwnj09009/r+NDB4tv9h
lcg694fv7KH6D/xZ+fGSb9ILe5h7lgF1bSh6ALPfHmY/RF0A1P+fYebZw8wD
AAicpMI=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 14}, {1, 15}, {1, 16}, {2, 5}, {2, 6}, {2, 13}, {3, 
          7}, {3, 14}, {3, 19}, {4, 8}, {4, 15}, {4, 20}, {5, 11}, {5, 19}, {
          6, 12}, {6, 20}, {7, 11}, {7, 16}, {8, 12}, {8, 16}, {9, 10}, {9, 
          14}, {9, 17}, {10, 15}, {10, 18}, {11, 12}, {13, 17}, {13, 18}, {17,
           19}, {18, 20}}, 0.0412452419793366]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.0412452419793366], DiskBox[2, 0.0412452419793366], 
         DiskBox[3, 0.0412452419793366], DiskBox[4, 0.0412452419793366], 
         DiskBox[5, 0.0412452419793366], DiskBox[6, 0.0412452419793366], 
         DiskBox[7, 0.0412452419793366], DiskBox[8, 0.0412452419793366], 
         DiskBox[9, 0.0412452419793366], DiskBox[10, 0.0412452419793366], 
         DiskBox[11, 0.0412452419793366], DiskBox[12, 0.0412452419793366], 
         DiskBox[13, 0.0412452419793366], DiskBox[14, 0.0412452419793366], 
         DiskBox[15, 0.0412452419793366], DiskBox[16, 0.0412452419793366], 
         DiskBox[17, 0.0412452419793366], DiskBox[18, 0.0412452419793366], 
         DiskBox[19, 0.0412452419793366], DiskBox[20, 0.0412452419793366]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668134474308667`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"942f427e-3b52-4705-a993-3dac271345e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindHamiltonianPath", "[", 
  RowBox[{"g", ",", "1", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8668134487518806`*^9, 3.866813454011879*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"2c52ecdf-f668-4bd3-81f9-509a25e7e51e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "15", ",", "10", ",", "18", ",", "20", ",", "4", ",", "8", ",", 
   "16", ",", "7", ",", "11", ",", "12", ",", "6", ",", "2", ",", "13", ",", 
   "17", ",", "9", ",", "14", ",", "3", ",", "19", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.866813454412875*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"3c39b9b6-99d4-4c08-adb8-7b1fd17aa87a"]
}, Open  ]],

Cell["Highlight the path:", "Text",
 CellChangeTimes->{{3.8668134591878853`*^9, 
  3.866813462980873*^9}},ExpressionUUID->"9dc774e2-bb9c-49c5-b7ca-\
4ec88bf26b81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"PathGraph", "[", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", 
        RowBox[{"FindHamiltonianPath", "[", 
          DynamicBox[
           FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
        GridBox[{{
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["96", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     FindHamiltonianPath[$CellContext`g, 1, 5],
     SelectWithContents->True,
     Selectable->False], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668134641318855`*^9, 3.8668134733828807`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"5692b007-9650-404f-a5de-1df0fc1e4588"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, {Null, {{1, 14}, {1, 15}, {1, 16}, {2, 5}, {2, 6}, {2, 13}, {3, 
       7}, {3, 14}, {3, 19}, {4, 8}, {4, 15}, {4, 20}, {5, 11}, {5, 19}, {6, 
       12}, {6, 20}, {7, 11}, {7, 16}, {8, 12}, {8, 16}, {9, 10}, {9, 14}, {9,
        17}, {10, 15}, {10, 18}, {11, 12}, {13, 17}, {13, 18}, {17, 19}, {18, 
       20}}}, {GraphHighlight -> {
         UndirectedEdge[13, 17], 17, 1, 16, 3, 
         UndirectedEdge[15, 10], 
         UndirectedEdge[4, 8], 4, 
         UndirectedEdge[7, 11], 
         UndirectedEdge[14, 3], 
         UndirectedEdge[6, 2], 14, 11, 
         UndirectedEdge[10, 18], 
         UndirectedEdge[11, 12], 5, 10, 
         UndirectedEdge[20, 4], 6, 
         UndirectedEdge[17, 9], 18, 15, 2, 
         UndirectedEdge[19, 5], 
         UndirectedEdge[16, 7], 9, 
         UndirectedEdge[9, 14], 7, 
         UndirectedEdge[12, 6], 13, 
         UndirectedEdge[18, 20], 
         UndirectedEdge[8, 16], 
         UndirectedEdge[2, 13], 
         UndirectedEdge[3, 19], 8, 20, 19, 
         UndirectedEdge[1, 15], 12}, VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/SP48dLZR37sr8/aUzJZ4oH9vvlS+ndVPtlHpVjf
9++9vt9yy4myffPf7QdypucJfd3PAAX2pnG7PHl+2UPl7WHyUPPsYeadLAOZ
+H3/m8Adcq2v/8P1v6sBmcDssGnu++XHvO/vVzfkWCMTdWR/u9jNc9+DL0Pt
vQXTbw/Tf/irRkz/ISYHiPoX9lD99jD9ISDrFT7tZwnj09009/r+NDB4tv9h
lcg694fv7KH6D/xZ+fGSb9ILe5h7lgF1bSh6ALPfHmY/RF0A1P+fYebZw8wD
AAicpMI=
        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/SP48dLZR37sr8/aUzJZ4oH9vvlS+ndVPtlHpVjf
9++9vt9yy4myffPf7QdypucJfd3PAAX2pnG7PHl+2UPl7WHyUPPsYeadLAOZ
+H3/m8Adcq2v/8P1v6sBmcDssGnu++XHvO/vVzfkWCMTdWR/u9jNc9+DL0Pt
vQXTbw/Tf/irRkz/ISYHiPoX9lD99jD9ISDrFT7tZwnj09009/r+NDB4tv9h
lcg694fv7KH6D/xZ+fGSb9ILe5h7lgF1bSh6ALPfHmY/RF0A1P+fYebZw8wD
AAicpMI=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], 
          ArrowBox[{{-1.548, 0.503}, {-1.133, -0.369}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-1.548, 0.503}, {-0.7, 0.965}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{-1.548, 0.503}, {-2.345, 0.762}}, 0.0412452419793366]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.134, -0.368}, {0.957, -1.317}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.134, -0.368}, {1.548, 0.503}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.134, -0.368}, {0.489, -0.159}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{-0.957, -1.317}, {-1.449, -1.995}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.957, -1.317}, {-1.133, -0.369}}, 
            0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.957, -1.317}, {-0.001, -1.192}}, 
            0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.628}, {0., 2.466}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0., 1.628}, {-0.7, 0.965}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.628}, {0.7, 0.965}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.957, -1.317}, {1.449, -1.995}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.957, -1.317}, {-0.001, -1.192}}, 
            0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.548, 0.503}, {2.345, 0.761}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.548, 0.503}, {0.7, 0.965}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-1.449, -1.995}, {1.449, -1.995}}, 
            0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-1.449, -1.995}, {-2.345, 0.762}}, 
            0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0., 2.466}, {2.345, 0.761}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 2.466}, {-2.345, 0.762}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{-0.489, -0.159}, {-0.302, 0.416}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.489, -0.159}, {-1.133, -0.369}}, 
            0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.489, -0.159}, {0., -0.514}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.302, 0.416}, {-0.7, 0.965}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{-0.302, 0.416}, {0.302, 0.416}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.449, -1.995}, {2.345, 0.761}}, 0.0412452419793366]}}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.489, -0.159}, {0., -0.514}}, 0.0412452419793366]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.489, -0.159}, {0.302, 0.416}}, 0.0412452419793366]}, 
         {Arrowheads[0.], 
          ArrowBox[{{0., -0.514}, {-0.001, -1.192}}, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.302, 0.416}, {0.7, 0.965}}, 0.0412452419793366]}}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[1, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[2, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[3, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[4, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[5, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[6, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[7, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[8, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[9, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[10, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[11, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[12, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[13, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[14, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[15, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[16, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[17, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[18, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[19, 0.0412452419793366]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[20, 0.0412452419793366]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.866813476118869*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f9abbf2b-9dbc-4fd8-b424-95a1b82a11c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Section",
 CellChangeTimes->{{3.8668134863218703`*^9, 
  3.8668134889408827`*^9}},ExpressionUUID->"f031bb51-08d5-418e-a681-\
f8292e18179b"],

Cell[CellGroupData[{

Cell["DistanceFunction", "Subsection",
 CellChangeTimes->{{3.866813490678875*^9, 
  3.866813492861881*^9}},ExpressionUUID->"9f9c8964-8533-48d5-9729-\
f1fed9f05a93"],

Cell["This defines a sparse distance matrix among six points:", "Text",
 CellChangeTimes->{{3.86681349690086*^9, 
  3.8668135080098877`*^9}},ExpressionUUID->"38fab7bc-bd63-4376-9615-\
eb3c5e2a881c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "->", "2"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "1"}], "}"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2"}], "}"}], "->", "2"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "1"}], "}"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3"}], "}"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3"}], "}"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}], "->", "15"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "1"}], "}"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4"}], "}"}], "->", "15"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2"}], "}"}], "->", "2"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}], "->", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6"}], "}"}], ",", "Infinity"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866813508944874*^9, 3.866813579703867*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"39c97696-e7a2-4867-9a86-3f6020ee140c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgg2IQewIbo/MClwv2F9Jnl/W03bW/33daOLnkjX1z4JKw
z+UX7Zn8vOYUcD22v1ZV6lJi986eAQweQGl0QLk4qe7BpX5nt4Hrzi0v7G+4
L19XM+2t/cmI3H/xX9+T7H5c5lNLPbXcSWt/0docWptPanrGZS+p4gCrWdR4

              "], {{0, 0}, {6, 6}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
             Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"6", ",", "6"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\[Infinity]", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgg2IQewIbo/MClwv2F9Jnl/W03bW/33daOLnkjX1z4JKw
z+UX7Zn8vOYUcD22v1ZV6lJi986eAQweQGl0QLk4qe7BpX5nt4Hrzi0v7G+4
L19XM+2t/cmI3H/xX9+T7H5c5lNLPbXcSWt/0docWptPanrGZS+p4gCrWdR4

              "], {{0, 0}, {6, 6}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
             Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"6", ",", "6"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\[Infinity]", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.4444444444444444`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "6"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {6, 6}, DirectedInfinity[1], {
   1, {{0, 4, 6, 7, 10, 14, 16}, {{2}, {5}, {4}, {6}, {1}, {5}, {4}, {3}, {
     5}, {1}, {1}, {3}, {4}, {2}, {1}, {2}}}, {2, 1, 1, 1, 1, 1, 1, 1, 15, 1, 
    1, 1, 15, 2, 1, 2}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.866813580624859*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"828147cd-9507-4d5f-ac6d-c1eff071134c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {Null, 
         SparseArray[
         Automatic, {6, 6}, 0, {
          1, {{0, 4, 8, 11, 14, 18, 20}, {{2}, {4}, {5}, {6}, {3}, {5}, {6}, {
            1}, {4}, {5}, {2}, {5}, {1}, {3}, {1}, {2}, {3}, {4}, {1}, {2}}}, 
           Pattern}]}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.984439291490246, 1.0223297711823427`}, {
         0.9848354410336709, 0.08267939273383274}, {2.195331228278204, 0.}, {
         2.194949302977236, 1.1051220225112435`}, {1.7055474421525534`, 
         0.5523033290376035}, {0., 0.5522264609097318}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02417689060534023]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.02417689060534023]}, 
           {Arrowheads[0.], ArrowBox[{1, 5}, 0.02417689060534023]}, 
           {Arrowheads[0.], ArrowBox[{1, 6}, 0.02417689060534023]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02417689060534023]}, 
           {Arrowheads[0.], ArrowBox[{2, 5}, 0.02417689060534023]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.02417689060534023]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.02417689060534023]}, 
           {Arrowheads[0.], ArrowBox[{3, 5}, 0.02417689060534023]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.02417689060534023]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02417689060534023], DiskBox[2, 0.02417689060534023], 
           DiskBox[3, 0.02417689060534023], DiskBox[4, 0.02417689060534023], 
           DiskBox[5, 0.02417689060534023], 
           DiskBox[6, 0.02417689060534023]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.866813581714862*^9, 3.866813587809869*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f6b7cbe3-e5c9-45b5-825f-7c462532276b"],

Cell["Find a Hamiltonian path:", "Text",
 CellChangeTimes->{{3.86681359031188*^9, 
  3.866813593665858*^9}},ExpressionUUID->"77a973cf-a8b7-46ca-ac0d-\
9469fa266af6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"path", "=", 
  RowBox[{"FindHamiltonianPath", "[", 
   RowBox[{"g", ",", 
    RowBox[{"DistanceFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "]"}], "&"}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.866813594404891*^9, 3.8668136130288877`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"a1ce8057-9f3f-4355-b00b-7135f1d17d64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "1", ",", "2", ",", "5", ",", "4", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8668136146398587`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"72658e22-87ed-4ece-8425-673a786826e0"]
}, Open  ]],

Cell["Highlight the path:", "Text",
 CellChangeTimes->{{3.8668136154708796`*^9, 
  3.866813617297883*^9}},ExpressionUUID->"18e016b5-a736-4357-be76-\
e4e20ab0eebe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"PathGraph", "[", "path", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866813618475873*^9, 3.8668136251008725`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"6d586cf6-f100-43d2-93d5-8e90866b54cd"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 4, 8, 11, 14, 18, 20}, {{2}, {4}, {5}, {6}, {1}, {3}, {5}, {
          6}, {2}, {4}, {5}, {1}, {3}, {5}, {1}, {2}, {3}, {4}, {1}, {2}}}, 
         Pattern}]}, {GraphHighlight -> {
         UndirectedEdge[5, 4], 1, 5, 6, 
         UndirectedEdge[1, 2], 2, 
         UndirectedEdge[4, 3], 
         UndirectedEdge[6, 1], 
         UndirectedEdge[2, 5], 3, 4}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.9867510580052531, 1.0218416068669198`}, {
       0.9864083193028981, 0.08186831259218369}, {2.1969835466622665`, 0.}, {
       2.1956468364661927`, 1.1047000481478413`}, {1.7051621428756876`, 
       0.551484799324192}, {0., 0.5519532724272712}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.9867510580052531, 1.0218416068669198`}, {
            0.9864083193028981, 0.08186831259218369}}, 0.02418996854784311]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.9867510580052531, 1.0218416068669198`}, {
           2.1956468364661927`, 1.1047000481478413`}}, 0.02418996854784311]}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.9867510580052531, 1.0218416068669198`}, {
           1.7051621428756876`, 0.551484799324192}}, 0.02418996854784311]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.9867510580052531, 1.0218416068669198`}, {0., 
            0.5519532724272712}}, 0.02418996854784311]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.9864083193028981, 0.08186831259218369}, {
           2.1969835466622665`, 0.}}, 0.02418996854784311]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.9864083193028981, 0.08186831259218369}, {
            1.7051621428756876`, 0.551484799324192}}, 0.02418996854784311]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.9864083193028981, 0.08186831259218369}, {0., 
           0.5519532724272712}}, 0.02418996854784311]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2.1969835466622665`, 0.}, {2.1956468364661927`, 
            1.1047000481478413`}}, 0.02418996854784311]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{2.1969835466622665`, 0.}, {1.7051621428756876`, 
           0.551484799324192}}, 0.02418996854784311]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2.1956468364661927`, 1.1047000481478413`}, {
            1.7051621428756876`, 0.551484799324192}}, 0.02418996854784311]}}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[1, 0.02418996854784311]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[2, 0.02418996854784311]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[3, 0.02418996854784311]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[4, 0.02418996854784311]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[5, 0.02418996854784311]}, 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[6, 0.02418996854784311]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output",
 CellChangeTimes->{3.8668136253878775`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"3fdec6f6-8c62-436b-ae0d-04c133dcf834"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applications", "Section",
 CellChangeTimes->{{3.866813639044859*^9, 
  3.866813640418879*^9}},ExpressionUUID->"aeff0aa6-d00a-4db1-af40-\
badb8dc1cd99"],

Cell["\<\
Find a squence of moves by a knight chess piece that visits each square of an \
8x8 chessboard exactly once:\
\>", "Text",
 CellChangeTimes->{{3.866813641778884*^9, 
  3.8668136630538845`*^9}},ExpressionUUID->"9ae83256-89ff-4e7f-81cc-\
9a9f12c0d9b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"KnightTourGraph", "[", 
    RowBox[{"8", ",", "8"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866813663685878*^9, 3.866813671669876*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"6929a04a-ecad-46f9-b27e-4cead365596f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"path", "=", 
  RowBox[{"FindHamiltonianPath", "[", "g", "]"}]}]], "Input",
 CellChangeTimes->{{3.866813672462882*^9, 3.866813678582879*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"6642845e-0fb7-4e50-8941-a1fb167a9a3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "64", ",", "47", ",", "30", ",", "40", ",", "55", ",", "38", ",", "53", ",",
    "36", ",", "51", ",", "57", ",", "42", ",", "27", ",", "17", ",", "2", 
   ",", "12", ",", "6", ",", "16", ",", "31", ",", "48", ",", "54", ",", "37",
    ",", "52", ",", "35", ",", "50", ",", "33", ",", "18", ",", "1", ",", 
   "11", ",", "5", ",", "20", ",", "26", ",", "41", ",", "58", ",", "43", ",",
    "60", ",", "45", ",", "62", ",", "56", ",", "39", ",", "29", ",", "23", 
   ",", "8", ",", "14", ",", "24", ",", "7", ",", "13", ",", "3", ",", "9", 
   ",", "19", ",", "25", ",", "10", ",", "4", ",", "21", ",", "15", ",", "32",
    ",", "22", ",", "28", ",", "34", ",", "49", ",", "59", ",", "44", ",", 
   "61", ",", "46", ",", "63"}], "}"}]], "Output",
 CellChangeTimes->{3.866813678949865*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"0b9ca166-6329-45c7-bbae-e20434c4cea9"]
}, Open  ]],

Cell["A knight\[CloseCurlyQuote]s move:", "Text",
 CellChangeTimes->{{3.86681368010686*^9, 
  3.8668136824518757`*^9}},ExpressionUUID->"15db0ffb-f2aa-47b2-abdb-\
8e6620ff9928"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"checkerboard", "=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"j", "+", "i"}], ",", "2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "8"}], "}"}]}], "]"}], ",", 
    RowBox[{"ColorRules", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", ".55", ",", ".77"}], "]"}]}], ",", 
       RowBox[{"0", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{".67", ",", ".9", ",", ".99"}], "]"}]}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "False"}], ",", 
    RowBox[{"DataRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8668136830308685`*^9, 3.866813748769882*^9}, 
   3.866813820638859*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"24019775-618f-4695-9d99-d5e3d6a00f62"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggGIQGwZmzQSBh/ZLCmy5ri9+YV8Iogqe2p89AwJv7Ne5
P6wSWffefrCpHyruxKV+qLhzNPwHp7+GijtHw39w+gsA/nzXfg==
   "], {{0.5, 0.5}, {8.5, 8.5}}, {0, 1}],
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.8668138225798807`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"3e5abac1-325f-4544-9fde-1c926f845f7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"checkerboard", ",", 
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"PathGraph", "[", "path", "]"}], ",", 
     RowBox[{"GraphHighlightStyle", "->", "\"\<DehighlightHide\>\""}], ",", 
     RowBox[{"EdgeStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Thick", ",", "Red"}], "]"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866813750092883*^9, 3.8668137877908697`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"0470a74d-8824-4cc3-9ba7-afe1088de8d4"],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggGIQGwZmzQSBh/ZLCmy5ri9+YV8Iogqe2p89AwJv7Ne5
P6wSWffefrCpHyruxKV+qLhzNPwHp7+GijtHw39w+gsA/nzXfg==
    "], {{0.5, 0.5}, {8.5, 8.5}}, {0, 1}], {
    {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 1.}, {2., 3.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 1.}, {3., 2.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 2.}, {2., 4.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 2.}, {3., 1.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{1., 2.}, {3., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2., 2.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 3.}, {2., 1.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 3.}, {2., 5.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{1., 3.}, {3., 2.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2., 2.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{1., 3.}, {3., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2., 3.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 4.}, {2., 2.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{1., 4.}, {2., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {1.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{1., 4.}, {3., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2., 3.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 4.}, {3., 5.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 5.}, {2., 3.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{1., 5.}, {2., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {1.5, 6.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 5.}, {3., 4.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{1., 5.}, {3., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2., 5.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 6.}, {2., 4.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 6.}, {2., 8.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{1., 6.}, {3., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2., 5.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{1., 6.}, {3., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2., 6.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 7.}, {2., 5.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{1., 7.}, {3., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2., 6.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 7.}, {3., 8.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 8.}, {2., 6.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{1., 8.}, {3., 7.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{2., 1.}, {3., 3.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 1.}, {4., 2.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 1.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 2.}, {3., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2.5, 3.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{2., 2.}, {4., 1.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 2.}, {4., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 2.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 3.}, {3., 1.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2.5, 2.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 3.}, {3., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 3.}, {4., 2.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 2.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 3.}, {4., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 3.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 4.}, {3., 2.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2.5, 3.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 4.}, {3., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 4.}, {4., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 3.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 4.}, {4., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 4.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 5.}, {3., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 5.}, {3., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2.5, 6.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 5.}, {4., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 4.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 5.}, {4., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 5.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 6.}, {3., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{2., 6.}, {3., 8.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 6.}, {4., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 5.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 6.}, {4., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 6.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{2., 7.}, {3., 5.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 7.}, {4., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3., 6.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{2., 7.}, {4., 8.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{2., 8.}, {3., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {2.5, 7.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{2., 8.}, {4., 7.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{3., 1.}, {4., 3.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 1.}, {5., 2.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 1.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 2.}, {4., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3.5, 3.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{3., 2.}, {5., 1.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 2.}, {5., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 2.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{3., 3.}, {4., 1.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 3.}, {4., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 3.}, {5., 2.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 2.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 3.}, {5., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 3.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{3., 4.}, {4., 2.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 4.}, {4., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 4.}, {5., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 3.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 4.}, {5., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 4.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 5.}, {4., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 5.}, {4., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3.5, 6.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 5.}, {5., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 4.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 5.}, {5., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 5.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{3., 6.}, {4., 4.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{3., 6.}, {4., 8.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 6.}, {5., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 5.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 6.}, {5., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 6.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{3., 7.}, {4., 5.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 7.}, {5., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 6.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 7.}, {5., 8.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 7.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 8.}, {4., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {3.5, 7.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{3., 8.}, {5., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4., 7.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 1.}, {5., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4.5, 2.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 1.}, {6., 2.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5., 1.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 2.}, {5., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4.5, 3.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{4., 2.}, {6., 1.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 2.}, {6., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5., 2.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 3.}, {5., 1.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4.5, 2.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 3.}, {5., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{4., 3.}, {6., 2.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 3.}, {6., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5., 3.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{4., 4.}, {5., 2.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 4.}, {5., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 4.}, {6., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5., 3.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 4.}, {6., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5., 4.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 5.}, {5., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{4., 5.}, {5., 7.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 5.}, {6., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5., 4.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 5.}, {6., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5., 5.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 6.}, {5., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{4., 6.}, {5., 8.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 6.}, {6., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5., 5.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{4., 6.}, {6., 7.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 7.}, {5., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4.5, 6.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 7.}, {6., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5., 6.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{4., 7.}, {6., 8.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 8.}, {5., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {4.5, 7.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{4., 8.}, {6., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5., 7.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 1.}, {6., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 2.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 1.}, {7., 2.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 2.}, {6., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 3.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 2.}, {7., 1.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 2.}, {7., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6., 2.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 3.}, {6., 1.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 2.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 3.}, {6., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 3.}, {7., 2.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 3.}, {7., 4.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 4.}, {6., 2.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 3.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 4.}, {6., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 4.}, {7., 3.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 4.}, {7., 5.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 5.}, {6., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 5.}, {6., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 6.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 5.}, {7., 4.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 5.}, {7., 6.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 6.}, {6., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 6.}, {6., 8.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 7.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 6.}, {7., 5.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 6.}, {7., 7.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 7.}, {6., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 6.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 7.}, {7., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6., 6.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 7.}, {7., 8.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{5., 8.}, {6., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {5.5, 7.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{5., 8.}, {7., 7.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 1.}, {7., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 2.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 1.}, {8., 2.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 2.}, {7., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 3.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 2.}, {8., 1.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 2.}, {8., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7., 2.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 3.}, {7., 1.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 2.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 3.}, {7., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 3.}, {8., 2.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 3.}, {8., 4.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 4.}, {7., 2.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 3.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 4.}, {7., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 4.}, {8., 3.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 4.}, {8., 5.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 5.}, {7., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 5.}, {7., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 6.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 5.}, {8., 4.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 5.}, {8., 6.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 6.}, {7., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 6.}, {7., 8.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 7.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 6.}, {8., 5.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 6.}, {8., 7.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 7.}, {7., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {6.5, 6.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 7.}, {8., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7., 6.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 7.}, {8., 8.}}, 0.05338164251207729]}}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{6., 8.}, {7., 6.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{6., 8.}, {8., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7., 7.5}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{7., 1.}, {8., 3.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{7., 2.}, {8., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7.5, 3.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{7., 3.}, {8., 1.}}, 0.05338164251207729]}}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{7., 3.}, {8., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{7., 4.}, {8., 2.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7.5, 3.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{7., 4.}, {8., 6.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{7., 5.}, {8., 3.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7.5, 4.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{7., 5.}, {8., 7.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7.5, 6.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{7., 6.}, {8., 4.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7.5, 5.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{7., 6.}, {8., 8.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7.5, 7.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, {
      {Opacity[0], 
       {Arrowheads[0.], ArrowBox[{{7., 7.}, {8., 5.}}, 0.05338164251207729]}},
       InsetBox["\<\"\"\>", {7.5, 6.}, ImageScaled[{0.5, 0.5}],
       BaseStyle->"Graphics"]}, 
     {RGBColor[1, 0, 0], Thickness[Large], 
      {Arrowheads[0.], ArrowBox[{{7., 8.}, {8., 6.}}, 0.05338164251207729]}}}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
     DiskBox[{1., 1.}, 0.05338164251207729], 
     DiskBox[{1., 2.}, 0.05338164251207729], 
     DiskBox[{1., 3.}, 0.05338164251207729], 
     DiskBox[{1., 4.}, 0.05338164251207729], 
     DiskBox[{1., 5.}, 0.05338164251207729], 
     DiskBox[{1., 6.}, 0.05338164251207729], 
     DiskBox[{1., 7.}, 0.05338164251207729], 
     DiskBox[{1., 8.}, 0.05338164251207729], 
     DiskBox[{2., 1.}, 0.05338164251207729], 
     DiskBox[{2., 2.}, 0.05338164251207729], 
     DiskBox[{2., 3.}, 0.05338164251207729], 
     DiskBox[{2., 4.}, 0.05338164251207729], 
     DiskBox[{2., 5.}, 0.05338164251207729], 
     DiskBox[{2., 6.}, 0.05338164251207729], 
     DiskBox[{2., 7.}, 0.05338164251207729], 
     DiskBox[{2., 8.}, 0.05338164251207729], 
     DiskBox[{3., 1.}, 0.05338164251207729], 
     DiskBox[{3., 2.}, 0.05338164251207729], 
     DiskBox[{3., 3.}, 0.05338164251207729], 
     DiskBox[{3., 4.}, 0.05338164251207729], 
     DiskBox[{3., 5.}, 0.05338164251207729], 
     DiskBox[{3., 6.}, 0.05338164251207729], 
     DiskBox[{3., 7.}, 0.05338164251207729], 
     DiskBox[{3., 8.}, 0.05338164251207729], 
     DiskBox[{4., 1.}, 0.05338164251207729], 
     DiskBox[{4., 2.}, 0.05338164251207729], 
     DiskBox[{4., 3.}, 0.05338164251207729], 
     DiskBox[{4., 4.}, 0.05338164251207729], 
     DiskBox[{4., 5.}, 0.05338164251207729], 
     DiskBox[{4., 6.}, 0.05338164251207729], 
     DiskBox[{4., 7.}, 0.05338164251207729], 
     DiskBox[{4., 8.}, 0.05338164251207729], 
     DiskBox[{5., 1.}, 0.05338164251207729], 
     DiskBox[{5., 2.}, 0.05338164251207729], 
     DiskBox[{5., 3.}, 0.05338164251207729], 
     DiskBox[{5., 4.}, 0.05338164251207729], 
     DiskBox[{5., 5.}, 0.05338164251207729], 
     DiskBox[{5., 6.}, 0.05338164251207729], 
     DiskBox[{5., 7.}, 0.05338164251207729], 
     DiskBox[{5., 8.}, 0.05338164251207729], 
     DiskBox[{6., 1.}, 0.05338164251207729], 
     DiskBox[{6., 2.}, 0.05338164251207729], 
     DiskBox[{6., 3.}, 0.05338164251207729], 
     DiskBox[{6., 4.}, 0.05338164251207729], 
     DiskBox[{6., 5.}, 0.05338164251207729], 
     DiskBox[{6., 6.}, 0.05338164251207729], 
     DiskBox[{6., 7.}, 0.05338164251207729], 
     DiskBox[{6., 8.}, 0.05338164251207729], 
     DiskBox[{7., 1.}, 0.05338164251207729], 
     DiskBox[{7., 2.}, 0.05338164251207729], 
     DiskBox[{7., 3.}, 0.05338164251207729], 
     DiskBox[{7., 4.}, 0.05338164251207729], 
     DiskBox[{7., 5.}, 0.05338164251207729], 
     DiskBox[{7., 6.}, 0.05338164251207729], 
     DiskBox[{7., 7.}, 0.05338164251207729], 
     DiskBox[{7., 8.}, 0.05338164251207729], 
     DiskBox[{8., 1.}, 0.05338164251207729], 
     DiskBox[{8., 2.}, 0.05338164251207729], 
     DiskBox[{8., 3.}, 0.05338164251207729], 
     DiskBox[{8., 4.}, 0.05338164251207729], 
     DiskBox[{8., 5.}, 0.05338164251207729], 
     DiskBox[{8., 6.}, 0.05338164251207729], 
     DiskBox[{8., 7.}, 0.05338164251207729], 
     DiskBox[{8., 8.}, 0.05338164251207729]}}},
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.866813788295882*^9, 3.8668138291598763`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"99a0e527-1621-46e0-9c97-87f5a5f8ed91"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindMaximumFlow", "Chapter",
 CellChangeTimes->{{3.8668149516008716`*^9, 
  3.8668149554798727`*^9}},ExpressionUUID->"a442c0fe-39cb-425a-9bcc-\
5622234b5864"],

Cell[CellGroupData[{

Cell["Basic Examples", "Section",
 CellChangeTimes->{{3.8668149608858843`*^9, 
  3.8668149629858675`*^9}},ExpressionUUID->"f0cc279b-8382-4da7-99d1-\
a62dbcc76d78"],

Cell["Find the maximum flow between two vertices in a graph.", "Text",
 CellChangeTimes->{{3.866814965099868*^9, 
  3.866814978243882*^9}},ExpressionUUID->"82ef3a91-cd54-474d-89f6-\
2432847ee73a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {1, 5}, {5, 6}, {6, 4}, {2, 5}, {3, 
         6}}}, {ImagePadding -> 0, VertexLabels -> {
           Placed["Name", Center]}, VertexSize -> {0.4}, VertexStyle -> {
           GrayLevel[1]}}]], Typeset`boxes, Typeset`boxes$s2d = 
      GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         GrayLevel[1], 
         TagBox[{
           TagBox[
            DiskBox[{0., 0.42897706871433555`}, 0.17161351865969598`], 
            "DynamicName", BoxID -> "VertexID$1"], 
           InsetBox[
            FormBox["1", TraditionalForm], 
            DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.8711442467958503, 0.8586977125442921}, 
             0.17161351865969598`], "DynamicName", BoxID -> "VertexID$2"], 
           InsetBox[
            FormBox["2", TraditionalForm], 
            DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.0423402987397195`, 0.8587834669836574}, 
             0.17161351865969598`], "DynamicName", BoxID -> "VertexID$3"], 
           InsetBox[
            FormBox["3", TraditionalForm], 
            DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.9166090548556305`, 0.43030950233408893`}, 
             0.17161351865969598`], "DynamicName", BoxID -> "VertexID$4"], 
           InsetBox[
            FormBox["4", TraditionalForm], 
            DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
         TagBox[{
           TagBox[
            DiskBox[{0.8742468617007346, 0.}, 0.17161351865969598`], 
            "DynamicName", BoxID -> "VertexID$5"], 
           InsetBox[
            FormBox["5", TraditionalForm], 
            DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.0448634130927967`, 0.000719583252960454}, 
             0.17161351865969598`], "DynamicName", BoxID -> "VertexID$6"], 
           InsetBox[
            FormBox["6", TraditionalForm], 
            DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> 
          "VertexLabelID$6"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        ImageSizeCache->{{0.7999999999999998, 
         89.19999999999999}, {-20.62399145433418, 15.309424141371395`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    ImagePadding->0], ",", "1", ",", "4"}], "]"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"3b4f92e3-470e-4e6a-a19f-d37211dc8549"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8668149893078794`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"56ccb51b-3c48-45ad-b984-7cb0283b2d35"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalF]", "=", 
   RowBox[{"FindMaximumFlow", "[", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{
          "s", 1, 2, 3, 4, 5, 6, "t"}, {{{1, 2}, {1, 3}, {1, 4}, {2, 5}, {3, 
           6}, {4, 7}, {5, 8}, {6, 8}, {7, 8}, {4, 6}, {3, 5}}, Null}, {
          EdgeStyle -> {
             Arrowheads[0.06]}, 
           GraphLayout -> {
            "MultipartiteEmbedding", "VertexPartition" -> {1, 3, 3, 1}}, 
           ImagePadding -> 0, PerformanceGoal -> "Quality", VertexLabels -> {
             Placed["Name", Center]}, VertexSize -> {0.4}, VertexStyle -> {
             GrayLevel[1]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Arrowheads[0.028937842778793414`], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           Arrowheads[0.06], 
           ArrowBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           GrayLevel[1], 
           TagBox[{
             TagBox[
              DiskBox[{0., 0.}, 0.19541019662496859`], "DynamicName", BoxID -> 
              "VertexID$1"], 
             InsetBox[
              FormBox["\"s\"", TraditionalForm], 
              DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
           TagBox[{
             TagBox[
              DiskBox[{1., -0.9770509831248428}, 0.19541019662496859`], 
              "DynamicName", BoxID -> "VertexID$2"], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
           TagBox[{
             TagBox[
              DiskBox[{1., 0.}, 0.19541019662496859`], "DynamicName", BoxID -> 
              "VertexID$3"], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
           TagBox[{
             TagBox[
              DiskBox[{1., 0.9770509831248428}, 0.19541019662496859`], 
              "DynamicName", BoxID -> "VertexID$4"], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
           TagBox[{
             TagBox[
              DiskBox[{2., -0.9770509831248428}, 0.19541019662496859`], 
              "DynamicName", BoxID -> "VertexID$5"], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
           TagBox[{
             TagBox[
              DiskBox[{2., 0.}, 0.19541019662496859`], "DynamicName", BoxID -> 
              "VertexID$6"], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
           TagBox[{
             TagBox[
              DiskBox[{2., 0.9770509831248428}, 0.19541019662496859`], 
              "DynamicName", BoxID -> "VertexID$7"], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
           TagBox[{
             TagBox[
              DiskBox[{3., 0.}, 0.19541019662496859`], "DynamicName", BoxID -> 
              "VertexID$8"], 
             InsetBox[
              FormBox["\"t\"", TraditionalForm], 
              DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> 
            "VertexLabelID$8"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{0.8000000000000007, 89.2}, {-34.08470956509559, 
           28.878776403173127`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->0], ",", "\"\<s\>\"", ",", "\"\<t\>\"", ",", 
     "\"\<OptimumFlowData\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"751424fb-f8c1-4ab4-8eea-14a3570ad1c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalF]", "[", "\"\<FlowValue\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.866814999861883*^9, 3.866815007137888*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"f7a1b208-456e-48b6-92f2-6ab401c09a0f"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8668150074978805`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"74e89c4e-c52f-440d-8a1e-4c6bbd75b222"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalF]", "[", "\"\<FlowGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.866815012567873*^9, 3.866815019921875*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"0a24d2a7-cf85-4c15-833a-c2f6a9945d60"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "s", 1, 2, 3, 4, 5, 6, "t"}, {{{1, 2}, {1, 3}, {1, 4}, {2, 5}, {3, 6}, {
       4, 7}, {5, 8}, {6, 8}, {7, 8}, {4, 6}, {3, 5}}, Null}, {EdgeStyle -> {
         Arrowheads[0.06], DirectedEdge[3, 5] -> Directive[
           Arrowheads[0.06], 
           RGBColor[0.7134, 0.7708, 0.94]], DirectedEdge[6, "t"] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge[2, 5] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge[4, "t"] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge["s", 2] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge["s", 3] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge[5, "t"] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge["s", 1] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge[3, 6] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge[2, 4] -> Directive[
           Arrowheads[0.06], 
           RGBColor[0.7134, 0.7708, 0.94]], DirectedEdge[1, 4] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]]}, 
       GraphLayout -> {
        "VertexLayout" -> {
          "MultipartiteEmbedding", "VertexPartition" -> {1, 3, 3, 1}}, 
         "RenderingOrder" -> {
           DirectedEdge[2, 4], 
           DirectedEdge[3, 5], 
           DirectedEdge["s", 1], 
           DirectedEdge["s", 2], 
           DirectedEdge["s", 3], 
           DirectedEdge[1, 4], 
           DirectedEdge[2, 5], 
           DirectedEdge[3, 6], 
           DirectedEdge[4, "t"], 
           DirectedEdge[5, "t"], 
           DirectedEdge[6, "t"], "s", 1, 2, 3, 4, 5, 6, "t"}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> 0, PerformanceGoal -> 
       "Quality", VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {5 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), 6 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), 1 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), "t" -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), 4 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), "s" -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), 2 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), 3 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& )}, VertexSize -> {0.4}, VertexStyle -> {
         GrayLevel[1], 6 -> RGBColor[0.7262455, 0.350534, 0.0223392], 1 -> 
         RGBColor[0.7262455, 0.350534, 0.0223392], "s" -> 
         RGBColor[0.890498, 0.440214, 0.00893568], 2 -> 
         RGBColor[0.7262455, 0.350534, 0.0223392], 3 -> 
         RGBColor[0.7262455, 0.350534, 0.0223392], 4 -> 
         RGBColor[0.7262455, 0.350534, 0.0223392], "t" -> 
         RGBColor[0.452491, 0.201068, 0.0446784], 5 -> 
         RGBColor[0.7262455, 0.350534, 0.0223392]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], DynamicLocation[
          "VertexID$8", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], DynamicLocation[
          "VertexID$8", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
          "VertexID$2", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
          "VertexID$3", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
          "VertexID$4", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
          "VertexID$5", Automatic, Center]}]}, 
       {RGBColor[0.7134, 0.7708, 0.94], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
          "VertexID$5", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
          "VertexID$6", Automatic, Center]}]}, 
       {RGBColor[0.7134, 0.7708, 0.94], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], DynamicLocation[
          "VertexID$6", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], DynamicLocation[
          "VertexID$7", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], DynamicLocation[
          "VertexID$8", Automatic, Center]}]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.890498, 0.440214, 0.00893568], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{0., 0.}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], DiskBox[{0., 0.}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$1"], 
          InsetBox["\<\"s\"\>", DynamicLocation["VertexID$1", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$1"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{1., -0.9770509831248428}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], 
             DiskBox[{1., -0.9770509831248428}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$2"], 
          InsetBox["1", DynamicLocation["VertexID$2", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$2"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{1., 0.}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], DiskBox[{1., 0.}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$3"], 
          InsetBox["2", DynamicLocation["VertexID$3", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$3"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{1., 0.9770509831248428}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], 
             DiskBox[{1., 0.9770509831248428}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$4"], 
          InsetBox["3", DynamicLocation["VertexID$4", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$4"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{2., -0.9770509831248428}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], 
             DiskBox[{2., -0.9770509831248428}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$5"], 
          InsetBox["4", DynamicLocation["VertexID$5", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$5"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{2., 0.}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], DiskBox[{2., 0.}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$6"], 
          InsetBox["5", DynamicLocation["VertexID$6", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$6"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{2., 0.9770509831248428}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], 
             DiskBox[{2., 0.9770509831248428}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$7"], 
          InsetBox["6", DynamicLocation["VertexID$7", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$7"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.452491, 0.201068, 0.0446784], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{3., 0.}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], DiskBox[{3., 0.}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$8"], 
          InsetBox["\<\"t\"\>", DynamicLocation["VertexID$8", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$8"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->0]], "Output",
 CellChangeTimes->{3.866815020436885*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"6753a2b1-fbb5-4ef4-b6e6-6bec908ea6a1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Section",
 CellChangeTimes->{{3.8668150301048794`*^9, 
  3.866815030734871*^9}},ExpressionUUID->"22d86ba2-8407-4455-9f58-\
b37d4defc163"],

Cell[CellGroupData[{

Cell["EdgeCapacity", "Subsection",
 CellChangeTimes->{{3.8668150328858724`*^9, 
  3.866815034827874*^9}},ExpressionUUID->"a31068f7-be9f-4326-b662-\
db04cf86678d"],

Cell["\<\
By default, the edge capacity of an edge is taken to be its EdgeCapacity \
property if available, otherwise 1:\
\>", "Text",
 CellChangeTimes->{{3.8668150367788787`*^9, 
  3.866815055671882*^9}},ExpressionUUID->"b65b949d-24f0-4391-b91a-\
89abce8f9f6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {3, 2}, {3, 4}, {2, 4}}}, {
        VertexShapeFunction -> {"Name"}, 
         VertexCoordinates -> {{0., 0.434954}, {0.933844, 0.870011}, {
          0.933878, 0.}, {1.86713, 0.43497}}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0., 0.434954}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.933844, 0.870011}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.933878, 0.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.86713, 0.43497}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$4"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        ImageSizeCache->{{0., 90.}, {-30.27693304697584, 26.}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None], ",", "1", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8668150569558754`*^9, 3.8668150665458755`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"e9e35dcb-73b2-4690-adef-205f3bff2d73"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.866815067502872*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"2e72964e-60f7-41e4-97c8-8f90cacf5c24"]
}, Open  ]],

Cell["Use EdgeCapacity->capacities to set the edge capacity:", "Text",
 CellChangeTimes->{{3.8668150734808817`*^9, 
  3.8668150836678877`*^9}},ExpressionUUID->"83e412c8-54dd-40b2-99d0-\
4ccc9d4b25ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {3, 2}, {3, 4}, {2, 4}}}, {
        VertexShapeFunction -> {"Name"}, 
         VertexCoordinates -> {{0., 0.434954}, {0.933844, 0.870011}, {
          0.933878, 0.}, {1.86713, 0.43497}}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0., 0.434954}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.933844, 0.870011}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.933878, 0.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.86713, 0.43497}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$4"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        ImageSizeCache->{{0., 90.}, {-30.27693304697584, 26.}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None], ",", "1", ",", "2", ",", 
   RowBox[{"EdgeCapacity", "->", 
    RowBox[{"Range", "[", "5", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866815085127867*^9, 3.866815090810869*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"8688fee7-ee4d-4d54-9319-52c2e5c79204"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8668150926718774`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"bc3cdcb1-adba-4293-b719-177c32a8b1b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["VertexCapacity", "Subsection",
 CellChangeTimes->{{3.8668151007988744`*^9, 
  3.8668151032738867`*^9}},ExpressionUUID->"1080bb7f-91d4-4ec3-b6b6-\
f3357ea8733b"],

Cell["\<\
By default, the vertex capacity of a vertex is taken to be its \
VertexaCapacity property if available, otherwise Infinity:\
\>", "Text",
 CellChangeTimes->{{3.8668151055098686`*^9, 
  3.866815126180882*^9}},ExpressionUUID->"62edff8e-16f4-4813-8e79-\
c4886da7089d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {3, 2}, {3, 4}, {2, 4}}}, {
        VertexShapeFunction -> {"Name"}, 
         VertexCoordinates -> {{0., 0.434954}, {0.933844, 0.870011}, {
          0.933878, 0.}, {1.86713, 0.43497}}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0., 0.434954}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.933844, 0.870011}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.933878, 0.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.86713, 0.43497}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$4"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        ImageSizeCache->{{0., 90.}, {-30.27693304697584, 26.}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None], ",", "1", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.8668151282908716`*^9, 3.866815134243874*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"f0a834cd-911b-4f56-8096-ae630533112c"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.866815134996869*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"6ba209ff-29a0-4f49-955c-78e55b5a958d"]
}, Open  ]],

Cell[TextData[{
 "Use VertexCapacity->",
 StyleBox["capacities",
  FontSlant->"Italic"],
 " to set the vertex capacity:"
}], "Text",
 CellChangeTimes->{{3.8668151442888823`*^9, 
  3.8668151575018854`*^9}},ExpressionUUID->"24267fc3-5d0b-4b01-9563-\
83ac7e82d174"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {3, 2}, {3, 4}, {2, 4}}}, {
        VertexShapeFunction -> {"Name"}, 
         VertexCoordinates -> {{0., 0.434954}, {0.933844, 0.870011}, {
          0.933878, 0.}, {1.86713, 0.43497}}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0., 0.434954}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.933844, 0.870011}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.933878, 0.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.86713, 0.43497}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$4"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        ImageSizeCache->{{0., 90.}, {-30.27693304697584, 26.}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None], ",", "1", ",", "4", ",", 
   RowBox[{"VertexCapacity", "->", 
    RowBox[{"Range", "[", "4", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668151282908716`*^9, 3.866815165478884*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"10c3cf43-d337-480a-aa7b-48d3f1e629ce"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8668151658928895`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"16039762-fa68-4ef4-b69a-71aea42433f3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties and Relations", "Section",
 CellChangeTimes->{{3.86681517350587*^9, 
  3.866815176660859*^9}},ExpressionUUID->"c5c18001-3ee6-4fa4-8959-\
99a3da65cab8"],

Cell["\<\
The sum of in-flows is equal to the sum of out-flows for interior vertices:\
\>", "Text",
 CellChangeTimes->{{3.8668151787898884`*^9, 
  3.866815191390878*^9}},ExpressionUUID->"273dbf14-85bd-4749-b6ee-\
0c4f4d10f8e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalF]", "=", 
   RowBox[{"FindMaximumFlow", "[", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 
          6}, {{{1, 2}, {1, 3}, {2, 3}, {3, 2}, {2, 4}, {4, 5}, {3, 5}, {4, 
           6}, {5, 6}}, Null}, {
          EdgeCapacity -> {7, 7, 5, 5, 4, 7, 9, 6, 2}, 
           EdgeLabels -> {DirectedEdge[2, 4] -> Placed[4, {
                Rational[1, 2], {0, 1.1}}], DirectedEdge[2, 3] -> Placed[5, {
                Rational[1, 2], {1, 
                 Rational[1, 2]}}], DirectedEdge[3, 5] -> Placed[9, {
                Rational[1, 2], {
                 Rational[1, 2], 0}}], DirectedEdge[1, 3] -> Placed[7, {
                Rational[1, 2], {
                 Rational[1, 2], 0}}], DirectedEdge[5, 6] -> Placed[2, {
                Rational[1, 2], {
                 Rational[1, 2], 0}}], DirectedEdge[3, 2] -> Placed[5, {
                Rational[1, 2], {-0.5, 
                 Rational[1, 2]}}], DirectedEdge[4, 6] -> Placed[6, {
                Rational[1, 2], {0, 1.1}}], DirectedEdge[4, 5] -> Placed[7, {
                Rational[1, 2], {-0.5, 
                 Rational[1, 2]}}], DirectedEdge[1, 2] -> Placed[7, {
                Rational[1, 2], {0, 1.1}}]}, EdgeStyle -> {
             Arrowheads[0.05]}, 
           GraphLayout -> {
            "MultipartiteLayout", "VertexPartition" -> {1, 2, 2, 1}}, 
           VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
        Typeset`boxes$s2d = GraphicsGroupBox[{{
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {0., 0.}, BaseStyle -> "Graphics"], 
            "DynamicName", BoxID -> "VertexID$1"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {1., -0.9520509831248428}, BaseStyle -> 
             "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {1., 0.9520509831248428}, BaseStyle -> 
             "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {2., -0.9520509831248428}, BaseStyle -> 
             "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {2., 0.9520509831248428}, BaseStyle -> 
             "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {3., 0.}, BaseStyle -> "Graphics"], 
            "DynamicName", BoxID -> "VertexID$6"]}, {
           Arrowheads[0.028937842778793414`], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], {
            TagBox[
             StyleBox[
              ArrowBox[
               LineBox[{
                 DynamicLocation["VertexID$1", Automatic, Center], 
                 DynamicLocation["VertexID$2", Automatic, Center]}]], 
              Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$1"], 
            InsetBox[
             FormBox["7", TraditionalForm], 
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$1", Automatic, 
               Scaled[
                Rational[1, 2]]]], 
             ImageScaled[{0, 1.1}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               LineBox[{
                 DynamicLocation["VertexID$1", Automatic, Center], 
                 DynamicLocation["VertexID$3", Automatic, Center]}]], 
              Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$2"], 
            InsetBox[
             FormBox["7", TraditionalForm], 
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$2", Automatic, 
               Scaled[
                Rational[1, 2]]]], 
             ImageScaled[{
               Rational[1, 2], 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               BezierCurveBox[{
                 DynamicLocation["VertexID$2", Automatic, Center], {
                 0.7043296981611388, 3.6637359812630164`*^-16}, 
                 DynamicLocation["VertexID$3", Automatic, Center]}]], 
              Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$3"], 
            InsetBox[
             FormBox["5", TraditionalForm], 
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$3", Automatic, 
               Scaled[
                Rational[1, 2]]]], 
             ImageScaled[{1, 
               Rational[1, 2]}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               LineBox[{
                 DynamicLocation["VertexID$2", Automatic, Center], 
                 DynamicLocation["VertexID$4", Automatic, Center]}]], 
              Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$4"], 
            InsetBox[
             FormBox["4", TraditionalForm], 
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$4", Automatic, 
               Scaled[
                Rational[1, 2]]]], 
             ImageScaled[{0, 1.1}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               BezierCurveBox[{
                 DynamicLocation["VertexID$3", Automatic, Center], {
                 1.2956703018388611`, -3.3306690738754696`*^-16}, 
                 DynamicLocation["VertexID$2", Automatic, Center]}]], 
              Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$5"], 
            InsetBox[
             FormBox["5", TraditionalForm], 
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$5", Automatic, 
               Scaled[
                Rational[1, 2]]]], 
             ImageScaled[{-0.5, 
               Rational[1, 2]}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               LineBox[{
                 DynamicLocation["VertexID$3", Automatic, Center], 
                 DynamicLocation["VertexID$5", Automatic, Center]}]], 
              Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$6"], 
            InsetBox[
             FormBox["9", TraditionalForm], 
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$6", Automatic, 
               Scaled[
                Rational[1, 2]]]], 
             ImageScaled[{
               Rational[1, 2], 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               LineBox[{
                 DynamicLocation["VertexID$4", Automatic, Center], 
                 DynamicLocation["VertexID$5", Automatic, Center]}]], 
              Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$7"], 
            InsetBox[
             FormBox["7", TraditionalForm], 
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$7", Automatic, 
               Scaled[
                Rational[1, 2]]]], 
             ImageScaled[{-0.5, 
               Rational[1, 2]}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               LineBox[{
                 DynamicLocation["VertexID$4", Automatic, Center], 
                 DynamicLocation["VertexID$6", Automatic, Center]}]], 
              Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$8"], 
            InsetBox[
             FormBox["6", TraditionalForm], 
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$8", Automatic, 
               Scaled[
                Rational[1, 2]]]], 
             ImageScaled[{0, 1.1}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               LineBox[{
                 DynamicLocation["VertexID$5", Automatic, Center], 
                 DynamicLocation["VertexID$6", Automatic, Center]}]], 
              Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$9"], 
            InsetBox[
             FormBox["2", TraditionalForm], 
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$9", Automatic, 
               Scaled[
                Rational[1, 2]]]], 
             ImageScaled[{
               Rational[1, 2], 0}], BaseStyle -> "Graphics"]}}}], 
        Typeset`data}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          2, Typeset`graph, Typeset`boxes], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, TrackedSymbols :> {}},
          
          ImageSizeCache->{{-1.4142135623730923`, 
           111.41421356237309`}, {-47.34521660402915, 42.414213562373234`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{Typeset`data}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->110], ",", "1", ",", "6", ",", "\"\<OptimumFlowData\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8668151926968803`*^9, 3.8668152031898813`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"1d12f9b2-002f-4a72-a7eb-d742c03ea777"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"m", "=", 
    RowBox[{"\[ScriptCapitalF]", "[", "\"\<FlowMatrix\>\"", "]"}]}], ")"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8668152054698887`*^9, 3.866815214754859*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"5fdfb9fb-0b5b-4d76-b984-1ce0a9afe143"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "6", "0", "0", "0", "0"},
     {"0", "0", "3", "4", "0", "0"},
     {"0", "1", "0", "0", "2", "0"},
     {"0", "0", "0", "0", "0", "4"},
     {"0", "0", "0", "0", "0", "2"},
     {"0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {6, 6}, 0, {
     1, {{0, 1, 3, 5, 6, 7, 7}, {{2}, {3}, {4}, {2}, {5}, {6}, {6}}}, {6, 3, 
      4, 1, 2, 4, 2}}]]]]], "Output",
 CellChangeTimes->{3.866815215065876*^9},
 CellLabel->
  "Out[51]//MatrixForm=",ExpressionUUID->"32c6ec80-6b0b-4e08-991f-\
88e3aa87d0a0"]
}, Open  ]],

Cell["The in-flow for interior vertices:", "Text",
 CellChangeTimes->{{3.866815221472866*^9, 
  3.8668152287468843`*^9}},ExpressionUUID->"0f0d20d1-7609-4ca8-b820-\
dc8deb1b790a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"m", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668152299798875`*^9, 3.8668152380698795`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"f0fbcd16-14a3-4525-8506-7afd2f52a5d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "3", ",", "4", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8668152385738697`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"c3fa8de8-aae9-4db4-888d-fd8a2b25e4f1"]
}, Open  ]],

Cell[" The out-flow for interior vertices:", "Text",
 CellChangeTimes->{{3.866815240212865*^9, 
  3.866815265541868*^9}},ExpressionUUID->"6a9894f4-9812-49e1-b561-\
9414f18302f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"m", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "All"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668152668388805`*^9, 3.866815274721874*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"7ddc0ac0-d350-4558-b744-fe063993b929"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "3", ",", "4", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8668152751508665`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"b4b2502a-a2af-48b9-b476-20e1515e330c"]
}, Open  ]],

Cell["A graph with self-loops is treated as a simple graph:", "Text",
 CellChangeTimes->{{3.8668152767648697`*^9, 
  3.8668152852338867`*^9}},ExpressionUUID->"b561ded5-61da-4ca4-a380-\
3857190f63c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {
        Null, {{1, 1}, {2, 3}, {1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 
         5}}}, {VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.8744707407638561`, 0.0002825349303535729}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.3870818283142377`, 0.6573646094445678}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.9373248470512775, 0.03519401159304095}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.48642594283116886`, 0.6570779197541875}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0., 0.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$5"]}, {
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], {
          BezierCurveBox[{
            DynamicLocation["VertexID$1", Automatic, Center], {
            2.0170205867545747`, 0.10901788295921112`}, {2.1894335173614263`, 
            0.07252173744698347}, {
            2.261921434269033, -0.022482240452581154`}, {
            2.112325809491284, -0.3064115164898664}, {
            1.9929799885237434`, -0.30034283195952705`}, {
            1.8653896606216502`, -0.17877435124380403`}, 
            DynamicLocation["VertexID$1", Automatic, Center]}, SplineDegree -> 
           7]}, 
         LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], 
           DynamicLocation["VertexID$2", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], 
           DynamicLocation["VertexID$3", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$2", Automatic, Center], 
           DynamicLocation["VertexID$3", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$2", Automatic, Center], 
           DynamicLocation["VertexID$4", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$3", Automatic, Center], 
           DynamicLocation["VertexID$4", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$3", Automatic, Center], 
           DynamicLocation["VertexID$5", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$4", Automatic, Center], 
           DynamicLocation["VertexID$5", Automatic, Center]}]}}], 
      Typeset`data}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        2, Typeset`graph, Typeset`boxes], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {}},
        ImageSizeCache->{{-3.239306690989906, 
         120.8923679154797}, {-34.99241304378446, 28.986245466500108`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{Typeset`data}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    ImageSize->120]}], ";"}]], "Input",
 CellChangeTimes->{{3.8668152866188855`*^9, 3.8668152906768713`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"1124b8cd-4a06-4647-8813-efd164128ef7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{"g", ",", "1", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8668152923188896`*^9, 3.866815319838876*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"8ddd3ce0-dae1-46d0-8567-550ea4590b51"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.866815320280885*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"dba184ef-1396-43a3-820e-f04fd8756ed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{
   RowBox[{"SimpleGraph", "[", "g", "]"}], ",", "1", ",", "5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8668153220038595`*^9, 3.8668153289688835`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"54654e3d-1e90-4637-bc0c-027e82bf10b4"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.866815329329878*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"ac2c73ca-2942-4805-a0c2-d0df2c940402"]
}, Open  ]],

Cell["\<\
The edge connectivity between two vertices is equal to the value of the \
maximum flow:\
\>", "Text",
 CellChangeTimes->{{3.866815335754439*^9, 
  3.8668153482184277`*^9}},ExpressionUUID->"1fb2b33e-625d-4dbb-87f3-\
61c166a37a07"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}, {4, 5}, {4, 
         6}, {4, 7}, {5, 6}, {5, 7}, {6, 7}}}, {
        VertexShapeFunction -> {"Name"}}]], Typeset`boxes, Typeset`boxes$s2d =
       GraphicsGroupBox[{{
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0., 0.3436245071479944}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.29820437257533094`, 0.6868915893208909}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.2979537638270201, 0.}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.9594417741150593, 0.3435232499721835}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.6217214610749133`, 0.6868989764752623}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.621353727067088, 0.00014268717051907354`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.9192869779634234`, 0.3432997584046557}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$7"]}, {
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}}]}}], 
      Typeset`data}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        2, Typeset`graph, Typeset`boxes], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {}},
        ImageSizeCache->{{0., 130.}, {-32.94713512019791, 29.}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{Typeset`data}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    ImageSize->130]}], ";"}]], "Input",
 CellChangeTimes->{{3.8668153489994216`*^9, 3.866815352703411*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"f619f476-fea3-431f-ac86-b28a31244a85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{"g", ",", "1", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.8668153543954253`*^9, 3.8668153598554196`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"e78ded20-c951-4e31-b42e-460f500f6017"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8668153602504416`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"95dd0be0-e4b9-43bb-954d-50433adbfa6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeConnectivity", "[", 
  RowBox[{"g", ",", "1", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.86681536184941*^9, 3.8668153648584366`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"fc1bda8f-24bb-405b-bbad-6d14188253d7"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8668153652204227`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"10ae1152-49a3-4eef-b354-758a1fd0e2be"]
}, Open  ]],

Cell["The vertex connectivity can be found using FindMaximumFlow:", "Text",
 CellChangeTimes->{{3.8668153670874248`*^9, 
  3.866815383363412*^9}},ExpressionUUID->"72b9b191-e530-4d61-94fe-\
50f88d69a07f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {{{1, 2}, {2, 3}, {3, 1}, {3, 4}, {4, 3}}, Null}, {
        EdgeStyle -> {
           Arrowheads[0.05]}, VertexShapeFunction -> {"Name"}}]], 
      Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.00007815208321548806, 0.}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0., 0.6253523078740326}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.6756960133420811, 0.31271173055285845`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.4983152206262567`, 0.31269682229511564`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"]}, {
         Arrowheads[0.037239533234726827`], 
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         StyleBox[
          ArrowBox[
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$2", Automatic, Center]}]], 
          Arrowheads[0.05], StripOnInput -> False], 
         StyleBox[
          ArrowBox[
           LineBox[{
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$3", Automatic, Center]}]], 
          Arrowheads[0.05], StripOnInput -> False], 
         StyleBox[
          ArrowBox[
           LineBox[{
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$1", Automatic, Center]}]], 
          Arrowheads[0.05], StripOnInput -> False], 
         StyleBox[
          ArrowBox[
           BezierCurveBox[{
             DynamicLocation["VertexID$3", Automatic, Center], {
             1.0870079319489896`, 0.4404411695249434}, 
             DynamicLocation["VertexID$4", Automatic, Center]}]], 
          Arrowheads[0.05], StripOnInput -> False], 
         StyleBox[
          ArrowBox[
           BezierCurveBox[{
             DynamicLocation["VertexID$4", Automatic, Center], {
             1.0870033020193484`, 0.1849673833230308}, 
             DynamicLocation["VertexID$3", Automatic, Center]}]], 
          Arrowheads[0.05], StripOnInput -> False]}}], Typeset`data}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        2, Typeset`graph, Typeset`boxes], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {}},
        ImageSizeCache->{{8.881784197001252*^-16, 120.}, {-34.91073555095547, 
         30.000000000000007`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{Typeset`data}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    ImageSize->120]}], ";"}]], "Input",
 CellChangeTimes->{{3.8668153847024145`*^9, 3.8668153893004246`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"5a4d4da6-78db-4da0-9433-2d40e36d81a3"],

Cell[BoxData[
 RowBox[{"VertexConnectivity", "[", 
  RowBox[{"g", ",", "1", ",", "4"}], "]"}]], "Input",ExpressionUUID->\
"a31a5377-6c0e-4460-b27b-d2d1216c97a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{"g", ",", "1", ",", "4", ",", 
   RowBox[{"VertexCapacity", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeCount", "[", "g", "]"}], ",", "1", ",", "1", ",", 
      RowBox[{"EdgeCount", "[", "g", "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"c296ee68-d8ad-4b60-92bb-d4633865b2c5"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8668153979934053`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"ca88f1de-c633-49ed-a058-fddd47a92124"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindMinimumCostFlow", "Chapter",
 CellChangeTimes->{{3.8668260047251835`*^9, 
  3.8668260101191745`*^9}},ExpressionUUID->"9365d948-f617-40c1-ae70-\
350d483946e4"],

Cell[CellGroupData[{

Cell["Basic Examples", "Section",
 CellChangeTimes->{{3.8668260123941736`*^9, 
  3.8668260143617363`*^9}},ExpressionUUID->"f4be960e-a071-4473-95b2-\
3ea1fa056e23"],

Cell["Find the minimum cost flow between supply and demand:", "Text",
 CellChangeTimes->{{3.8668260174457407`*^9, 
  3.866826024969714*^9}},ExpressionUUID->"45527169-9b98-4807-aec4-\
0c9ea17da3ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimumCostFlow", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {1, 5}, {5, 6}, {6, 4}, {2, 5}, {3, 
         6}}}, {ImagePadding -> 0, VertexLabels -> {
           Placed["Name", Center]}, VertexSize -> {0.4}, VertexStyle -> {
           GrayLevel[1]}}]], Typeset`boxes, Typeset`boxes$s2d = 
      GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         GrayLevel[1], 
         TagBox[{
           TagBox[
            DiskBox[{0., 0.42897706871433555`}, 0.17161351865969598`], 
            "DynamicName", BoxID -> "VertexID$1"], 
           InsetBox[
            FormBox["1", TraditionalForm], 
            DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.8711442467958503, 0.8586977125442921}, 
             0.17161351865969598`], "DynamicName", BoxID -> "VertexID$2"], 
           InsetBox[
            FormBox["2", TraditionalForm], 
            DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.0423402987397195`, 0.8587834669836574}, 
             0.17161351865969598`], "DynamicName", BoxID -> "VertexID$3"], 
           InsetBox[
            FormBox["3", TraditionalForm], 
            DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.9166090548556305`, 0.43030950233408893`}, 
             0.17161351865969598`], "DynamicName", BoxID -> "VertexID$4"], 
           InsetBox[
            FormBox["4", TraditionalForm], 
            DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
         TagBox[{
           TagBox[
            DiskBox[{0.8742468617007346, 0.}, 0.17161351865969598`], 
            "DynamicName", BoxID -> "VertexID$5"], 
           InsetBox[
            FormBox["5", TraditionalForm], 
            DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.0448634130927967`, 0.000719583252960454}, 
             0.17161351865969598`], "DynamicName", BoxID -> "VertexID$6"], 
           InsetBox[
            FormBox["6", TraditionalForm], 
            DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> 
          "VertexLabelID$6"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        ImageSizeCache->{{0.7999999999999998, 
         89.19999999999999}, {-20.623991454334167`, 15.309424141371423`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    ImagePadding->0], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[198]:=",ExpressionUUID->"83acb7f9-046c-4900-b23c-a5aa790b6d5e"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.8668260304457254`*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"d0345abc-1028-49f9-ae70-a58fc9a4214a"]
}, Open  ]],

Cell["\<\
Find the minimum cost maximum flow between two vertices in a graph:\
\>", "Text",
 CellChangeTimes->{{3.866826035355728*^9, 
  3.8668260473927236`*^9}},ExpressionUUID->"cfab37cf-7268-4e74-bcd0-\
c06b10133dea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalF]", "=", 
   RowBox[{"FindMinimumCostFlow", "[", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{
          "s", 1, 2, 3, 4, 5, 6, "t"}, {{{1, 2}, {1, 3}, {1, 4}, {2, 5}, {3, 
           6}, {4, 7}, {5, 8}, {6, 8}, {7, 8}, {4, 6}, {3, 5}}, Null}, {
          EdgeStyle -> {
             Arrowheads[0.06]}, 
           GraphLayout -> {
            "MultipartiteEmbedding", "VertexPartition" -> {1, 3, 3, 1}}, 
           ImagePadding -> 0, PerformanceGoal -> "Quality", VertexLabels -> {
             Placed["Name", Center]}, VertexSize -> {0.4}, VertexStyle -> {
             GrayLevel[1]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Arrowheads[0.028937842778793414`], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           Arrowheads[0.06], 
           ArrowBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           GrayLevel[1], 
           TagBox[{
             TagBox[
              DiskBox[{0., 0.}, 0.19541019662496859`], "DynamicName", BoxID -> 
              "VertexID$1"], 
             InsetBox[
              FormBox["\"s\"", TraditionalForm], 
              DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
           TagBox[{
             TagBox[
              DiskBox[{1., -0.9770509831248428}, 0.19541019662496859`], 
              "DynamicName", BoxID -> "VertexID$2"], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
           TagBox[{
             TagBox[
              DiskBox[{1., 0.}, 0.19541019662496859`], "DynamicName", BoxID -> 
              "VertexID$3"], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
           TagBox[{
             TagBox[
              DiskBox[{1., 0.9770509831248428}, 0.19541019662496859`], 
              "DynamicName", BoxID -> "VertexID$4"], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
           TagBox[{
             TagBox[
              DiskBox[{2., -0.9770509831248428}, 0.19541019662496859`], 
              "DynamicName", BoxID -> "VertexID$5"], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
           TagBox[{
             TagBox[
              DiskBox[{2., 0.}, 0.19541019662496859`], "DynamicName", BoxID -> 
              "VertexID$6"], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
           TagBox[{
             TagBox[
              DiskBox[{2., 0.9770509831248428}, 0.19541019662496859`], 
              "DynamicName", BoxID -> "VertexID$7"], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
           TagBox[{
             TagBox[
              DiskBox[{3., 0.}, 0.19541019662496859`], "DynamicName", BoxID -> 
              "VertexID$8"], 
             InsetBox[
              FormBox["\"t\"", TraditionalForm], 
              DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
              "Graphics"]}, "DynamicName", BoxID -> 
            "VertexLabelID$8"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{0.8000000000000007, 89.2}, {-34.08470956509562, 
           28.87877640317307}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->0], ",", "\"\<s\>\"", ",", "\"\<t\>\"", ",", 
     "\"\<OptimumFlowData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8668260486827345`*^9, 3.8668260608047233`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"002ae082-cbfe-451d-b832-05c4146ab7f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalF]", "[", "\"\<CostValue\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.866826064521734*^9, 3.866826070362736*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"2be7d974-ed36-472b-bcbc-8ff0605e3870"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.8668260707497253`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"8f207b94-cb62-4bef-aafc-8481d34f685b"]
}, Open  ]],

Cell["Highlight the flow:", "Text",
 CellChangeTimes->{{3.8668260731897283`*^9, 
  3.8668260754537272`*^9}},ExpressionUUID->"9f596e23-c1e5-4728-8c34-\
6ea37f956c6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalF]", "[", "\"\<FlowGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8668260761947207`*^9, 3.866826079727748*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"ce484dcc-22a4-4f0f-aa0d-92bb2b132782"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "s", 1, 2, 3, 4, 5, 6, "t"}, {{{1, 2}, {1, 3}, {1, 4}, {2, 5}, {3, 6}, {
       4, 7}, {5, 8}, {6, 8}, {7, 8}, {4, 6}, {3, 5}}, Null}, {EdgeStyle -> {
         Arrowheads[0.06], DirectedEdge[3, 5] -> Directive[
           Arrowheads[0.06], 
           RGBColor[0.7134, 0.7708, 0.94]], DirectedEdge[6, "t"] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge[2, 5] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge[4, "t"] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge["s", 2] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge["s", 3] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge[5, "t"] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge["s", 1] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge[3, 6] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]], DirectedEdge[2, 4] -> Directive[
           Arrowheads[0.06], 
           RGBColor[0.7134, 0.7708, 0.94]], DirectedEdge[1, 4] -> Directive[
           Arrowheads[0.06], 
           RGBColor[
           0.10986190585183486`, 0.149385824368658, 0.7333333333333333], 
           Thickness[0.008]]}, 
       GraphLayout -> {
        "VertexLayout" -> {
          "MultipartiteEmbedding", "VertexPartition" -> {1, 3, 3, 1}}, 
         "RenderingOrder" -> {
           DirectedEdge[2, 4], 
           DirectedEdge[3, 5], 
           DirectedEdge["s", 1], 
           DirectedEdge["s", 2], 
           DirectedEdge["s", 3], 
           DirectedEdge[1, 4], 
           DirectedEdge[2, 5], 
           DirectedEdge[3, 6], 
           DirectedEdge[4, "t"], 
           DirectedEdge[5, "t"], 
           DirectedEdge[6, "t"], "s", 1, 2, 3, 4, 5, 6, "t"}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> 0, PerformanceGoal -> 
       "Quality", VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {5 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), 6 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), 1 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), "t" -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), 4 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), "s" -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), 2 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& ), 3 -> ({
           GraphComputation`HighlightPrimitive[
            GraphComputation`GraphElementData["Circle"][
             SlotSequence[1]], 
            Directive[
             Thickness[0.01], 
             Opacity[1], 
             Hue[0.1]]]}& )}, VertexSize -> {0.4}, VertexStyle -> {
         GrayLevel[1], 6 -> RGBColor[0.7262455, 0.350534, 0.0223392], 1 -> 
         RGBColor[0.7262455, 0.350534, 0.0223392], "s" -> 
         RGBColor[0.890498, 0.440214, 0.00893568], 2 -> 
         RGBColor[0.7262455, 0.350534, 0.0223392], 3 -> 
         RGBColor[0.7262455, 0.350534, 0.0223392], 4 -> 
         RGBColor[0.7262455, 0.350534, 0.0223392], "t" -> 
         RGBColor[0.452491, 0.201068, 0.0446784], 5 -> 
         RGBColor[0.7262455, 0.350534, 0.0223392]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], DynamicLocation[
          "VertexID$8", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], DynamicLocation[
          "VertexID$8", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
          "VertexID$2", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
          "VertexID$3", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
          "VertexID$4", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
          "VertexID$5", Automatic, Center]}]}, 
       {RGBColor[0.7134, 0.7708, 0.94], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
          "VertexID$5", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
          "VertexID$6", Automatic, Center]}]}, 
       {RGBColor[0.7134, 0.7708, 0.94], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], DynamicLocation[
          "VertexID$6", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], DynamicLocation[
          "VertexID$7", Automatic, Center]}]}, 
       {RGBColor[0.10986190585183486`, 0.149385824368658, 0.7333333333333333],
         Thickness[0.008], Opacity[0.7], Arrowheads[0.06], 
        ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], DynamicLocation[
          "VertexID$8", Automatic, Center]}]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.890498, 0.440214, 0.00893568], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{0., 0.}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], DiskBox[{0., 0.}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$1"], 
          InsetBox["\<\"s\"\>", DynamicLocation["VertexID$1", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$1"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{1., -0.9770509831248428}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], 
             DiskBox[{1., -0.9770509831248428}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$2"], 
          InsetBox["1", DynamicLocation["VertexID$2", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$2"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{1., 0.}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], DiskBox[{1., 0.}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$3"], 
          InsetBox["2", DynamicLocation["VertexID$3", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$3"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{1., 0.9770509831248428}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], 
             DiskBox[{1., 0.9770509831248428}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$4"], 
          InsetBox["3", DynamicLocation["VertexID$4", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$4"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{2., -0.9770509831248428}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], 
             DiskBox[{2., -0.9770509831248428}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$5"], 
          InsetBox["4", DynamicLocation["VertexID$5", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$5"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{2., 0.}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], DiskBox[{2., 0.}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$6"], 
          InsetBox["5", DynamicLocation["VertexID$6", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$6"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.7262455, 0.350534, 0.0223392], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{2., 0.9770509831248428}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], 
             DiskBox[{2., 0.9770509831248428}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$7"], 
          InsetBox["6", DynamicLocation["VertexID$7", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$7"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[{
          TagBox[
           {RGBColor[0.452491, 0.201068, 0.0446784], 
            {EdgeForm[{Hue[0.1], Opacity[1], Thickness[0.01]}], FaceForm[
             None], DiskBox[{3., 0.}, 0.19541019662496859]}, 
            {EdgeForm[Thickness[0]], DiskBox[{3., 0.}, 0.19541019662496859]}},
           "DynamicName",
           BoxID -> "VertexID$8"], 
          InsetBox["\<\"t\"\>", DynamicLocation["VertexID$8", None, Center],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$8"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->0]], "Output",
 CellChangeTimes->{3.8668260801657295`*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"86ca7fde-27b7-40e4-aff4-5beb4627eef3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["OptimumFlowData", "Chapter",
 CellChangeTimes->{{3.8668260950477333`*^9, 
  3.8668261031647253`*^9}},ExpressionUUID->"933a82bc-6406-400b-bbb7-\
e85c0c31d9a6"],

Cell[CellGroupData[{

Cell["Basic Examples", "Section",
 CellChangeTimes->{{3.866826108530724*^9, 
  3.866826110639759*^9}},ExpressionUUID->"73c37f99-51ac-4187-b0ad-\
205429cfa902"],

Cell["Create an OptimumFlowData object using FindMaximumFlow:", "Text",
 CellChangeTimes->{{3.8668261123347273`*^9, 
  3.866826122329733*^9}},ExpressionUUID->"6e5f63fe-793c-48b1-983c-\
8ac44cdb05ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalF]", "=", 
  RowBox[{"FindMaximumFlow", "[", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6}, {
         Null, {{1, 2}, {2, 3}, {3, 4}, {1, 5}, {5, 6}, {6, 4}, {2, 5}, {3, 
          6}}}, {ImagePadding -> 0, VertexLabels -> {
            Placed["Name", Center]}, VertexSize -> {0.4}, VertexStyle -> {
            GrayLevel[1]}}]], Typeset`boxes, Typeset`boxes$s2d = 
       GraphicsGroupBox[{{
          Directive[
           Opacity[0.7], 
           Hue[0.6, 0.7, 0.5]], 
          LineBox[{{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$2", Automatic, Center]}, {
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$3", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}, {
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$4", Automatic, Center]}, {
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}, {
             DynamicLocation["VertexID$4", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}, {
             DynamicLocation["VertexID$5", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
          Directive[
           Hue[0.6, 0.2, 0.8], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[0.7]]]], 
          GrayLevel[1], 
          TagBox[{
            TagBox[
             DiskBox[{0., 0.42897706871433555`}, 0.17161351865969598`], 
             "DynamicName", BoxID -> "VertexID$1"], 
            InsetBox[
             FormBox["1", TraditionalForm], 
             DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
             "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
          TagBox[{
            TagBox[
             
             DiskBox[{0.8711442467958503, 0.8586977125442921}, 
              0.17161351865969598`], "DynamicName", BoxID -> "VertexID$2"], 
            InsetBox[
             FormBox["2", TraditionalForm], 
             DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
             "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
          TagBox[{
            TagBox[
             
             DiskBox[{2.0423402987397195`, 0.8587834669836574}, 
              0.17161351865969598`], "DynamicName", BoxID -> "VertexID$3"], 
            InsetBox[
             FormBox["3", TraditionalForm], 
             DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
             "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
          TagBox[{
            TagBox[
             
             DiskBox[{2.9166090548556305`, 0.43030950233408893`}, 
              0.17161351865969598`], "DynamicName", BoxID -> "VertexID$4"], 
            InsetBox[
             FormBox["4", TraditionalForm], 
             DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
             "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
          TagBox[{
            TagBox[
             DiskBox[{0.8742468617007346, 0.}, 0.17161351865969598`], 
             "DynamicName", BoxID -> "VertexID$5"], 
            InsetBox[
             FormBox["5", TraditionalForm], 
             DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
             "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
          TagBox[{
            TagBox[
             
             DiskBox[{2.0448634130927967`, 0.000719583252960454}, 
              0.17161351865969598`], "DynamicName", BoxID -> "VertexID$6"], 
            InsetBox[
             FormBox["6", TraditionalForm], 
             DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
             "Graphics"]}, "DynamicName", BoxID -> 
           "VertexLabelID$6"]}}], $CellContext`flag}, 
       TagBox[
        DynamicBox[GraphComputation`NetworkGraphicsBox[
         3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
         CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
          SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
         ImageSizeCache->{{0.7999999999999998, 
          89.19999999999999}, {-20.62399145433419, 15.309424141371402`}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False,
       UnsavedVariables:>{$CellContext`flag}]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     ImagePadding->0], ",", "1", ",", "4", ",", " ", 
    "\"\<OptimumFlowData\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8668261230787263`*^9, 3.866826133111723*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"82e79a71-d5f0-4dd1-a473-ab908954fca4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OptimumFlowData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             NamespaceBox[{{
                Directive[
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5]], FontFamily -> "Arial", 
                StyleBox[{
                  LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}]}, {
                  Directive[
                   Hue[1, 1, 0.7], 
                   Opacity[1]]}, StripOnInput -> False], {
                 LineBox[{
                   DynamicLocation["VertexID$1", Automatic, Center], 
                   DynamicLocation["VertexID$3", Automatic, Center]}]}, 
                StyleBox[{
                  LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}]}, {
                  Directive[
                   Hue[1, 1, 0.7], 
                   Opacity[1]]}, StripOnInput -> False], 
                StyleBox[{
                  LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}]}, {
                  Directive[
                   Hue[1, 1, 0.7], 
                   Opacity[1]]}, StripOnInput -> False], {
                 LineBox[{
                   DynamicLocation["VertexID$4", Automatic, Center], 
                   DynamicLocation["VertexID$2", Automatic, Center]}]}, {
                 LineBox[{
                   DynamicLocation["VertexID$4", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}, {
                 LineBox[{
                   DynamicLocation["VertexID$4", Automatic, Center], 
                   DynamicLocation["VertexID$6", Automatic, Center]}]}, 
                StyleBox[{
                  LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                  Directive[
                   Hue[1, 1, 0.7], 
                   Opacity[1]]}, StripOnInput -> False]}, {
                Directive[
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5]], FontFamily -> "Arial", 
                TagBox[
                 StyleBox[
                  DiskBox[{0., 0.}, 0.19499999999999998`], {
                   Directive[
                    Hue[1, 1, 0.7], 
                    EdgeForm[{
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]]}, StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  DiskBox[{0.85, -1.2}, 0.19499999999999998`], {
                   Directive[
                    Hue[1, 1, 0.7], 
                    EdgeForm[{
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]]}, StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  DiskBox[{0.85, 1.2}, 0.19499999999999998`], {
                   Directive[
                    Hue[1, 1, 0.7], 
                    EdgeForm[{
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]]}, StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"], 
                TagBox[
                 DiskBox[{2.15, -1.2}, 0.19499999999999998`], "DynamicName", 
                 BoxID -> "VertexID$4"], 
                TagBox[
                 StyleBox[
                  DiskBox[{2.15, 1.2}, 0.19499999999999998`], {
                   Directive[
                    Hue[1, 1, 0.7], 
                    EdgeForm[{
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]]}, StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$5"], 
                TagBox[
                 StyleBox[
                  DiskBox[{3., 0.}, 0.19499999999999998`], {
                   Directive[
                    Hue[1, 1, 0.7], 
                    EdgeForm[{
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]]}, StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$6"]}}], {
             AspectRatio -> 1, Background -> GrayLevel[0.93], 
              BaseStyle -> {FontFamily -> "Arial"}, 
              FrameLabel -> {None, None}, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], Frame -> True, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImagePadding -> 0, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
              PlotRange -> {{-0.5, 3.5}, {-2, 2}}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Flow value: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             NamespaceBox[{{
                Directive[
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5]], FontFamily -> "Arial", 
                StyleBox[{
                  LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}]}, {
                  Directive[
                   Hue[1, 1, 0.7], 
                   Opacity[1]]}, StripOnInput -> False], {
                 LineBox[{
                   DynamicLocation["VertexID$1", Automatic, Center], 
                   DynamicLocation["VertexID$3", Automatic, Center]}]}, 
                StyleBox[{
                  LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}]}, {
                  Directive[
                   Hue[1, 1, 0.7], 
                   Opacity[1]]}, StripOnInput -> False], 
                StyleBox[{
                  LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}]}, {
                  Directive[
                   Hue[1, 1, 0.7], 
                   Opacity[1]]}, StripOnInput -> False], {
                 LineBox[{
                   DynamicLocation["VertexID$4", Automatic, Center], 
                   DynamicLocation["VertexID$2", Automatic, Center]}]}, {
                 LineBox[{
                   DynamicLocation["VertexID$4", Automatic, Center], 
                   DynamicLocation["VertexID$5", Automatic, Center]}]}, {
                 LineBox[{
                   DynamicLocation["VertexID$4", Automatic, Center], 
                   DynamicLocation["VertexID$6", Automatic, Center]}]}, 
                StyleBox[{
                  LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                  Directive[
                   Hue[1, 1, 0.7], 
                   Opacity[1]]}, StripOnInput -> False]}, {
                Directive[
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5]], FontFamily -> "Arial", 
                TagBox[
                 StyleBox[
                  DiskBox[{0., 0.}, 0.19499999999999998`], {
                   Directive[
                    Hue[1, 1, 0.7], 
                    EdgeForm[{
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]]}, StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  DiskBox[{0.85, -1.2}, 0.19499999999999998`], {
                   Directive[
                    Hue[1, 1, 0.7], 
                    EdgeForm[{
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]]}, StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  DiskBox[{0.85, 1.2}, 0.19499999999999998`], {
                   Directive[
                    Hue[1, 1, 0.7], 
                    EdgeForm[{
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]]}, StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"], 
                TagBox[
                 DiskBox[{2.15, -1.2}, 0.19499999999999998`], "DynamicName", 
                 BoxID -> "VertexID$4"], 
                TagBox[
                 StyleBox[
                  DiskBox[{2.15, 1.2}, 0.19499999999999998`], {
                   Directive[
                    Hue[1, 1, 0.7], 
                    EdgeForm[{
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]]}, StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$5"], 
                TagBox[
                 StyleBox[
                  DiskBox[{3., 0.}, 0.19499999999999998`], {
                   Directive[
                    Hue[1, 1, 0.7], 
                    EdgeForm[{
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]]}, StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$6"]}}], {
             AspectRatio -> 1, Background -> GrayLevel[0.93], 
              BaseStyle -> {FontFamily -> "Arial"}, 
              FrameLabel -> {None, None}, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], Frame -> True, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImagePadding -> 0, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
              PlotRange -> {{-0.5, 3.5}, {-2, 2}}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Flow value: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Contributing vertices: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Contributing edges: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  OptimumFlowData[1, 
   Graph[{1, 2, 3, 4, 5, 6}, {
    Null, {{1, 2}, {2, 3}, {3, 4}, {1, 5}, {5, 6}, {6, 4}, {2, 5}, {3, 6}}}, {
    ImagePadding -> 0, VertexLabels -> {
       Placed["Name", Center]}, VertexSize -> {0.4}, VertexStyle -> {
       GrayLevel[1]}}], 2, SparseArray[
   Automatic, {6, 6}, 0, {
    1, {{0, 2, 3, 4, 4, 5, 6}, {{2}, {5}, {3}, {4}, {6}, {4}}}, {1, 1, 1, 1, 
     1, 1}}], 2, 1, 4, {}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.866826133770726*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"9d484a75-af26-49a7-a5d3-0a46eec4790e"]
}, Open  ]],

Cell["Obtain a list of properties:", "Text",
 CellChangeTimes->{{3.8668261387227225`*^9, 
  3.8668261444667273`*^9}},ExpressionUUID->"07a6a95d-5fea-4eae-a524-\
0b4a01ad60bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalF]", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8668261455287333`*^9, 3.8668261507227325`*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"82ac59a9-129b-467a-92a5-c38ac30671a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CostValue\"\>", ",", "\<\"EdgeList\"\>", 
   ",", "\<\"FlowGraph\"\>", ",", "\<\"FlowMatrix\"\>", 
   ",", "\<\"FlowTable\"\>", ",", "\<\"FlowValue\"\>", 
   ",", "\<\"Properties\"\>", ",", "\<\"ResidualGraph\"\>", 
   ",", "\<\"VertexList\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8668261510077143`*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"33413e27-ace3-407b-be18-1ef49a236c32"]
}, Open  ]],

Cell["Extract a property:", "Text",
 CellChangeTimes->{{3.8668261533457346`*^9, 
  3.8668261585907326`*^9}},ExpressionUUID->"378b650c-0b85-4422-94c1-\
e2c948fc1450"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalF]", "[", "\"\<FlowValue\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8668261593047333`*^9, 3.866826163773739*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"0257aef7-73bb-4d6f-903f-8ae89d03200b"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8668261640787363`*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"0db80203-56c9-463c-ac3e-469cc1ca9545"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GraphDistance", "Chapter",
 CellChangeTimes->{{3.8668261844687424`*^9, 
  3.866826186535726*^9}},ExpressionUUID->"41d452d4-e236-434c-ad23-\
c5e7070d5c7a"],

Cell[CellGroupData[{

Cell["Basic Examples", "Section",
 CellChangeTimes->{{3.866826190294734*^9, 
  3.866826192018708*^9}},ExpressionUUID->"4e4f9f46-9767-4ea4-a06d-\
7c045c905a96"],

Cell["Give the distance for a grid graph:", "Text",
 CellChangeTimes->{{3.866826194080727*^9, 
  3.8668261985157256`*^9}},ExpressionUUID->"b25b44b7-4811-4c44-91e2-\
9fe95feee45f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDistance", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
         SparseArray[
         Automatic, {12, 12}, 0, {
          1, {{0, 2, 5, 7, 10, 14, 17, 20, 24, 27, 29, 32, 34}, {{2}, {4}, {
            1}, {3}, {5}, {2}, {6}, {1}, {5}, {7}, {2}, {4}, {6}, {8}, {3}, {
            5}, {9}, {4}, {8}, {10}, {5}, {7}, {9}, {11}, {6}, {8}, {12}, {
            7}, {11}, {8}, {10}, {12}, {9}, {11}}}, Pattern}]}, {
        GraphLayout -> {"GridEmbedding", "Dimension" -> {3, 4}}, 
         VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$10", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$11", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1., 1.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1., 2.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1., 3.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {2., 1.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$4"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {2., 2.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$5"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {2., 3.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$6"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {3., 1.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$7"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {3., 2.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$8"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {3., 3.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$9"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {4., 1.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$10"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["11", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {4., 2.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$11"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["12", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {4., 3.}, BaseStyle -> "Graphics"], 
          "DynamicName", BoxID -> "VertexID$12"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        ImageSizeCache->{{0., 114.5}, {-45.66666666666667, 
         40.999999999999986`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    ImageSize->{114.5, Automatic}], ",", "1", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.8668261991767387`*^9, 3.8668262050017076`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"8ea60241-6f95-4606-8366-bbdb99c1d4cc"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8668262058167257`*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"1efbf0b6-2854-43ff-9cbf-829faf56d4a3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Section",
 CellChangeTimes->{{3.866826216922733*^9, 
  3.8668262196907244`*^9}},ExpressionUUID->"3d0da9a9-d564-47d7-a8b0-\
df48718186bf"],

Cell[CellGroupData[{

Cell["Method", "Subsection",
 CellChangeTimes->{{3.86682622114373*^9, 
  3.866826221794738*^9}},ExpressionUUID->"0fee3cda-b780-458f-a2da-\
04ead9ad6fe1"],

Cell["The method is automatically chosen, depending on input:", "Text",
 CellChangeTimes->{{3.8668262237497325`*^9, 
  3.866826231882735*^9}},ExpressionUUID->"49246f54-130b-4af0-b7c9-\
ae24d2abba00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"PetersenGraph", "[", 
    RowBox[{"4", ",", "1", ",", 
     RowBox[{"VertexSize", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", "Medium"}], ",", 
        RowBox[{"7", "->", "Medium"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Unweighted\>\""}]}], "]"}], ",", 
   RowBox[{"PetersenGraph", "[", 
    RowBox[{"4", ",", "1", ",", 
     RowBox[{"EdgeWeight", "->", 
      RowBox[{"{", 
       RowBox[{
       "4", ",", "0", ",", "3", ",", "1", ",", "3", ",", "2", ",", "7", ",", 
        "8", ",", "5", ",", "2", ",", "1", ",", "6"}], "}"}]}], ",", 
     RowBox[{"VertexSize", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", "Medium"}], ",", 
        RowBox[{"7", "->", "Medium"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Weighted\>\""}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.8668262333417177`*^9, 3.8668262954477205`*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"35151a03-2de2-4ea7-a1c2-78aae88356f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        PlotLabel -> "Unweighted", 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, VertexSize -> {7 -> Medium, 1 -> Medium}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {
            4, 8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}, 0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.1], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.1], DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotLabel->FormBox["\"Unweighted\"", TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {4, 
         8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}}, {
        EdgeWeight -> {4, 0, 3, 1, 3, 2, 7, 8, 5, 2, 1, 6}, PlotLabel -> 
         "Weighted", 
         VertexCoordinates -> {{1., 6.123233995736766*^-17}, {
          1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
          2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, VertexSize -> {7 -> Medium, 1 -> Medium}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1., 6.123233995736766*^-17}, {
         1.2246467991473532`*^-16, -1.}, {-1., -1.8369701987210297`*^-16}, \
{-2.4492935982947064`*^-16, 1.}, {2., 1.2246467991473532`*^-16}, {
         2.4492935982947064`*^-16, -2.}, {-2., -3.6739403974420594`*^-16}, \
{-4.898587196589413*^-16, 2.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{1, 2}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {3, 4}, {3, 7}, {
            4, 8}, {5, 6}, {5, 8}, {6, 7}, {7, 8}}, 0.03700564971751412]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.1], DiskBox[2, 0.03700564971751412], 
           DiskBox[3, 0.03700564971751412], DiskBox[4, 0.03700564971751412], 
           DiskBox[5, 0.03700564971751412], DiskBox[6, 0.03700564971751412], 
           DiskBox[7, 0.1], DiskBox[8, 0.03700564971751412]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotLabel->FormBox["\"Weighted\"", TraditionalForm]]}], "}"}]], "Output",
 CellChangeTimes->{3.8668262959197288`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"931042a8-e25d-4f41-97c9-27fecabe9f39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"GraphDistance", "[", 
    RowBox[{"g", ",", "1", ",", "7"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", "ListIcon", 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["2", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["1360", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {
       PetersenGraph[
       4, 1, VertexSize -> {1 -> Medium, 7 -> Medium}, PlotLabel -> 
        "Unweighted"], 
       PetersenGraph[
       4, 1, EdgeWeight -> {4, 0, 3, 1, 3, 2, 7, 8, 5, 2, 1, 6}, 
        VertexSize -> {1 -> Medium, 7 -> Medium}, PlotLabel -> "Weighted"]},
      SelectWithContents->True,
      Selectable->False]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866826306324709*^9, 3.8668263178377247`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"c9eb4497-7801-4ace-8ca5-8232976c61fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "7.`"}], "}"}]], "Output",
 CellChangeTimes->{3.8668263190377364`*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"a6cfe9ff-c4fb-4284-ada8-9ac7a5f0e00f"]
}, Open  ]],

Cell["\[OpenCurlyDoubleQuote]UnitWeight\[CloseCurlyDoubleQuote] method will \
the weight 1 for every edge:", "Text",
 CellChangeTimes->{{3.86682632577873*^9, 
  3.8668263340167103`*^9}},ExpressionUUID->"8dc4ae1f-715b-4cc3-9aed-\
fc20d95b2845"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"EdgeWeight", "->", 
    RowBox[{"{", 
     RowBox[{
     "5", ",", "2", ",", "2", ",", "5", ",", "1", ",", "2", ",", "2"}], 
     "}"}]}], ",", 
   RowBox[{"VertexSize", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "->", "Small"}], ",", 
      RowBox[{"5", "->", "Small"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866826335496738*^9, 3.8668263581987333`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"f57e91e6-5597-4608-976e-b5ef5a071317"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 2, 4, 7, 10, 12, 14}, {{2}, {3}, {1}, {4}, {1}, {4}, {5}, {
          2}, {3}, {6}, {3}, {6}, {4}, {5}}}, Pattern}]}, {
      EdgeWeight -> {5, 2, 2, 5, 1, 2, 2}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {2, 3}}, 
       VertexSize -> {1 -> Small, 5 -> Small}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {2., 1.}, {2., 2.}, {3., 1.}, {
       3., 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}}, 
          0.02261146496815286]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.05], DiskBox[6, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668263586657257`*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"29124527-2f59-4884-a58c-bc9b035b159f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDistance", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{"GridGraph", "[", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["672", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    GridGraph[{2, 3}, EdgeWeight -> {5, 2, 2, 5, 1, 2, 2}, 
     VertexSize -> {1 -> Small, 5 -> Small}],
    SelectWithContents->True,
    Selectable->False], ",", "1", ",", "5", ",", 
   RowBox[{"Method", "->", "\"\<UnitWeight\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668263539957466`*^9, 3.866826376625719*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"e29b832b-0159-4f8a-b6e8-8b93b93ea30b"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.866826377042715*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"bebd0552-aa45-4c2f-8317-387ab1c231cf"]
}, Open  ]],

Cell["\<\
\[OpenCurlyDoubleQuote]Dijkstra\[CloseCurlyDoubleQuote] can be used for \
graphs with positive edge weights only:\
\>", "Text",
 CellChangeTimes->{{3.866826379665723*^9, 
  3.8668264011247287`*^9}},ExpressionUUID->"535a7b4b-1ab7-4966-af8b-\
1524af9e7ba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"EdgeWeight", "->", 
    RowBox[{"{", 
     RowBox[{
     "2", ",", "5", ",", "2", ",", "1", ",", "5", ",", "2", ",", "2"}], 
     "}"}]}], ",", 
   RowBox[{"VertexSize", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "->", "Small"}], ",", 
      RowBox[{"5", "->", "Small"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866826402151726*^9, 3.866826420963747*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"a9182286-f75c-4092-90bf-d3b1b1a4ea7a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {Null, 
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 2, 4, 7, 10, 12, 14}, {{2}, {3}, {1}, {4}, {1}, {4}, {5}, {
          2}, {3}, {6}, {3}, {6}, {4}, {5}}}, Pattern}]}, {
      EdgeWeight -> {2, 5, 2, 1, 5, 2, 2}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {2, 3}}, 
       VertexSize -> {1 -> Small, 5 -> Small}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {2., 1.}, {2., 2.}, {3., 1.}, {
       3., 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}}, 
          0.02261146496815286]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.05], DiskBox[6, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.866826421344717*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"9ad4e50d-eb13-4860-b113-8d4d8b1a49e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDistance", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{"GridGraph", "[", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["672", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    GridGraph[{2, 3}, EdgeWeight -> {2, 5, 2, 1, 5, 2, 2}, 
     VertexSize -> {1 -> Small, 5 -> Small}],
    SelectWithContents->True,
    Selectable->False], ",", "1", ",", "5", ",", 
   RowBox[{"Method", "->", "\"\<Dijkstra\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668264241037087`*^9, 3.866826442719719*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"9d0d9202-95bf-484b-aeb3-a5ef97ca91a5"],

Cell[BoxData["8.`"], "Output",
 CellChangeTimes->{3.8668264430417304`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"b10f7d00-856f-4da6-9fc8-a4ee576aeec3"]
}, Open  ]],

Cell["\<\
\[OpenCurlyDoubleQuote]BellmanFord\[CloseCurlyDoubleQuote] can be used for \
directed graphs, including negative edge weights:\
\>", "Text",
 CellChangeTimes->{{3.8668264458867326`*^9, 
  3.866826462761735*^9}},ExpressionUUID->"9fd40a7f-0e40-4c9b-b189-\
67e64730d10f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WeightedAdjacencyGraph", "[", 
  RowBox[{
   RowBox[{"(", GridBox[{
      {"\[Infinity]", "2", "5", "\[Infinity]", "\[Infinity]", "\[Infinity]"},
      {"\[Infinity]", "\[Infinity]", "\[Infinity]", "2", "\[Infinity]", 
       "\[Infinity]"},
      {"\[Infinity]", "\[Infinity]", "\[Infinity]", "\[Infinity]", "5", 
       "\[Infinity]"},
      {"\[Infinity]", "\[Infinity]", 
       RowBox[{"-", "2"}], "\[Infinity]", "\[Infinity]", "2"},
      {"\[Infinity]", "\[Infinity]", "\[Infinity]", "\[Infinity]", 
       "\[Infinity]", "\[Infinity]"},
      {"\[Infinity]", "\[Infinity]", "\[Infinity]", "\[Infinity]", "2", 
       "\[Infinity]"}
     }], ")"}], ",", 
   RowBox[{"VertexSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "Small"}], ",", 
      RowBox[{"5", "\[Rule]", "Small"}]}], "}"}]}], ",", 
   RowBox[{"AbsoluteOptions", "[", 
    RowBox[{
     RowBox[{"GridGraph", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], "]"}], ",", "VertexCoordinates"}], 
    "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[215]:=",ExpressionUUID->"dba21433-cf62-4deb-9fe8-1a2e80b4b50d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {
       SparseArray[
       Automatic, {6, 6}, 0, {
        1, {{0, 2, 3, 4, 6, 6, 7}, {{2}, {3}, {4}, {5}, {3}, {6}, {5}}}, 
         Pattern}], Null}, {
      VertexSize -> {1 -> Small, 5 -> Small}, 
       EdgeWeight -> {2, 5, 2, 5, -2, 2, 2}, 
       VertexCoordinates -> {{1., 1.}, {1., 2.}, {2., 1.}, {2., 2.}, {3., 
        1.}, {3., 2.}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {2., 1.}, {2., 2.}, {3., 1.}, {
       3., 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{1, 2}, 0.02261146496815286], 
         ArrowBox[{1, 3}, 0.02261146496815286], 
         ArrowBox[{2, 4}, 0.02261146496815286], 
         ArrowBox[{3, 5}, 0.02261146496815286], 
         ArrowBox[{4, 3}, 0.02261146496815286], 
         ArrowBox[{4, 6}, 0.02261146496815286], 
         ArrowBox[{6, 5}, 0.02261146496815286]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.05], DiskBox[6, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668265425791073`*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"f3b62f67-653e-451d-a51e-96c0fb88ba70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDistance", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{"WeightedAdjacencyGraph", "[", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["1240", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    WeightedAdjacencyGraph[{{Infinity, 2, 5, Infinity, Infinity, Infinity}, {
      Infinity, Infinity, Infinity, 2, Infinity, Infinity}, {
      Infinity, Infinity, Infinity, Infinity, 5, Infinity}, {
      Infinity, Infinity, -2, Infinity, Infinity, 2}, {
      Infinity, Infinity, Infinity, Infinity, Infinity, Infinity}, {
      Infinity, Infinity, Infinity, Infinity, 2, Infinity}}, 
     VertexSize -> {1 -> Small, 5 -> Small}, 
     AbsoluteOptions[
      GridGraph[{2, 3}], VertexCoordinates]],
    SelectWithContents->True,
    Selectable->False], ",", "1", ",", "5", ",", 
   RowBox[{"Method", "->", "\"\<BellmanFord\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866826553886104*^9, 3.8668265707031074`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"ac92058c-9d38-44b2-a3bf-2f72e5031c01"],

Cell[BoxData["7.`"], "Output",
 CellChangeTimes->{3.8668265711040983`*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"435b97c8-7aa2-489e-92c2-5ed754b945de"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties & Relations", "Section",
 CellChangeTimes->{{3.8668265866971035`*^9, 
  3.8668265906030946`*^9}},ExpressionUUID->"993ca490-0e9d-47fe-9be0-\
be6547eb2387"],

Cell["\<\
The distance between two vertices can be found using FindShortestPath:\
\>", "Text",
 CellChangeTimes->{{3.866826592260092*^9, 
  3.866826602017095*^9}},ExpressionUUID->"274e65f4-012b-4c83-b996-\
d8135fbdfb56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GridGraph", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8668266026551*^9, 3.8668266103730974`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"ce653d28-29d9-4392-84ac-65b734ac3011"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
       SparseArray[
       Automatic, {12, 12}, 0, {
        1, {{0, 2, 5, 7, 10, 14, 17, 20, 24, 27, 29, 32, 34}, {{2}, {4}, {
          1}, {3}, {5}, {2}, {6}, {1}, {5}, {7}, {2}, {4}, {6}, {8}, {3}, {
          5}, {9}, {4}, {8}, {10}, {5}, {7}, {9}, {11}, {6}, {8}, {12}, {7}, {
          11}, {8}, {10}, {12}, {9}, {11}}}, Pattern}]}, {
      GraphLayout -> {"GridEmbedding", "Dimension" -> {3, 4}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {1., 3.}, {2., 1.}, {2., 2.}, {
       2., 3.}, {3., 1.}, {3., 2.}, {3., 3.}, {4., 1.}, {4., 2.}, {4., 3.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 4}, {2, 3}, {2, 5}, {3, 6}, {4, 5}, {4, 7}, {5,
           6}, {5, 8}, {6, 9}, {7, 8}, {7, 10}, {8, 9}, {8, 11}, {9, 12}, {10,
           11}, {11, 12}}, 0.030239520958083826`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.030239520958083826], DiskBox[2, 0.030239520958083826], 
         DiskBox[3, 0.030239520958083826], DiskBox[4, 0.030239520958083826], 
         DiskBox[5, 0.030239520958083826], DiskBox[6, 0.030239520958083826], 
         DiskBox[7, 0.030239520958083826], DiskBox[8, 0.030239520958083826], 
         DiskBox[9, 0.030239520958083826], DiskBox[10, 0.030239520958083826], 
         DiskBox[11, 0.030239520958083826], 
         DiskBox[12, 0.030239520958083826]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668266109290924`*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"d705fda7-44ec-4f84-96b8-ff8f7208cbde"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindShortestPath", "[", 
  RowBox[{"g", ",", "1", ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.866826613884101*^9, 3.8668266200851097`*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"f585aede-ea94-4d28-9577-fb8f676a0e38"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "6", ",", "9", ",", "12"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8668266205570984`*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"0dadb15d-6c25-48d2-a861-92c36179a66a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "[", 
   RowBox[{"FindShortestPath", "[", 
    RowBox[{"g", ",", "1", ",", "12"}], "]"}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.8668266236421065`*^9, 3.8668266277660975`*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"109831f7-df0d-4a77-b579-bd6a45527418"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8668266281430907`*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"a4cb9628-5f81-48ee-80e0-1c4dcfd10412"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDistance", "[", 
  RowBox[{"g", ",", "1", ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.866826635072107*^9, 3.8668266382950993`*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"5c97d246-33da-4ad3-9210-3df4afc72a6b"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.866826638810089*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"17882c5c-c8d9-4f9f-836e-0de804a37912"]
}, Open  ]],

Cell["Distance matrix:", "Text",
 CellChangeTimes->{{3.8668266419600964`*^9, 
  3.866826642789104*^9}},ExpressionUUID->"b7a6fc9d-63db-41d0-9040-\
0050fd9aa461"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphDistanceMatrix", "[", "g", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "12"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.866826644249104*^9, 3.866826649472108*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"fd625ac3-bc3f-4314-99f2-1605c7c87862"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8668266500390906`*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"0ddd2d62-db43-48ed-8368-769179d8abec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{"\"\<UnitedStates\>\"", ",", "\"\<BorderingCountries\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8668267217731094`*^9, 3.866826728384101*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"c0a2db0b-fa51-4345-bae4-204426489021"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Canada\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"Country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mexico\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", "\"Country\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.866826728914091*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"8e4d940c-b06a-4e5b-b2b7-c254673ef4a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UndirectedEdge", "[", 
    RowBox[{
     RowBox[{"CountryData", "@", "\"\<UnitedStates\>\""}], ",", "#"}], "]"}], 
   "&"}], "/@", 
  RowBox[{"CountryData", "[", 
   RowBox[{"\"\<UnitedStates\>\"", ",", "\"\<BorderingCountries\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8668267393061056`*^9, 3.8668267846371098`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"56737b2f-c076-483b-bebb-bf9af2221598"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"United States\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Canada\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"United States\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Mexico\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", "\"Country\""},
     "Entity"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.866826753434099*^9, 3.8668267849460945`*^9}},
 CellLabel->
  "Out[226]=",ExpressionUUID->"04b36354-3a75-4e3c-8dfe-6dc412716249"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"country", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{
        RowBox[{"CountryData", "@", "country"}], ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"CountryData", "[", 
      RowBox[{"country", ",", "\"\<BorderingCountries\>\""}], "]"}]}]}], 
   ")"}], "/@", 
  RowBox[{"CountryData", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.8668267932741013`*^9, 3.866826808155093*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"ec20ab00-837b-4771-9530-250337456124"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Afghanistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"China\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
                 "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Afghanistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Iran\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"Country\""}, 
                "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Afghanistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Pakistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Afghanistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Tajikistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Afghanistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Turkmenistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Afghanistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Uzbekistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Albania\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Greece\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Albania\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Kosovo\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Kosovo\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Kosovo\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Albania\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"North Macedonia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Albania\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Montenegro\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Algeria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Libya\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"Country\""},
                 "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Algeria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Mali\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"", "\"Country\""}, 
                "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Algeria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Mauritania\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Algeria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Morocco\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Algeria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Niger\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"", "\"Country\""},
                 "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Algeria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Tunisia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Algeria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Western Sahara\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Andorra\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"France\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Andorra\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Spain\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"Country\""},
                 "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Angola\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Democratic Republic of the Congo\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"DemocraticRepublicCongo\""}], 
                   "]"}], "\"Entity[\\\"Country\\\", \
\\\"DemocraticRepublicCongo\\\"]\"", "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Angola\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Namibia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Angola\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Republic of the Congo\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Angola\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Zambia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Argentina\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Bolivia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Argentina\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Brazil\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Argentina\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Chile\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", "\"Country\""},
                 "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Argentina\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Paraguay\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Argentina\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Uruguay\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Armenia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Azerbaijan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Armenia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Georgia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Armenia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Iran\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"Country\""}, 
                "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Armenia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Turkey\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Austria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Czech Republic\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Austria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Germany\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Austria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Hungary\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Austria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Italy\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"Country\""},
                 "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Austria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Liechtenstein\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Liechtenstein\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Liechtenstein\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Austria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Slovakia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Austria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Slovenia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Austria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Switzerland\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Azerbaijan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Armenia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Azerbaijan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Georgia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Azerbaijan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Iran\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"Country\""}, 
                "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Azerbaijan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Russia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Azerbaijan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Turkey\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         TemplateBox[{"216"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             TemplateBox[{"\"United Kingdom\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
               "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
             TemplateBox[{"\"Ireland\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"Country\""},
               "Entity"]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Canada\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Mexico\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Uruguay\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Argentina\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Uruguay\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Brazil\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Uzbekistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Afghanistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Uzbekistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Kazakhstan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Uzbekistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Kyrgyzstan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Uzbekistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Tajikistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Uzbekistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Turkmenistan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             TemplateBox[{"\"Vatican City\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"VaticanCity\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"VaticanCity\\\"]\"", 
               "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
             TemplateBox[{"\"Italy\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"Country\""}, 
              "Entity"]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Venezuela\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Brazil\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Venezuela\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Colombia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Venezuela\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Guyana\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Guyana\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Guyana\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Vietnam\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Cambodia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Vietnam\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"China\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
                 "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Vietnam\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Laos\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"", "\"Country\""}, 
                "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"West Bank\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Israel\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"West Bank\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Jordan\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Western Sahara\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Algeria\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Western Sahara\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Mauritania\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Western Sahara\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Morocco\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Yemen\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", "\"Country\""},
                 "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Oman\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"", "\"Country\""}, 
                "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Yemen\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", "\"Country\""},
                 "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Saudi Arabia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Zambia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Angola\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Zambia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Botswana\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Zambia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Democratic Republic of the Congo\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"DemocraticRepublicCongo\""}], 
                   "]"}], "\"Entity[\\\"Country\\\", \
\\\"DemocraticRepublicCongo\\\"]\"", "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Zambia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Malawi\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Malawi\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Malawi\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Zambia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Mozambique\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Mozambique\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Mozambique\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Zambia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Namibia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Zambia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Tanzania\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Zambia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Zimbabwe\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               TemplateBox[{"\"Zimbabwe\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Botswana\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Zimbabwe\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Mozambique\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Mozambique\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Mozambique\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Zimbabwe\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"South Africa\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"", 
                 "\"Country\""}, "Entity"]}], ",", 
             RowBox[{
               TemplateBox[{"\"Zimbabwe\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", 
                 "\"Country\""}, "Entity"], "\[UndirectedEdge]", 
               TemplateBox[{"\"Zambia\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", 
                 "\"Country\""}, "Entity"]}]}], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 227, "sessionID" -> 19444785039774168850, 
   "byteCount" -> 213360, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8668268614886475`*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"869cc1e7-434e-4578-acc6-d30ba69519aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"country", "\[Function]", 
     RowBox[{
      RowBox[{
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{
         RowBox[{"CountryData", "@", "country"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"CountryData", "[", 
       RowBox[{"country", ",", "\"\<BorderingCountries\>\""}], "]"}]}]}], 
    ")"}], "/@", 
   RowBox[{
    RowBox[{"CountryData", "[", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", "10"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668268871896467`*^9, 3.866826893982671*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"3adbe5e6-2b3c-4727-89ac-a5fd60ac66f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Iran\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Pakistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Tajikistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Turkmenistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Uzbekistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Albania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Greece\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Albania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Kosovo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Kosovo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Kosovo\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Albania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"North Macedonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Albania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Montenegro\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Libya\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Mali\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Mauritania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Morocco\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Niger\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Tunisia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Western Sahara\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Andorra\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"France\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Andorra\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Spain\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Angola\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Democratic Republic of the Congo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"DemocraticRepublicCongo\\\"]\"", 
      "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Angola\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Namibia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Angola\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Republic of the Congo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Angola\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Zambia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Bolivia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Chile\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Paraguay\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Uruguay\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", "\"Country\""},
     "Entity"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8668268959176607`*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"4b67ef90-7c01-49d4-9642-b501b2257dce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"country", "\[Function]", 
      RowBox[{
       RowBox[{
        RowBox[{"UndirectedEdge", "[", 
         RowBox[{
          RowBox[{"CountryData", "@", "country"}], ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"CountryData", "[", 
        RowBox[{"country", ",", "\"\<BorderingCountries\>\""}], "]"}]}]}], 
     ")"}], "/@", 
    RowBox[{
     RowBox[{"CountryData", "[", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", "50"}], "]"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.866826904621661*^9, 3.8668269281896596`*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"efe9d8df-b87a-4a51-9a90-6199a39d5495"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Iran\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Pakistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Tajikistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Turkmenistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Uzbekistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Albania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Greece\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Albania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Kosovo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Kosovo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Kosovo\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Albania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"North Macedonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Albania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Montenegro\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Libya\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Mali\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Mauritania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Morocco\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Niger\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Tunisia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Algeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Western Sahara\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Andorra\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"France\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Andorra\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Spain\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Angola\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Democratic Republic of the Congo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"DemocraticRepublicCongo\\\"]\"", 
      "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Angola\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Namibia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Angola\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Republic of the Congo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Angola\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Zambia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Bolivia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Chile\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Paraguay\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Uruguay\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Armenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Azerbaijan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Armenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Georgia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Armenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Iran\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Armenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Turkey\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Czech Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Germany\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Hungary\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Italy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Liechtenstein\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Liechtenstein\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Liechtenstein\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Slovakia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Slovenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Switzerland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Azerbaijan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Armenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Azerbaijan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Georgia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Azerbaijan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Iran\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Azerbaijan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Russia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Azerbaijan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Turkey\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bangladesh\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"India\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"India\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"India\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bangladesh\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Myanmar\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belarus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Latvia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belarus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Lithuania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belarus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Poland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belarus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Russia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belarus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Ukraine\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"France\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Germany\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Luxembourg\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Netherlands\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belize\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Guatemala\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belize\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Mexico\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Benin\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Burkina Faso\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Benin\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Niger\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Benin\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Nigeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Nigeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Nigeria\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Benin\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Togo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bhutan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bhutan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"India\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"India\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"India\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bolivia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bolivia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bolivia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Chile\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bolivia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Paraguay\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bolivia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Peru\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bosnia and Herzegovina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Croatia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bosnia and Herzegovina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Montenegro\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bosnia and Herzegovina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Serbia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Botswana\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Namibia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Botswana\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"South Africa\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Botswana\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Zambia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Botswana\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Zimbabwe\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Bolivia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Colombia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"French Guiana\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"FrenchGuiana\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"FrenchGuiana\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Guyana\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Guyana\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Guyana\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Paraguay\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Peru\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Suriname\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Uruguay\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Venezuela\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Brunei\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Malaysia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Greece\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"North Macedonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Romania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Serbia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Turkey\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Burkina Faso\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Benin\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Burkina Faso\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Ghana\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Ghana\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Ghana\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Burkina Faso\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Ivory Coast\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"IvoryCoast\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"IvoryCoast\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Burkina Faso\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Mali\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Burkina Faso\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Niger\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Burkina Faso\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Togo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Burundi\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Democratic Republic of the Congo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"DemocraticRepublicCongo\\\"]\"", 
      "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Burundi\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Rwanda\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Rwanda\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Rwanda\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Burundi\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Tanzania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cambodia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Laos\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cambodia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Thailand\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cambodia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Vietnam\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cameroon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Central African Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"", 
      "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cameroon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Chad\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cameroon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Equatorial Guinea\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"EquatorialGuinea\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"EquatorialGuinea\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cameroon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Gabon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Gabon\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Gabon\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cameroon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Nigeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Nigeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Nigeria\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cameroon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Republic of the Congo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Canada\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"United States\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Central African Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"", 
      "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Cameroon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Central African Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"", 
      "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Chad\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Central African Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"", 
      "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Democratic Republic of the Congo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"DemocraticRepublicCongo\\\"]\"", 
      "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Central African Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"", 
      "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Republic of the Congo\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Central African Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"", 
      "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"South Sudan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Central African Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"", 
      "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Sudan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Chad\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Cameroon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Chad\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Central African Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"", 
      "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Chad\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Libya\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Chad\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Niger\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Chad\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Nigeria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Nigeria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Nigeria\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Chad\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Sudan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Chile\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Argentina\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Chile\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Bolivia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Chile\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Peru\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Afghanistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Bhutan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"India\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"India\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"India\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Kazakhstan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Kyrgyzstan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Laos\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Mongolia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Myanmar\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Nepal\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"North Korea\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Pakistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Russia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Tajikistan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"China\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Vietnam\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Colombia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Brazil\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Colombia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Ecuador\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Ecuador\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Ecuador\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Colombia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Panama\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Panama\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Panama\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Colombia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Peru\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", "\"Country\""},
     "Entity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Colombia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"Country\""},
     "Entity"], "\[UndirectedEdge]", 
    TemplateBox[{"\"Venezuela\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", "\"Country\""},
     "Entity"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8668269079526644`*^9, 3.866826936609686*^9}},
 CellLabel->
  "Out[231]=",ExpressionUUID->"8d637181-2233-4769-ae73-ab1474a4cec0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", "%231", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[232]:=",ExpressionUUID->"4a9402ce-0142-4060-989a-093071404d63"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Entity["Country", "Afghanistan"], 
       Entity["Country", "China"], 
       Entity["Country", "Iran"], 
       Entity["Country", "Pakistan"], 
       Entity["Country", "Tajikistan"], 
       Entity["Country", "Turkmenistan"], 
       Entity["Country", "Uzbekistan"], 
       Entity["Country", "Albania"], 
       Entity["Country", "Greece"], 
       Entity["Country", "Kosovo"], 
       Entity["Country", "Macedonia"], 
       Entity["Country", "Montenegro"], 
       Entity["Country", "Algeria"], 
       Entity["Country", "Libya"], 
       Entity["Country", "Mali"], 
       Entity["Country", "Mauritania"], 
       Entity["Country", "Morocco"], 
       Entity["Country", "Niger"], 
       Entity["Country", "Tunisia"], 
       Entity["Country", "WesternSahara"], 
       Entity["Country", "Andorra"], 
       Entity["Country", "France"], 
       Entity["Country", "Spain"], 
       Entity["Country", "Angola"], 
       Entity["Country", "DemocraticRepublicCongo"], 
       Entity["Country", "Namibia"], 
       Entity["Country", "RepublicCongo"], 
       Entity["Country", "Zambia"], 
       Entity["Country", "Argentina"], 
       Entity["Country", "Bolivia"], 
       Entity["Country", "Brazil"], 
       Entity["Country", "Chile"], 
       Entity["Country", "Paraguay"], 
       Entity["Country", "Uruguay"], 
       Entity["Country", "Armenia"], 
       Entity["Country", "Azerbaijan"], 
       Entity["Country", "Georgia"], 
       Entity["Country", "Turkey"], 
       Entity["Country", "Austria"], 
       Entity["Country", "CzechRepublic"], 
       Entity["Country", "Germany"], 
       Entity["Country", "Hungary"], 
       Entity["Country", "Italy"], 
       Entity["Country", "Liechtenstein"], 
       Entity["Country", "Slovakia"], 
       Entity["Country", "Slovenia"], 
       Entity["Country", "Switzerland"], 
       Entity["Country", "Russia"], 
       Entity["Country", "Bangladesh"], 
       Entity["Country", "India"], 
       Entity["Country", "Myanmar"], 
       Entity["Country", "Belarus"], 
       Entity["Country", "Latvia"], 
       Entity["Country", "Lithuania"], 
       Entity["Country", "Poland"], 
       Entity["Country", "Ukraine"], 
       Entity["Country", "Belgium"], 
       Entity["Country", "Luxembourg"], 
       Entity["Country", "Netherlands"], 
       Entity["Country", "Belize"], 
       Entity["Country", "Guatemala"], 
       Entity["Country", "Mexico"], 
       Entity["Country", "Benin"], 
       Entity["Country", "BurkinaFaso"], 
       Entity["Country", "Nigeria"], 
       Entity["Country", "Togo"], 
       Entity["Country", "Bhutan"], 
       Entity["Country", "Peru"], 
       Entity["Country", "BosniaHerzegovina"], 
       Entity["Country", "Croatia"], 
       Entity["Country", "Serbia"], 
       Entity["Country", "Botswana"], 
       Entity["Country", "SouthAfrica"], 
       Entity["Country", "Zimbabwe"], 
       Entity["Country", "Colombia"], 
       Entity["Country", "FrenchGuiana"], 
       Entity["Country", "Guyana"], 
       Entity["Country", "Suriname"], 
       Entity["Country", "Venezuela"], 
       Entity["Country", "Brunei"], 
       Entity["Country", "Malaysia"], 
       Entity["Country", "Bulgaria"], 
       Entity["Country", "Romania"], 
       Entity["Country", "Ghana"], 
       Entity["Country", "IvoryCoast"], 
       Entity["Country", "Burundi"], 
       Entity["Country", "Rwanda"], 
       Entity["Country", "Tanzania"], 
       Entity["Country", "Cambodia"], 
       Entity["Country", "Laos"], 
       Entity["Country", "Thailand"], 
       Entity["Country", "Vietnam"], 
       Entity["Country", "Cameroon"], 
       Entity["Country", "CentralAfricanRepublic"], 
       Entity["Country", "Chad"], 
       Entity["Country", "EquatorialGuinea"], 
       Entity["Country", "Gabon"], 
       Entity["Country", "Canada"], 
       Entity["Country", "UnitedStates"], 
       Entity["Country", "SouthSudan"], 
       Entity["Country", "Sudan"], 
       Entity["Country", "Kazakhstan"], 
       Entity["Country", "Kyrgyzstan"], 
       Entity["Country", "Mongolia"], 
       Entity["Country", "Nepal"], 
       Entity["Country", "NorthKorea"], 
       Entity["Country", "Ecuador"], 
       Entity["Country", "Panama"]}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {8, 9}, {8, 
       10}, {8, 11}, {8, 12}, {13, 14}, {13, 15}, {13, 16}, {13, 17}, {13, 
       18}, {13, 19}, {13, 20}, {21, 22}, {21, 23}, {24, 25}, {24, 26}, {24, 
       27}, {24, 28}, {29, 30}, {29, 31}, {29, 32}, {29, 33}, {29, 34}, {35, 
       36}, {35, 37}, {35, 3}, {35, 38}, {39, 40}, {39, 41}, {39, 42}, {39, 
       43}, {39, 44}, {39, 45}, {39, 46}, {39, 47}, {36, 35}, {36, 37}, {36, 
       3}, {36, 48}, {36, 38}, {49, 50}, {49, 51}, {52, 53}, {52, 54}, {52, 
       55}, {52, 48}, {52, 56}, {57, 22}, {57, 41}, {57, 58}, {57, 59}, {60, 
       61}, {60, 62}, {63, 64}, {63, 18}, {63, 65}, {63, 66}, {67, 2}, {67, 
       50}, {30, 29}, {30, 31}, {30, 32}, {30, 33}, {30, 68}, {69, 70}, {69, 
       12}, {69, 71}, {72, 26}, {72, 73}, {72, 28}, {72, 74}, {31, 29}, {31, 
       30}, {31, 75}, {31, 76}, {31, 77}, {31, 33}, {31, 68}, {31, 78}, {31, 
       34}, {31, 79}, {80, 81}, {82, 9}, {82, 11}, {82, 83}, {82, 71}, {82, 
       38}, {64, 63}, {64, 84}, {64, 85}, {64, 15}, {64, 18}, {64, 66}, {86, 
       25}, {86, 87}, {86, 88}, {89, 90}, {89, 91}, {89, 92}, {93, 94}, {93, 
       95}, {93, 96}, {93, 97}, {93, 65}, {93, 27}, {98, 99}, {94, 93}, {94, 
       95}, {94, 25}, {94, 27}, {94, 100}, {94, 101}, {95, 93}, {95, 94}, {95,
        14}, {95, 18}, {95, 65}, {95, 101}, {32, 29}, {32, 30}, {32, 68}, {2, 
       1}, {2, 67}, {2, 50}, {2, 102}, {2, 103}, {2, 90}, {2, 104}, {2, 51}, {
       2, 105}, {2, 106}, {2, 4}, {2, 48}, {2, 5}, {2, 92}, {75, 31}, {75, 
       107}, {75, 108}, {75, 68}, {75, 79}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
tse+U7hK5EFFPYMFs5R2u98nfP4/w0vv8g==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{
          1, {9.921229180139452, -2.3343520495045733`}, 2}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          1, {9.79201120706559, -2.7759338276167855`}, 2}], 
          0.08274888968305108], ArrowBox[{1, 3}, 0.08274888968305108], 
         ArrowBox[{1, 4}, 0.08274888968305108], 
         ArrowBox[{1, 5}, 0.08274888968305108], 
         ArrowBox[{1, 6}, 0.08274888968305108], 
         ArrowBox[{1, 7}, 0.08274888968305108], 
         ArrowBox[{2, 4}, 0.08274888968305108], 
         ArrowBox[{2, 5}, 0.08274888968305108], 
         ArrowBox[{2, 48}, 0.08274888968305108], 
         ArrowBox[{2, 50}, 0.08274888968305108], 
         ArrowBox[{2, 51}, 0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          2, {10.89068194538158, -3.049369592168399}, 67}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          2, {10.643125888074936`, -3.2065387563739027`}, 67}], 
          0.08274888968305108], ArrowBox[{2, 90}, 0.08274888968305108], 
         ArrowBox[{2, 92}, 0.08274888968305108], 
         ArrowBox[{2, 102}, 0.08274888968305108], 
         ArrowBox[{2, 103}, 0.08274888968305108], 
         ArrowBox[{2, 104}, 0.08274888968305108], 
         ArrowBox[{2, 105}, 0.08274888968305108], 
         ArrowBox[{2, 106}, 0.08274888968305108], 
         ArrowBox[{3, 35}, 0.08274888968305108], 
         ArrowBox[{3, 36}, 0.08274888968305108], 
         ArrowBox[{8, 9}, 0.08274888968305108], 
         ArrowBox[{8, 10}, 0.08274888968305108], 
         ArrowBox[{8, 11}, 0.08274888968305108], 
         ArrowBox[{8, 12}, 0.08274888968305108], 
         ArrowBox[{9, 82}, 0.08274888968305108], 
         ArrowBox[{11, 82}, 0.08274888968305108], 
         ArrowBox[{12, 69}, 0.08274888968305108], 
         ArrowBox[{13, 14}, 0.08274888968305108], 
         ArrowBox[{13, 15}, 0.08274888968305108], 
         ArrowBox[{13, 16}, 0.08274888968305108], 
         ArrowBox[{13, 17}, 0.08274888968305108], 
         ArrowBox[{13, 18}, 0.08274888968305108], 
         ArrowBox[{13, 19}, 0.08274888968305108], 
         ArrowBox[{13, 20}, 0.08274888968305108], 
         ArrowBox[{14, 95}, 0.08274888968305108], 
         ArrowBox[{15, 64}, 0.08274888968305108], 
         ArrowBox[{18, 63}, 0.08274888968305108], 
         ArrowBox[{18, 64}, 0.08274888968305108], 
         ArrowBox[{18, 95}, 0.08274888968305108], 
         ArrowBox[{21, 22}, 0.08274888968305108], 
         ArrowBox[{21, 23}, 0.08274888968305108], 
         ArrowBox[{22, 57}, 0.08274888968305108], 
         ArrowBox[{24, 25}, 0.08274888968305108], 
         ArrowBox[{24, 26}, 0.08274888968305108], 
         ArrowBox[{24, 27}, 0.08274888968305108], 
         ArrowBox[{24, 28}, 0.08274888968305108], 
         ArrowBox[{25, 86}, 0.08274888968305108], 
         ArrowBox[{25, 94}, 0.08274888968305108], 
         ArrowBox[{26, 72}, 0.08274888968305108], 
         ArrowBox[{27, 93}, 0.08274888968305108], 
         ArrowBox[{27, 94}, 0.08274888968305108], 
         ArrowBox[{28, 72}, 0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          29, {10.095515865287608`, -15.387308043242111`}, 30}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          29, {10.050110231017918`, -15.5436785027885}, 30}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          29, {10.117933724789067`, -14.8806121853611}, 31}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          29, {10.368907055754187`, -15.149201840158842`}, 31}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          29, {10.188168813658862`, -15.72296958400141}, 32}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          29, {9.925440476177124, -15.868810308392971`}, 32}], 
          0.08274888968305108], ArrowBox[{29, 33}, 0.08274888968305108], 
         ArrowBox[{29, 34}, 0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          30, {10.332961613439412`, -15.027827803041063`}, 31}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          30, {10.629340578667195`, -15.140046998292464`}, 31}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          30, {10.403196702309002`, -15.870185201681911`}, 32}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          30, {10.185873999089752`, -15.859655466524378`}, 32}], 
          0.08274888968305108], ArrowBox[{30, 33}, 0.08274888968305108], 
         ArrowBox[{30, 68}, 0.08274888968305108], 
         ArrowBox[{31, 33}, 0.08274888968305108], 
         ArrowBox[{31, 34}, 0.08274888968305108], 
         ArrowBox[{31, 68}, 0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          31, {11.411897718426516`, -14.541031612375676`}, 75}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          31, {11.318307177566727`, -15.010242900273703`}, 75}], 
          0.08274888968305108], ArrowBox[{31, 76}, 0.08274888968305108], 
         ArrowBox[{31, 77}, 0.08274888968305108], 
         ArrowBox[{31, 78}, 0.08274888968305108], 
         ArrowBox[{31, 79}, 0.08274888968305108], 
         ArrowBox[{32, 68}, 0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          35, {7.049500632215279, -2.993044888765134}, 36}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          35, {6.940707472181063, -3.1589572429198007`}, 36}], 
          0.08274888968305108], ArrowBox[{35, 37}, 0.08274888968305108], 
         ArrowBox[{35, 38}, 0.08274888968305108], 
         ArrowBox[{36, 37}, 0.08274888968305108], 
         ArrowBox[{36, 38}, 0.08274888968305108], 
         ArrowBox[{36, 48}, 0.08274888968305108], 
         ArrowBox[{38, 82}, 0.08274888968305108], 
         ArrowBox[{39, 40}, 0.08274888968305108], 
         ArrowBox[{39, 41}, 0.08274888968305108], 
         ArrowBox[{39, 42}, 0.08274888968305108], 
         ArrowBox[{39, 43}, 0.08274888968305108], 
         ArrowBox[{39, 44}, 0.08274888968305108], 
         ArrowBox[{39, 45}, 0.08274888968305108], 
         ArrowBox[{39, 46}, 0.08274888968305108], 
         ArrowBox[{39, 47}, 0.08274888968305108], 
         ArrowBox[{41, 57}, 0.08274888968305108], 
         ArrowBox[{48, 52}, 0.08274888968305108], 
         ArrowBox[{49, 50}, 0.08274888968305108], 
         ArrowBox[{49, 51}, 0.08274888968305108], 
         ArrowBox[{50, 67}, 0.08274888968305108], 
         ArrowBox[{52, 53}, 0.08274888968305108], 
         ArrowBox[{52, 54}, 0.08274888968305108], 
         ArrowBox[{52, 55}, 0.08274888968305108], 
         ArrowBox[{52, 56}, 0.08274888968305108], 
         ArrowBox[{57, 58}, 0.08274888968305108], 
         ArrowBox[{57, 59}, 0.08274888968305108], 
         ArrowBox[{60, 61}, 0.08274888968305108], 
         ArrowBox[{60, 62}, 0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          63, {2.321128167693479, -9.443878045078344}, 64}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          63, {2.3336523184751363`, -9.142322126213893}, 64}], 
          0.08274888968305108], ArrowBox[{63, 65}, 0.08274888968305108], 
         ArrowBox[{63, 66}, 0.08274888968305108], 
         ArrowBox[{64, 66}, 0.08274888968305108], 
         ArrowBox[{64, 84}, 0.08274888968305108], 
         ArrowBox[{64, 85}, 0.08274888968305108], 
         ArrowBox[{65, 93}, 0.08274888968305108], 
         ArrowBox[{65, 95}, 0.08274888968305108], 
         ArrowBox[{68, 75}, 0.08274888968305108], 
         ArrowBox[{69, 70}, 0.08274888968305108], 
         ArrowBox[{69, 71}, 0.08274888968305108], 
         ArrowBox[{71, 82}, 0.08274888968305108], 
         ArrowBox[{72, 73}, 0.08274888968305108], 
         ArrowBox[{72, 74}, 0.08274888968305108], 
         ArrowBox[{75, 79}, 0.08274888968305108], 
         ArrowBox[{75, 107}, 0.08274888968305108], 
         ArrowBox[{75, 108}, 0.08274888968305108], 
         ArrowBox[{80, 81}, 0.08274888968305108], 
         ArrowBox[{82, 83}, 0.08274888968305108], 
         ArrowBox[{86, 87}, 0.08274888968305108], 
         ArrowBox[{86, 88}, 0.08274888968305108], 
         ArrowBox[{89, 90}, 0.08274888968305108], 
         ArrowBox[{89, 91}, 0.08274888968305108], 
         ArrowBox[{89, 92}, 0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          93, {5.332715836456285, -9.776156195054732}, 94}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          93, {5.3627063129426595`, -9.954181284165907}, 94}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          93, {4.6167579028803996`, -10.15049170301732}, 95}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          93, {4.564320370104661, -9.83047711506935}, 95}], 
          0.08274888968305108], ArrowBox[{93, 96}, 0.08274888968305108], 
         ArrowBox[{93, 97}, 0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          94, {4.902405476631119, -10.193909592659608`}, 95}], 
          0.08274888968305108], 
         ArrowBox[BezierCurveBox[{
          94, {4.819977467369714, -9.69586991560056}, 95}], 
          0.08274888968305108], ArrowBox[{94, 100}, 0.08274888968305108], 
         ArrowBox[{94, 101}, 0.08274888968305108], 
         ArrowBox[{95, 101}, 0.08274888968305108], 
         ArrowBox[{98, 99}, 0.08274888968305108]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.08274888968305108], DiskBox[2, 0.08274888968305108], 
         DiskBox[3, 0.08274888968305108], DiskBox[4, 0.08274888968305108], 
         DiskBox[5, 0.08274888968305108], DiskBox[6, 0.08274888968305108], 
         DiskBox[7, 0.08274888968305108], DiskBox[8, 0.08274888968305108], 
         DiskBox[9, 0.08274888968305108], DiskBox[10, 0.08274888968305108], 
         DiskBox[11, 0.08274888968305108], DiskBox[12, 0.08274888968305108], 
         DiskBox[13, 0.08274888968305108], DiskBox[14, 0.08274888968305108], 
         DiskBox[15, 0.08274888968305108], DiskBox[16, 0.08274888968305108], 
         DiskBox[17, 0.08274888968305108], DiskBox[18, 0.08274888968305108], 
         DiskBox[19, 0.08274888968305108], DiskBox[20, 0.08274888968305108], 
         DiskBox[21, 0.08274888968305108], DiskBox[22, 0.08274888968305108], 
         DiskBox[23, 0.08274888968305108], DiskBox[24, 0.08274888968305108], 
         DiskBox[25, 0.08274888968305108], DiskBox[26, 0.08274888968305108], 
         DiskBox[27, 0.08274888968305108], DiskBox[28, 0.08274888968305108], 
         DiskBox[29, 0.08274888968305108], DiskBox[30, 0.08274888968305108], 
         DiskBox[31, 0.08274888968305108], DiskBox[32, 0.08274888968305108], 
         DiskBox[33, 0.08274888968305108], DiskBox[34, 0.08274888968305108], 
         DiskBox[35, 0.08274888968305108], DiskBox[36, 0.08274888968305108], 
         DiskBox[37, 0.08274888968305108], DiskBox[38, 0.08274888968305108], 
         DiskBox[39, 0.08274888968305108], DiskBox[40, 0.08274888968305108], 
         DiskBox[41, 0.08274888968305108], DiskBox[42, 0.08274888968305108], 
         DiskBox[43, 0.08274888968305108], DiskBox[44, 0.08274888968305108], 
         DiskBox[45, 0.08274888968305108], DiskBox[46, 0.08274888968305108], 
         DiskBox[47, 0.08274888968305108], DiskBox[48, 0.08274888968305108], 
         DiskBox[49, 0.08274888968305108], DiskBox[50, 0.08274888968305108], 
         DiskBox[51, 0.08274888968305108], DiskBox[52, 0.08274888968305108], 
         DiskBox[53, 0.08274888968305108], DiskBox[54, 0.08274888968305108], 
         DiskBox[55, 0.08274888968305108], DiskBox[56, 0.08274888968305108], 
         DiskBox[57, 0.08274888968305108], DiskBox[58, 0.08274888968305108], 
         DiskBox[59, 0.08274888968305108], DiskBox[60, 0.08274888968305108], 
         DiskBox[61, 0.08274888968305108], DiskBox[62, 0.08274888968305108], 
         DiskBox[63, 0.08274888968305108], DiskBox[64, 0.08274888968305108], 
         DiskBox[65, 0.08274888968305108], DiskBox[66, 0.08274888968305108], 
         DiskBox[67, 0.08274888968305108], DiskBox[68, 0.08274888968305108], 
         DiskBox[69, 0.08274888968305108], DiskBox[70, 0.08274888968305108], 
         DiskBox[71, 0.08274888968305108], DiskBox[72, 0.08274888968305108], 
         DiskBox[73, 0.08274888968305108], DiskBox[74, 0.08274888968305108], 
         DiskBox[75, 0.08274888968305108], DiskBox[76, 0.08274888968305108], 
         DiskBox[77, 0.08274888968305108], DiskBox[78, 0.08274888968305108], 
         DiskBox[79, 0.08274888968305108], DiskBox[80, 0.08274888968305108], 
         DiskBox[81, 0.08274888968305108], DiskBox[82, 0.08274888968305108], 
         DiskBox[83, 0.08274888968305108], DiskBox[84, 0.08274888968305108], 
         DiskBox[85, 0.08274888968305108], DiskBox[86, 0.08274888968305108], 
         DiskBox[87, 0.08274888968305108], DiskBox[88, 0.08274888968305108], 
         DiskBox[89, 0.08274888968305108], DiskBox[90, 0.08274888968305108], 
         DiskBox[91, 0.08274888968305108], DiskBox[92, 0.08274888968305108], 
         DiskBox[93, 0.08274888968305108], DiskBox[94, 0.08274888968305108], 
         DiskBox[95, 0.08274888968305108], DiskBox[96, 0.08274888968305108], 
         DiskBox[97, 0.08274888968305108], DiskBox[98, 0.08274888968305108], 
         DiskBox[99, 0.08274888968305108], DiskBox[100, 0.08274888968305108], 
         DiskBox[101, 0.08274888968305108], DiskBox[102, 0.08274888968305108],
          DiskBox[103, 0.08274888968305108], 
         DiskBox[104, 0.08274888968305108], DiskBox[105, 0.08274888968305108],
          DiskBox[106, 0.08274888968305108], 
         DiskBox[107, 0.08274888968305108], 
         DiskBox[108, 0.08274888968305108]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668269462358847`*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"39412052-9d0e-4b7f-ba09-e174ac78831f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"DeleteMissing", "@", 
   RowBox[{"Union", "@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"country", "\[Function]", 
        RowBox[{
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{
            RowBox[{"CountryData", "@", "country"}], ",", "#"}], "]"}], "&"}],
          "/@", 
         RowBox[{"CountryData", "[", 
          RowBox[{"country", ",", "\"\<BorderingCountries\>\""}], "]"}]}]}], 
       ")"}], "/@", 
      RowBox[{"DeleteMissing", "@", 
       RowBox[{"CountryData", "[", "]"}]}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668269614648986`*^9, 3.866826983345913*^9}, {
  3.8668270390708857`*^9, 3.8668270419768944`*^9}, {3.8668271155838985`*^9, 
  3.866827132883891*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"751fa488-fe3d-4f6e-a2d3-4a28db9a5b2b"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Entity["Country", "Afghanistan"], 
       Entity["Country", "China"], 
       Entity["Country", "Iran"], 
       Entity["Country", "Pakistan"], 
       Entity["Country", "Tajikistan"], 
       Entity["Country", "Turkmenistan"], 
       Entity["Country", "Uzbekistan"], 
       Entity["Country", "Albania"], 
       Entity["Country", "Greece"], 
       Entity["Country", "Kosovo"], 
       Entity["Country", "Macedonia"], 
       Entity["Country", "Montenegro"], 
       Entity["Country", "Algeria"], 
       Entity["Country", "Libya"], 
       Entity["Country", "Mali"], 
       Entity["Country", "Mauritania"], 
       Entity["Country", "Morocco"], 
       Entity["Country", "Niger"], 
       Entity["Country", "Tunisia"], 
       Entity["Country", "WesternSahara"], 
       Entity["Country", "Andorra"], 
       Entity["Country", "France"], 
       Entity["Country", "Spain"], 
       Entity["Country", "Angola"], 
       Entity["Country", "DemocraticRepublicCongo"], 
       Entity["Country", "Namibia"], 
       Entity["Country", "RepublicCongo"], 
       Entity["Country", "Zambia"], 
       Entity["Country", "Argentina"], 
       Entity["Country", "Bolivia"], 
       Entity["Country", "Brazil"], 
       Entity["Country", "Chile"], 
       Entity["Country", "Paraguay"], 
       Entity["Country", "Uruguay"], 
       Entity["Country", "Armenia"], 
       Entity["Country", "Azerbaijan"], 
       Entity["Country", "Georgia"], 
       Entity["Country", "Turkey"], 
       Entity["Country", "Austria"], 
       Entity["Country", "CzechRepublic"], 
       Entity["Country", "Germany"], 
       Entity["Country", "Hungary"], 
       Entity["Country", "Italy"], 
       Entity["Country", "Liechtenstein"], 
       Entity["Country", "Slovakia"], 
       Entity["Country", "Slovenia"], 
       Entity["Country", "Switzerland"], 
       Entity["Country", "Russia"], 
       Entity["Country", "Bangladesh"], 
       Entity["Country", "India"], 
       Entity["Country", "Myanmar"], 
       Entity["Country", "Belarus"], 
       Entity["Country", "Latvia"], 
       Entity["Country", "Lithuania"], 
       Entity["Country", "Poland"], 
       Entity["Country", "Ukraine"], 
       Entity["Country", "Belgium"], 
       Entity["Country", "Luxembourg"], 
       Entity["Country", "Netherlands"], 
       Entity["Country", "Belize"], 
       Entity["Country", "Guatemala"], 
       Entity["Country", "Mexico"], 
       Entity["Country", "Benin"], 
       Entity["Country", "BurkinaFaso"], 
       Entity["Country", "Nigeria"], 
       Entity["Country", "Togo"], 
       Entity["Country", "Bhutan"], 
       Entity["Country", "Peru"], 
       Entity["Country", "BosniaHerzegovina"], 
       Entity["Country", "Croatia"], 
       Entity["Country", "Serbia"], 
       Entity["Country", "Botswana"], 
       Entity["Country", "SouthAfrica"], 
       Entity["Country", "Zimbabwe"], 
       Entity["Country", "Colombia"], 
       Entity["Country", "FrenchGuiana"], 
       Entity["Country", "Guyana"], 
       Entity["Country", "Suriname"], 
       Entity["Country", "Venezuela"], 
       Entity["Country", "Brunei"], 
       Entity["Country", "Malaysia"], 
       Entity["Country", "Bulgaria"], 
       Entity["Country", "Romania"], 
       Entity["Country", "Ghana"], 
       Entity["Country", "IvoryCoast"], 
       Entity["Country", "Burundi"], 
       Entity["Country", "Rwanda"], 
       Entity["Country", "Tanzania"], 
       Entity["Country", "Cambodia"], 
       Entity["Country", "Laos"], 
       Entity["Country", "Thailand"], 
       Entity["Country", "Vietnam"], 
       Entity["Country", "Cameroon"], 
       Entity["Country", "CentralAfricanRepublic"], 
       Entity["Country", "Chad"], 
       Entity["Country", "EquatorialGuinea"], 
       Entity["Country", "Gabon"], 
       Entity["Country", "Canada"], 
       Entity["Country", "UnitedStates"], 
       Entity["Country", "SouthSudan"], 
       Entity["Country", "Sudan"], 
       Entity["Country", "Kazakhstan"], 
       Entity["Country", "Kyrgyzstan"], 
       Entity["Country", "Mongolia"], 
       Entity["Country", "Nepal"], 
       Entity["Country", "NorthKorea"], 
       Entity["Country", "Ecuador"], 
       Entity["Country", "Panama"], 
       Entity["Country", "CostaRica"], 
       Entity["Country", "Nicaragua"], 
       Entity["Country", "Uganda"], 
       Entity["Country", "Denmark"], 
       Entity["Country", "Djibouti"], 
       Entity["Country", "Eritrea"], 
       Entity["Country", "Ethiopia"], 
       Entity["Country", "Somalia"], 
       Entity["Country", "DominicanRepublic"], 
       Entity["Country", "Haiti"], 
       Entity["Country", "EastTimor"], 
       Entity["Country", "Indonesia"], 
       Entity["Country", "Egypt"], 
       Entity["Country", "GazaStrip"], 
       Entity["Country", "Israel"], 
       Entity["Country", "ElSalvador"], 
       Entity["Country", "Honduras"], 
       Entity["Country", "Estonia"], 
       Entity["Country", "Kenya"], 
       Entity["Country", "Finland"], 
       Entity["Country", "Norway"], 
       Entity["Country", "Sweden"], 
       Entity["Country", "Monaco"], 
       Entity["Country", "Gambia"], 
       Entity["Country", "Senegal"], 
       Entity["Country", "Gibraltar"], 
       Entity["Country", "Guinea"], 
       Entity["Country", "GuineaBissau"], 
       Entity["Country", "Liberia"], 
       Entity["Country", "SierraLeone"], 
       Entity["Country", "PapuaNewGuinea"], 
       Entity["Country", "Iraq"], 
       Entity["Country", "Jordan"], 
       Entity["Country", "Kuwait"], 
       Entity["Country", "SaudiArabia"], 
       Entity["Country", "Syria"], 
       Entity["Country", "Ireland"], 
       Entity["Country", "UnitedKingdom"], 
       Entity["Country", "Lebanon"], 
       Entity["Country", "WestBank"], 
       Entity["Country", "SanMarino"], 
       Entity["Country", "VaticanCity"], 
       Entity["Country", "Lesotho"], 
       Entity["Country", "Malawi"], 
       Entity["Country", "Mozambique"], 
       Entity["Country", "Moldova"], 
       Entity["Country", "Swaziland"], 
       Entity["Country", "SouthKorea"], 
       Entity["Country", "Oman"], 
       Entity["Country", "UnitedArabEmirates"], 
       Entity["Country", "Yemen"], 
       Entity["Country", "Portugal"], 
       Entity["Country", "Qatar"], 
       Entity["Country", "SaintMartin"], 
       Entity["Country", "SintMaarten"]}, {Null, CompressedData["
1:eJwVk/lfIQ0AxtfIfZVqGIapMAxhcquEkrNjI5kIHY5uW9rdpFa1a1VL7Nbu
prba4x99e395np+/z+f79K8WwqvAq1evPr/E/00CSGRSB4lCopJodAadSWfR
2Rwuh8fp5HRx+JxuTk8v2CsQQkKRUCyEJVIJIumT9EsGZHKZQkaWoUqVElOq
lRrloFKr1Cn1cplcISfLcTk6ZBgymswmi8lqwk02O2jH7MP2kVHH6JjT5eQ7
3c7xCWDCIJVIEWmftF/qmfROsid9fpE/4If9QUSCSJEQMoVMI/2IB5lBBpDZ
13NhRpgVjoR9YdTldM27oi6ei+8aX4AWYgvEYnwxsbiUTCXTyeXkStKdFK+u
pZKpdApKiVOZVDadTKfS3DQ/7U5n+yR90j4PQAImAAOQA/JAHFgHjMAGsAl0
ADhAAZZCSGgrtB3yhGZ3dne2vZNetZft9Xl1KqUKU1lVWkgILUApSAzFoAxE
QAUIfoPt7e8V9w7evnt/uBXa8pSOSuUSt5Q9dhyfLCeXV/b39ov72Q/mD3hx
r7hfrBQPipli9vTsFD89B3tBO4iBGnAY/AgKQP0UMjWzklxZXhF/qh6VjsoK
mUKuwBUopsTsmAp7g4HYMDaCWTH9vGs+Oj/+WcCgM8IMFgN1jDqOHSeOsdpF
LVq7rPFq1drVRe2iOo1Mz0zPvnt7cnziONlVK9VedUTtU2vVOrXNMGSYMAAG
o2HD0HH4/nDu8AuZRJaR5eQ6uYOMkql1cr1Rv6436606+vVbuVQ+KjfKN+VW
+Vaj1ICa7xqdRq/5EXVF56O16GWU16g3yo1mo9W4zQG5fA7PUXO0SrFyUMlU
iEqBSWeymGym77p+3cwD+VyekqfFF+NA3BhPxJfMJvMHs8WM35RvWj8Dl7XL
6OUVl8NNc0tcPjfL7R5UDuotJovZYrXgw/ZhcBhj0VlhFoPFZPnu2nfEHTz3
eu5wLsHj8Fy8Gi/K6+TxedVOTievs9rZMzY65hhbu4/c2z6C68A6zqazJ9le
NpPt6+J0Cbp62nftQPuhTbThdtA4ZASMBmPcmBAJRX5RQARvABuGEfsItruz
e8Ln8J18Fz/N5/J5fLfb6U66027+JrCJb/46Oz3Dz84fm49Pj88dpA6gw9BB
3g5t73w57Jf0S190lnoQT58n5NmymqwqK2a1WHGr1mr7LfjTFAvFSXFKDIlX
IuGIOnIf8UVsuBw34QD+AT/FFXgON+MWfB3fxM9wK26LLcSgGBEr/P33XdOs
NxvN6+Zj80/zqflc/VStVS+qL/C+SV/Y5/WpfUwfy8f2Ra5qV5f//mqVWpVW
rbVqbTqlzqtT6zQHewfFg0rAH/gZaAdEgYdA8NdmJpWBMsVMJZPNFAS9AlDw
WdAl+J19uVO2lN3PFrPcbGYGmZmamX5oPwTOT8/P9Eo9qMf0Gv1gq94qtxqt
mxZKIVEASp5CIxYIiKgQd0SbiBEFAk4sJuKJuYRx3DnuGp/v5nRzURkqR8Oo
AmWgZLSOtqgkKpmao9IKUKFSiBUyBcJmsqlt9zar7WUYm/bp8an57eva6trY
gGQAoZFoOVqeRqFRf2hmkdnQ7PTS4hKwFL8t3zZ6OD2dPV3Pj89NWAj7YQi+
g9uwCCbgYNAfbAcDQfg/bKxcmA==
       "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
7eCA38u9FBBxUt6ftZpARrF6M6oqFOhLWK8jwoPz6qu8hx28FNAwZBvYJkAg
MRu7e8++i8PDLsHtkqL4fVppHl+DOOzzSbAqx3h6+vOBWEuBONCqHP8MyREo
SlHGQThaHKhaHHJPcZ66oy56IrVYFBTYIlyvjOJ+ftfwD8Z69TGsjLFmjkAe
QQLd3Edw7aHz4DwrzrfDg++cdopCo/ixilY8X7EVVWIX5EWB/7QM8UkI140G
s5m8ovCq8U5ONs7LdSZURuGkCOg2hR4TkyVRWbjpwyftIpDt93SPIc5LgRfj
HIRwflF1LqA11DBQrMltJx7s/23W7uDtLWSgJZfZS59wXqGYGPt+SGOgjmzf
+oAoKrza0u36KIaB1DjsvNrSqFC/X90rNYiBtPwnjn29QwXb2nenvY8wUOH1
CusMnAdM9GX/WmI/fUvvyY5xnI9L8p6WGFoyULu9UH2oKB2CzfgMj5fSkb1F
UfwBJTrw/G3b7p9HR9lclPRaYzroFX0n09PpiOf+K6HLjnR4ndNxsy+Rjrbt
MBlsDKADx/jCP9NYOhr+0l5mcwnvtz+9eCSSjti5qicVCulwW4Pwvn+ajuIc
JyZ0ER3kzKdcyoPp6NLg/B0FTyrs3vtTrmuGgYR1VO7oRlKh6dhT+ocpBlJ1
Fhrjv4bzsInxQM4YPv98TvX1+1Twrhq8uGmIgXgTJc53vKHCnVVcI0W9DBSs
3cJaNEAF3YXfRyc7GKh22mAt1yIVPG/ybBdqYiCj4faO7wI0+Lu3dTcFMZAP
h4JViCUdGlcY/cZ0BjpZoG7c7E4HRbeqJC2cLwaa5xXPnqYD/RufgBg7zid6
iSpXLtOh1KSY+WsWnz/Pv2PyJh3KnNnlWobpiNY3zRNfQwd7+3TK/U46SlrQ
17Nvxu8np54pfkVHuZWOW6z66LANdE+iCjp64vioR0EJ+/dBvZRzrDjP15++
UqBDhR3CG3d14JqrseOIyDYqWHwabspnw/73c65iqBkVJN4nZv1mJ5CC+ZmH
zbZU+DC9Z/45J4HSOU5MsLtQoX3rh9cCXAT6E+35nH6MCh8tv1Z+xvOjzsu6
STAQ42tCYR1zLYECW/5lJa+iwaYLsYNvgEDJMd877HlokORd/vyCEYGUY06y
/BKmQT3pOvYM66//vTFfKwYN0NHSvuNm2D8cE8sJ3ECDmuqAj/FWBJqguFH3
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
Ol4fmp3b94MFJ5LLCr5x6Kh74vWFKeInjOa4L7uvoOOTyP0nt82yYLVXowDd
hvitj04NSXMscD3rKMR2IP1zpfXprAXCT/tIr2vOdPR74P/hNA/Bd/hqtY07
HQW7fKaZ8WTernEQCiZ+V87x0kaZRDIv+z12qpLz8RacE1K9zILdd5Kqz5F5
eF/QZ5M7mc+hzxVrUgl/10rxrXpC8Iox+Gi8g/jbdwW9nesJXpbJBoqts8QP
p+77xUPwKiwbyfy4QENjxzU+3dks+Hiv0/gGL+FDqvUTnR7SX4t+tb3dRMfM
m1dsNYhehqT+8Bm4Ev7mbYiAYRbUm81XqHnQkVOeInJklAXf/7z+VbKLjtMa
du4viZ/K8ZgV6vKiI8P8vxEmwasn3CAi0YeOl4YDRMumWFAXNm7YQ/QVLbtN
0/YvC8KrCxQfBNDRo0C81Z/UfyhINGuB6Llftv24AalfjV3zZj3Bg/tTZGTj
JXK/6oOL+4meWXYWOy2SSf36PElFQzTMd95z9SzJE4tUu9gPxmho61ncnkbw
aB+++25mkob7r75rj7tO+C7wapkPwSOyzzPIgeDjuUrztQA34efWoV0VZSyw
PjCXNEzO13fp+bU1FYQPKUncBYfpyB0tcvw2yYN6we6pV4/TUdHgP9NOko+4
21pLss6R+vmOKrU/JPy1bTjbQPyD6vI7F24QPfLqbLDkJf5hwE5Q2YT0L7db
BxY2kjwgSx30SSHrisylvXk5dJQ48cDT4yzxq8dj193uouFq9sXip2Rtfwy0
uAZIHrX9aeF2jgUZv3eM2Y/SUP8YvUQtggV7u0ayokh9wpssk+jEj2U79h8u
JPWpzcZvdIwi+ORtintA6rOZeGNcfJ7gF6GomS1IR1GdSl+IYcHOe6UX/STp
eDOL7ZZH+LGqJ2rz2nA6Vow9+eNN+k+SQt/MJ1Jfj8qXP1tyCJ5mlA2upL6j
+izWIZJ34/69/X71Mh0n2B7+D/MIPj8KLmWm0lHtuvQaXZKP3/1pFgnMpKO1
/wvHeqK/06PfN1FI/qnviFk4X8IC47uZ55yKiF9y/LmrmPD5k3bCmpck/wWv
v23+gtzX94NSc2NEr3JZBhUlGUQ/Zc0/IwgeBUsCRv3IeY793FOQQvAoffeB
7xf5fbeXy3YqEz/45bjuTmvyew2zFKoEyXe7Lo16exC953YvX+dNpeMNynSp
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
mCdZzgKV4PyBSo4hGdJ7LKGazgLNOyc/XVQ2JEtLx7ezw1nwbWyXh4ci+uVf
Or4cDxZYjMb4XkX/45NaaaFnyQI/rxKnaTcNSPbbw0Z+nxgg3FFoM6/BgIga
/LqT9pABPnCj5E0N6mMrXe5AAwNyAws1AisMiCNr6eWwcwwIrZuZcanYgHwY
CzFclsGAhc61HxtQL29/F3okOBbjpb7ZHsk1IPFWl759CWaAhUDzmwDzd2LX
zqrHngx49GbRxBN11DOPq3ODspUhWZw9UoX3FxOR8QrIU4bqplXl8fMMiXuP
6gqxk8owutszeJkM5uv8iyWLC5Xhjr5hpOQMQ9Ko5zs0B/2Vle9+5U6s/xSx
rs44fO75jxRl/DEgXpxti1Px/W/201d6D+P3dxRvMDyuDPIWi6eNoX+RdPgZ
J9igDF+8+5QeYL2kNGNcwzyV4b5+Z3cD6tW9QttST1dleD5xNqgB/Qyz/rbs
kL0yMK6VTjzaZkBiCx6Ms22V4eKdVadnov/zI7LHJRYrQ7rBYx9v9H+vel59
LNJThsqY17xe9H/RA9fOjqkrQ0+KWcpurCdPl94eulwZxrqXu/xUMyStZrME
d/H9Z1b359oxDIllT8+eDTgPIavCruyda0h0dikylmorQ4VUhF3ubEOS6qUh
Fot+qv6p4+uc6YZE6/Wp4NmKynD8vHl+wqQBOf49CH7OUYYdrW+qPccMSP6d
X1mmOD+5DUqbf6ZjvKctagwes4D675X8LfS/dj8jnvXeZ4FVcU5uUoIBKZNl
Lvt4jwW3ng4uWhZlQL68T6TcEGdk3FwmGYb+eYt0N93Fgie292c+RH9nT9ra
/B6wYEJssqnIH/3BvBf1U5+woFbn7ZWY9Qak1VwYPfmMBemzd67+ZGxI3pjk
xhuZKcNtnYon4+hXzpR4mZ7loz+uCOq3MDQkJrWbftazlGHgvUvKNZyX5yNN
VVGSypDxe6Q8GP1swtm+839x/lWjOLKr9VDv/gxZuPgjC/aX5q/fPt+QpDd6
vV3VzYKXpSdZd3C+TKIOLFl4G/u//rzDC8z/x1t86YdNTHCkct5uQmy2RbGn
qJIJ7sptqTTi1XcKurwLmPAizSdMB3GGetYdpVQmhFQuOO6F+Lnx6sM9kUxQ
vn73VTvimjbf0TMBTJAsCxHdrm1ITqrMak5Zw4S0reuLVuqg3u7pv5RrxYSh
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
LZz35RLTyv0/GahfqtgJs+7v4pK2K9n39suz0P+sj+Ymc4mZ9uvXiiwWSGwT
Kc49ySU/iyJsO9VYsGpBylQt1Esm1bYmReg/8qK2/oFmLnETL5mZqY7P23bs
3aHHJh49up/yF+M+mDPQvIqF+9Q1pszQkAG+3tmzfCVwHzSPhLbwcP+e+noJ
htVIuVJq8FoVBsh31/0IfqlGRh1WjQ3LoP4+3Po4sk2NJH7rP3piCuYr9K/O
cJ0aMb9w9vf6L0oQ9Xxe/KvTamS61fWPts+UgPMvDG7nqpJvamXPPC8pwrnv
QX4LklRJbs2DxeF5ipAenecqCFMlEnt0pTviFSHIzd78xkZV8n64ZmVwoCJE
NYbtHHFSJdPV7k0NXIXvCyLfPcD+7rsWrdOlpwgXO/yZfgtUCaPsffWluYpw
/rSpWZ26KnmpYxqu+lMBViT/bH63gk0OBR3yXPJCCWw2tH40MGOTVZ9eq15s
UAIHkTq1uwI2Se6xPZ+WrwSRoVePnFNhk41hYw9G9ypBcvfrW8+k2GTfqf/2
D/spgV9l9oWgcZx/xtHmzBX4vtntk/6f1EjX65HsQQMleLzgqtWTHjUSsZPx
d6oqnrdaKf5qpyrZ6CgxpIDz/L7R8HnxVVWiNaj6YspbBZAq9NdVLVYl786+
XNTUpQBv3CJk6UxVEmq1q3cLKACdYu78PEaVNOwx9hevVICMe3l/DDerkstd
D7xzzijAXeVlZnYuqiRtsa02L08Bin0bEzSXqJLZ17MHb6YrQIRHf4rhJy75
FON8bdFJJljNJx8XveaSCddbV5r3YD/v7rJnon62Kz8TvtGNCcwFp6nue1wi
JmM4wDNggjCO+ITifCk9PhKth3rPdFejw88bXJIeL6KSivNi+IX/cH0Dl2Sf
kJRd3cQAxx6PBfU4nwMxi/6dOMGAFKO4+kTcZ6EfF4p6hiuC7OvRq53Y36GH
rnWY2SuCDbUuQyKMS3KkO4ruaylCRK/mO4MdXFJF/36mI6II34vO31wTyiWL
sty++TxVALE9QZXBiPXDT21Nu6QAXs8en4nA38ttN/racUABVpctmYjA88bV
5o8KfBTA0uqYmoyyOtm/JvK9O/rthfOmRcioqpOt4js+N3qjft25ZQtTTZ04
Tp0R9McY9dxKvoc+Ypt3jkNac5igMrdy4Wr8/YPlVSLeGK/j7ajkODxvKOCl
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
Zf4dOSSCGz7XvrDK04LHJ8JUx/eL4IrOQ7rKtopA+6jI3deui/F/u08uDlKE
lx9KW2Q/6eIGmep1bRcUQdRfnMlp1cUAk28/3z5XhJNKT77fbtFFu/rFh/72
KYL4whsWOc26uE3hgPQMWSWoGWq8ZE3iTP8L9isESiAeGgZrSDz1GiJCDJRg
qiR4Zh+JV+y+/KvISxkcEz58ze/WxSS/P+fehCpDgrb0k9qvuihJ99IqOK4M
DQprKvx7yPnMTPs915RBs1hb92CfLgaeT88RzVGGGlrnbW6/LtIiV1havVSG
Jvf8e8IhXTy65/sPvRZlqOzZ7108oov8007Dz/uVYSu+zasY08W1aUfzXM0U
4e39HXylCV08We3wfJePIgQeLQ5TERViaN1hnmusImxkH9VLlxAiXq8yaMxR
hC2eHgtRSojFSRWyHR8VgfmQm+4mI0S7mgWp88WVwHdjr0KwnBCzoy4u4nOU
4NZSY0paQYgTAaPvdXWV4Eez3yBPUYjLOatcI92UwSSz+kG/ihCvR/w9cnWb
Mhj8e33hkKoQPzcolb86oAxbov0tEkmc9mfw5EAieW5+45I2iS+UX3WZlqEM
GV7H+/TJ92rrZydPoDIYSZmXPucIUcyPJ131Thl2JEb9e8MSotZQtZFvrzJo
xesVr2OQehyj5wj1FeBYc05xFMHDpjvToZatAJUSu922j+sid/Huh31/5WE6
WryePqmLtpvf7zndKg8XzwefchARos6cJLnKYnn4NnrGUU9MiOq9dPGcZHkQ
HhPveiouxNGITD33Q/Jw1RaDuwl+MkGep6t85cHrSr1Z7jQSH8vsVHwkC2ua
Pk8/RvBJk10ZsylBFhIHPySNkph/Z/hSVrgszDOkPZxO8FLUYSydcJMF1VcN
FoXkeeWKz899TGTBqd43hEbic+aBGiMqsqD24suD6fJCvOwtGoz/ZEB/q9KF
W7JCrJLdcrK5TQb2a46MfZ4uxGeJpX9TdBVgk/PXyb2duthvOZtdqqgAD2Uq
NxR80cVfvkW+Z4bkoeLBmJ0rmY9CZ8cX/Hp5SLwZfmTZZ12MiGBbHH0kD68z
JZ8mk3nxnzD+0ZAgD48tK+xcSdya2DKpvkseVhwR9dhM4mjV6Js73eXhzLW/
P5r+H+u/HXt8TxaOfpAqSP2mi3GzotfMOS4L9nqqx3YTvm/NYx+uCZCFJ/1N
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
tMn9ojwIMs5fEMG4Pybvz6FaeahwWFeZhvfbFXS/j3glD53kvvG2Bpz/laO1
u7/Kw5ovj+49qOciVn9dvYqwAjzOTq33quMihfkvGwtUFcAjoWL+ZB4X7eu2
E8z2l4PPuscEGLn4vJnYJIWTcmC7uPflshwu6qxwT+kskINDLfyijtn4PF3/
PTV35WDFnyLld+e4qNj6qi20y4GJguK2GoyPHTU42f1JDu6eS6p/g/FEohll
gm8paAUHWFvj/TVl5bZTykvhL8uh9A7Wx710KRnBo/LgdXuP6iGsH/9j6xa+
ZshDls0b/iisr81J01/KbsiD6p7a6m6sx/VZs1xOszxoNMiGHb7CRb+dB219
38hDz7NkM89rXGSxZ983y9/yIC0wx5ddwkWPedbvnkopwKDTorPcdS4qG/O0
6KQqgP3V7QO9eH+/nUK/BdZ/zl4pMyLefyqa/vxbGQlaD+e8O1nMRd5du6Eb
6/97iGMPt5SLfoyHCorHkYB/h7qaCj7Pdc6+OiuYBPX7R/PXYf18IGS1xnmQ
YPomWyoT62cpZ+rL+20kIIWrSZErcb37LCbXGpHgyQa5bxf7uKh9OfFIxTZZ
SE0SnfUcxPVJl2gSM5aFk23JwQ5vuEhj08uzk2xZuMx2yD7yFud3WOagn5os
fNtultz2nosWg/IS4rAfELeedNr6iYsuUpbctuCXBd2xiq9/J7jotoSFQ/1P
IthflF32fJKLxGL4o8ZxvZzSfBb4Dr9PbftCo8Agruf39MK7WM+hT+994bSR
4MUR+9Ue97kormJJ+iX4P/7MxZFaLqJ57Knxvk2CNXmxP3Ww/sJ/fu+KuUQC
x1krpZ2PsJ8kcSrmz5Jg27quNMsmnP+SX5HvTpBAIe7JecmnXOR4b/LpWsxX
q3VdVPJXLnrhx3d3VawsTCjdiFL+zkWkK9IOosGysNJ5ZjJwiotMHu8L8/aQ
haFDdwPSf3JRa29Jov22/+M/fjfiN663zwnG79b+/+flJiW0v1z0aMn5Ewp0
Wdi4u83s/AwXXdjec3hBXhZOUU7d7v3HRVZR4/suCchCafWc7cMT2B9CXn55
5EOE5aZveUXxWN/NJ/lL9hCh6+TCiQTs5y81VRq3ehLBkUV6fxj7P+xlZN3x
IIKnjKnQPtwvFgR/7XuziwgBU0fTXLHeaxqGHz7DeFNZ5yprXF/2GprXDuP1
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
uX20kpz/vOoft721RL+//909QPSx7+uqnH8V5P2/lEL7iZ/dbnN9ny/Rm40q
dU4V5PwWBT+PNa3iw77kL/5qAWSe3o1vVtEi/q3oq9ZrXxa2ZD9td1cmflWr
3smE5E+CGfrqHIMPzxsVJM6T/v5242VLMYXU0w/4+sSdhVY6MhvqRfmQ0r+7
66UbC29Nv7X7RPg4x+u7cYtgqZDgHYOTPJBvVjHzJvffZh4APl0XFJ5Mecsx
2bhJTUoqi038he2YfD+bjYXyZgODyrrw36bHzQZKbNQ4wcpXU9eFq9lWmVRV
Np5a/ULFUkcXzkmeUfHXYOMtOWe3bbq68Nvr2U9TDhtz/Sr3r9fTBf8wmtD5
VWwE5VUwz0AX7AQNtjmvZ2OfUfSHkChdaMlOXGSSwkYV9p1yWrwuJMpeU4g8
T/yJmmDnuSRduLNtw2b1y2ysmeN7q+uMLtjevnphYx4bb29fdHZ+qi6Ye/36
VHuLjYoRAbITGWSf0XqXmVvGRn2bPf3lWbow/FRYp7ea6I/Hj7dGl3VB/J1i
RdQzNlYNShQ7UXThr7F4ewE5H87LvPBDTheW2qnuNzJgY2tLrE+hvC7hc9dU
rBkbrQR+j15k6kLlbcMqD2s2rrdLanmkSPyj19npXnsS/8p/1xar6IJ93bC5
gDMb3/PM/4sjfIXPOxtUuJ/oqWTQzRWEL+2jBSe/e5H5q/XE6NJh4i+pIwb/
1bBxx3d9hX3BupB2Se7MOXI+a/0shsUxso/c9irsfsVGP4aOoy3h67Bwjk9F
IxsbX336HEj42n+0a0ryPRtt15Zk3DtJ/HujX23/RzaWruw7tDBFFw49Wxdq
+JmcX/eskTfhp2+7rirlCxvbN9j7hZHznqv4fFGU9Pda5cmLAuR8Ah0Lf1TL
E/32S2gOXKMLcR8j7A0V2NgR3Crx2ZD4zR/WXqmkPqx6PJzUNuuC48dk9TJS
HzsVNr5ystGFHvNzqlfV2PitcCLq4E7yvOHW4G3a5Dyth6t2uurCA1R/8EaX
jZYeKYK6TbqgcdZT4WYGG0uCxkX+ftSF9nMqoT2XiJ6kOlkmfSX5F9IrbCf5
fiyXbPmzVxeSfTZOnLxD6mfnw1vSw7oQ+7Bz3fADNsalDGkKjhO/Xf1oYLaW
javV7j+4Oa0LAxtaJO+/JvWnGGIvM28V0BfM2op/IvkwW9IaT/K5hUIRWLiR
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
QD+3svbES7hfPK/MKTyeQo9H773cD7bSzIn2/K/Qn0YxZoRyWVjfYOuOnZ8o
tM1ExkoZbIunCRulP0A/sv+Gb99KFmYkzoiuAL2/vbYf7QQ7P+qn4l7Qe3fh
kbBRsM36jw7Jg149gUmf1fB892tviWegFxXeWHgD7K1JgvbhLRQKymcb6vIg
fojgrZ6gV/i65sok8LfOH8O6ZaC3ey8vwno97L+a+MZx0DunJDuOB/5/3Jjw
sAn0ug/9qNYH/ysrpYgXg96+IO6pQ+D/e1I5AjmJFHqT8p7TBP53ahT0yT9D
oS7V9x3m4O+U8Cj5p3HQL65bVTywEb7XpCzYsHDlNA9tqyv658u8ldP8d/SB
l0mfxMpp/tvrwBJ4LbJymreaxYxvFExpT/NY55BzcOiY9jSvWTNPVRr91J7m
uZe/JsrF+rSnec87JtHmWtj/7QEnYYtdR/5//65otUTOgf+/z++AkfuE1/+/
10Z4SL9y055eTzVWflzlrD3Nf5+L28uqbbWn+W/WHS+pbkvtab18/Xwe4uvn
8x9fP5//+Pr5vMXXz+cxvn4+r/H183mOr5/Pe3z9fJuvn38/Xz//fXz9/O/x
9fPXw9fP5z++fj7/8fXz9f4PpC9SVg==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{
          1, {7.296767714919395, -8.096463324617789}, 2}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.395250505194128, -7.707480333953697}, 2}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {8.6338807299907, -7.751769969819347}, 3}], 0.09755920187528605],
          ArrowBox[BezierCurveBox[{
          1, {8.675940524199095, -8.223733952958757}, 3}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.867882714053415, -8.18023851726785}, 4}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.805151602555639, -8.113893566415866}, 4}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.597926412294486, -8.252731300924394}, 5}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.54486492222713, -8.01199924574697}, 5}], 0.09755920187528605],
          ArrowBox[BezierCurveBox[{
          1, {8.076865130739971, -7.921535419479137}, 6}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {8.12689448201469, -8.02973619712177}, 6}], 0.09755920187528605],
          ArrowBox[BezierCurveBox[{
          1, {7.732789410130934, -8.067354742479113}, 7}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.7634335238954595`, -7.942859799904074}, 7}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.325751536808533, -7.836023197455603}, 4}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.16453763503644, -8.15866123726815}, 4}], 0.09755920187528605],
          ArrowBox[BezierCurveBox[{
          2, {7.055795235050132, -7.90851598111162}, 5}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.904250954707649, -8.056766916598317}, 5}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.089669276468191, -6.734778482100068}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.628197865513385, -7.132262704815722}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.756487758042382, -8.171388729320647}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.5073405535342355`, -8.09066648862615}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.376415797245653, -8.37120990832564}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.082856805947911, -8.025884183957439}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.596275383189545, -8.137455478931498}, 67}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.398544936359922, -7.968261487822881}, 67}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.214271013233339, -8.338595263709976}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {5.971723334231953, -7.903393378220223}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.249656458447218, -8.160245998103452}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.106062406146615, -7.780863365437368}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.079354321828669, -7.425188306185053}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.2100957708346884`, -7.6817740895089806`}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.944867866223416, -7.75686066308248}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.90499464270882, -7.868874224963417}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.831324783450032, -7.2437683137735105`}, 104}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.118168364576074, -7.388548549124876}, 104}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.502814091311111, -8.036957612345912}, 105}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.382980026677483, -7.831906921143083}, 105}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.61231876185101, -7.234149285510889}, 106}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.947624303854077, -7.25081370765835}, 106}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {8.606441555813612, -8.35227681646061}, 4}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {8.501650650107468, -7.813967882469327}, 4}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {8.815423972499762, -8.093573718672388}, 6}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {8.823393529566802, -7.7298105131752965`}, 6}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {9.450493385409139, -7.612764606932864}, 35}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {9.619879953404332, -7.7198136242940905`}, 35}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {9.158938656369148, -7.5244665436165725`}, 36}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {9.437650372406168, -7.475696669085229}, 36}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {9.851247161526087, -7.413329957984605}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {10.060778760488743`, -7.797182934646323}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {10.469550625960865`, -7.733397082603938}, 140}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {10.368402786698125`, -8.421770476063713}, 140}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          4, {7.166388855403728, -8.577801961782757}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          4, {7.0784555526675845`, -8.174441681276267}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          5, {7.340272649921838, -8.0276583344598}, 7}], 0.09755920187528605],
          ArrowBox[BezierCurveBox[{
          5, {7.423978253751238, -8.143895447061988}, 7}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          5, {7.09448228325601, -8.061379574874062}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          5, {7.2061533400838425`, -8.025142201270505}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          6, {7.922302209708265, -8.045395285835662}, 7}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          6, {7.902916972194446, -7.812699565617449}, 7}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          6, {7.810998298648725, -7.7474441693529865`}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          6, {7.990193186653748, -7.506846184371201}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          7, {7.447537340529554, -7.6605677721350265`}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          7, {7.64611746604752, -7.652665507370118}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          7, {7.313050884925244, -7.992240129032052}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          7, {7.3410163379218165`, -7.839765642825273}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.856694375321554`, -5.985487241329057}, 9}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.615273748942297`, -5.913224284088148}, 9}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.725383831803676`, -5.417215827500169}, 10}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.846900593211922`, -5.377945045159581}, 10}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.694393453692042`, -5.660822782068874}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.677364165023981`, -5.555602444013001}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.649390029691277`, -5.227679717686182}, 12}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.898242999058105`, -5.180301547304033}, 12}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.463821444909595`, -5.99172415648959}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.688212782620836`, -5.958766775674308}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.742413847738764`, -6.815776666859239}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.423294869063481`, -6.78731657250899}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.376982473833419`, -6.191616297559477}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.499677477525614`, -6.06809341328648}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.695448289179158`, -5.4564449175616385`}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.556902239102918`, -5.3904953618458915`}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.650444865177775`, -5.02330185317893}, 12}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.777781073136662`, -5.015194465135588}, 12}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.457565093299904`, -5.1424880150639165`}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.551809309477992`, -4.996628108097229}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          11, {10.288028665113035`, -5.320145413916726}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          11, {10.520818931367279`, -5.240235062666393}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          11, {10.439072889915918`, -5.833994457482844}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          11, {10.337376555896176`, -5.743428954026095}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.595043714017015`, -4.660111830224189}, 69}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.714143329651376`, -4.62906952870672}, 69}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.435276658081738`, -4.548896164068721}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.651577971848523`, -4.444732846075922}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.50890749914706, -4.944844517208395}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.475815507366217`, -4.807091998283451}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {19.11587436179913, -5.28704287069114}, 14}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.577688136610064`, -5.422299273233888}, 14}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {19.136099235967293`, -4.067155522661969}, 15}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {19.31804313011088, -4.452552568668768}, 15}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.71832574536842, -4.062294641979419}, 16}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.984709025754217`, -4.20066629972725}, 16}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {17.54412275890236, -4.348625756586448}, 17}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {17.869768720868322`, -3.7341405478560805`}, 17}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {19.371810462839925`, -4.676567569245264}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {19.146017265623616`, -5.082909552402592}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.881907785844326`, -4.90457640137448}, 19}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.616411903814747`, -4.975621057212827}, 19}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.21734869200496, -4.266770083061427}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.460159648721607`, -4.067865075868854}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.308348261166262`, -5.562402684569727}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.62074128913878, -5.833488265183882}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {18.818445584170544`, -5.79041151670072}, 19}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.09113592732996, -5.726199769994777}, 19}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.753991556760703`, -6.124687833369534}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.64563907245371, -6.55052566717664}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.656417682458923`, -6.675083337066424}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.240419114684766`, -6.935561584022705}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {18.447710700457733`, -7.005166630667662}, 121}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {18.07174077614381, -6.483766840720536}, 121}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.39521853719524, -3.978383052739842}, 16}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.479657923438406`, -3.7313576644810897`}, 16}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.048703254666627`, -4.592655980004864}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.640966163306917`, -4.613600917154667}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.196953663749824`, -4.068887349581762}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.071165329169954`, -4.280073647356633}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.14124580365698, -3.6697403239373365`}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.263250613211923`, -3.9257786326973476`}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.694342592635998`, -3.5254004806061565`}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.989262593984655`, -3.54435100428704}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.998549685551108`, -3.4351648344979515`}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.287645401296956`, -3.652296025055614}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          16, {18.560907379474354`, -3.9309722248806356`}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          16, {18.53733505580722, -3.5936955599401745`}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          16, {19.36100848827911, -3.273514211665321}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          16, {19.571489103385275`, -3.5394901236051877`}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          17, {17.445967074588488`, -3.464446473008882}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          17, {17.363132069340544`, -3.880026674546558}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          17, {15.478568605718998`, -3.496534699096435}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          17, {15.760745901879035`, -2.7380787948718472`}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.21899482699401, -4.993501607681957}, 63}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.288399675845362`, -5.241491318423198}, 63}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.024927799262592`, -4.699244333316118}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.306876556041587`, -4.889485693939775}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.40173599576782, -5.411011680651839}, 65}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.187649749392826`, -5.685966793692357}, 65}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.32232068577467, -5.785298112538}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {19.901575173493924`, -5.940050365731542}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          21, {12.817522951764433`, -2.6187886939394525`}, 22}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          21, {12.797921382156646`, -2.2284161186109213`}, 22}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          21, {13.98231967707484, -2.3658671132647915`}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          21, {13.885461020130244`, -2.716246286908411}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {13.379033728138072`, -2.200481179137242}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {13.301776640800984`, -2.9412329281094665`}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.466892674928559`, -2.9450773733055624`}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.320943664789613`, -2.405502006018741}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.560380495931813`, -2.566494340102906}, 43}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.62089393431974, -2.1563134799712973`}, 43}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.639325335992256`, -2.7085658582765726`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.600099647510307`, -2.317509638996253}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.754195194231707`, -2.511772216498464}, 57}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.80935474052477, -2.227314695548075}, 57}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.86201332585394, -2.6059773139674633`}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.84020901684408, -2.3671265817681477`}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {12.224227488403818`, -2.0207554199650923`}, 131}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {12.47908006449627, -2.111143087685351}, 131}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          23, {14.412574712229858`, -2.2938038311063425`}, 134}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          23, {14.65728036538144, -2.3387646760299807`}, 134}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          23, {14.596715266334444`, -2.328800721437335}, 160}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          23, {14.784701772283798`, -2.4762285296852093`}, 160}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {22.897633604110073`, -8.501084934026956}, 25}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {22.90706146728132, -8.244700700956713}, 25}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {23.85126488449679, -8.514327739197428}, 26}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {23.666672615759214`, -8.821397236341932}, 26}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {22.649499279797368`, -8.176237044683628}, 27}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {22.900183017727446`, -7.8359838294598765`}, 27}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {23.59983907684724, -8.617299520089118}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {23.403207904207232`, -8.755031053840337}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.264431120473034`, -8.03371170579748}, 27}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.50568699523161, -7.949842723645799}, 27}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {23.21477091752171, -8.474774181201889}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {23.00871188171317, -8.86888994802855}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.845465132447675`, -8.460721634887637}, 86}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.719839852953466`, -8.638374898742814}, 86}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.714299838240557`, -8.586737415218517}, 87}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.53948139742318, -8.661936282730869}, 87}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.88393323546289, -8.615601554660884}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.6588677752948, -8.785853677704427}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {21.746364458827756`, -8.12695183008898}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.033409105455256`, -7.717376851927166}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {21.90210039502598, -8.43256899502139}, 100}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {21.977341005903522`, -8.055772923917152}, 100}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.449634243778316`, -8.570259237207749}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.336262361343863`, -8.491579508230933}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {23.9743820660006, -9.051470716588419}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {23.962343162102606`, -8.882132753198134}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {24.425497093510106`, -9.003151118670981}, 72}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {24.354076042966863`, -9.111010234911484}, 72}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {24.64673807254688, -9.145716676261303}, 73}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {24.44750682167179, -9.35706551042449}, 73}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {21.72012856063533, -7.335323585348799}, 93}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {21.996977602100507`, -7.072876422822839}, 93}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {21.739486009272152`, -7.7182349585915935`}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {21.78527478114128, -7.392528962582874}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {22.115955720653687`, -7.324711912517432}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {22.321833463231382`, -7.2992840589514225`}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {24.162032381958653`, -8.936784936171662}, 72}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {24.102650235314105`, -9.213982015802378}, 72}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {24.166066905854585`, -9.086241829443122}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {24.017185306351887`, -9.3366579557695}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.380079672393045`, -9.125931907547171}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.36107324802794, -8.902068263764635}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.772777310288554`, -9.226479063379085}, 152}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.617430896976455`, -9.216077692261166}, 152}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.999147226312555`, -9.184397564621618}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.824588781693308`, -9.316575464460866}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.420305612238698`, -15.731895347034957`}, 30}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.419635868122384`, -15.552933892880066`}, 30}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.212079051171543`, -15.351011460762408`}, 31}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.478135545013446`, -15.12280760519096}, 31}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.504263803928547`, -16.020854598621888`}, 32}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.31568935628734, -15.835319355864979`}, 32}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.599434998994823`, -15.448146973263583`}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.732219283121719`, -15.430900760149706`}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.798800963487784`, -15.277925019577015`}, 34}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.99370394510421, -15.41224404917492}, 34}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {13.939668283659953`, -15.26254894864281}, 31}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {14.206394521619881`, -15.213306547230747`}, 31}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {14.231853036419883`, -15.932392086504008`}, 32}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {14.043948332892917`, -15.92581829790398}, 32}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {14.327024231483753`, -15.3596844611474}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {14.460478259729578`, -15.521399702188008`}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {13.761908624731364`, -15.752134874812022`}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {13.772736187828526`, -15.50180841026701}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.385523908375262`, -14.929558173458268`}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.25225169866072, -15.140515815914894`}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.584889872867825`, -14.759336219771752`}, 34}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.513736360640676`, -15.121859104941622`}, 34}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.82040830162083, -15.322008587122417`}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.564509626758753`, -15.120924523995292`}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.287068924922055`, -15.196308094910847`}, 75}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.209895165617553`, -14.703192446665433`}, 75}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.278669056410585`, -14.32130967037262}, 76}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.527289068065015`, -14.587579430491553`}, 76}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.73008981042709, -14.45148289601471}, 77}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.008532929211444`, -14.366725799779417`}, 77}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.007479649736055`, -14.303891545836407`}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.319377658517565`, -14.412593913562183`}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.521914939016305`, -14.770743178482423`}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.6514955355506, -14.500098227874512`}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          32, {13.657962112893031`, -16.034520337798575`}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          32, {13.856694379517537`, -15.790767661854069`}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {9.406379038021395, -7.320471898899339}, 36}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {9.515704186064449, -7.164653007007368}, 36}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {9.386670137100229, -7.19581746132536}, 37}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {9.573832770858383, -7.052634092477843}, 37}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {10.09868754317934, -7.209335313266635}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {10.138832574147159`, -7.486139272567464}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {9.204440556101874, -6.9517005061192565`}, 37}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {9.282278041819538, -6.96433602916329}, 37}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {9.916457962180553, -6.96521835805835}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {9.847277845106575, -7.397841209251638}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {8.435570096128131, -6.80292050117915}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {8.751809965201984, -6.388227624622822}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          37, {9.974586546975445, -6.853199443530256}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          37, {9.827568944186055, -7.273186771678053}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          37, {8.493698680922842, -6.69090158665073}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          37, {8.732101064281009, -6.263573187049018}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {10.174154976357974`, -6.662544254319565}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {10.615968958725793`, -6.567481464395546}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {11.157889814699576`, -7.606771748239227}, 140}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {10.847210376472548`, -7.9112921650365005`}, 140}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {11.694670778542427`, -7.193904395115357}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {11.524267761776922`, -7.89763378209957}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.000700268756678`, -3.32406172318069}, 40}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {9.880142013473684, -3.1512914795114857`}, 40}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.3624894166895, -2.914856249629496}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.414194431905141`, -3.03671171902135}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.195475273100914`, -3.6383058597597664`}, 42}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {9.85037147152357, -3.5198025302600526`}, 42}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.455977237692796`, -2.5362732164267374`}, 43}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.714144701435403`, -2.7875231929740374`}, 43}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.186785499626861`, -2.685862780323603}, 44}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.408711647562336`, -2.748129296598153}, 44}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {9.934844923140842, -3.5801104321474977`}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {9.675161710190924, -3.318267355540793}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.347674481159197`, -3.145421055199979}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.265417133656392`, -3.213474066280155}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.534922077753214`, -2.6783447346004063`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.693350414625892`, -2.948719351999009}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {10.039546918459106`, -3.0117563800025207`}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {10.211810188957601`, -3.306382093063769}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {9.61190242491011, -3.6770105625208975`}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {9.47277746724319, -3.58793772958352}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {9.514307516651222, -4.01315541605341}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {9.194711533189782, -3.800534683921374}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.746031997954365`, -2.660665104483337}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.852755319610838`, -2.8091842524901884`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.048359935082352`, -3.898575655563624}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {9.556500681122701, -3.3913292103701096`}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.86090185619375, -2.4638714627053266`}, 57}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {11.062010412625732`, -2.718989309041581}, 57}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.968719987815753`, -2.558076560174425}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {11.092864688945122`, -2.8588011952618233`}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.545456325143896`, -2.4423928317751944`}, 59}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.820892339905017`, -2.5144672083936204`}, 59}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.189206676885139`, -2.5816065256789025`}, 112}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.451554791333486`, -2.4150487007105426`}, 112}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.582131882959617, -4.045521613268435}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.667552471586852, -3.9021818661616283`}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.99496144097842, -3.610832236321064}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {10.25780789505305, -3.7973885769011586`}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.50234233902604, -4.6231033185550245`}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.260508455478574, -4.319653022714004}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {10.124480708198956`, -4.046666787733189}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {10.103348883627607`, -4.225020907969704}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {10.198111549263894`, -4.442615140872831}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.927586419145067, -4.587380060177788}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.910888858395696, -4.560212171092092}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.626631798698035, -4.511536457299486}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {10.858734670890216`, -2.8785528990353826`}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {10.518309859644924`, -2.695355933568245}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {11.045982267484485`, -2.4114765784352046`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {10.946243140614412`, -2.4306012192863773`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {10.870240823962602`, -1.7823076910939377`}, 149}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {11.17825890353755, -1.8199399142040316`}, 149}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {10.696798378681894`, -1.841520014281119}, 150}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {11.003528244111482`, -1.7646445464173997`}, 150}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          44, {10.7405492136117, -2.3720826820601406`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          44, {10.677051402548324`, -2.5801907831841}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          45, {9.309327213367867, -4.180131292083076}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          45, {9.12885618757407, -4.056583392887753}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          45, {9.327132577693181, -4.421568143836582}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          45, {8.99987810551862, -4.261457595101353}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          46, {10.539526370331414`, -3.7403383237533583`}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          46, {10.255548091685624`, -3.7321361034096543`}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.011296703961246, -5.569231819523865}, 52}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.325737909802623, -5.704261814556843}, 52}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.781736343386157, -5.797005379860017}, 53}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.005792720711593, -5.75131316855586}, 53}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.906057269841331, -5.579890688539815}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.23471571954729, -5.650373867261647}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.214068297087868, -5.07813295205324}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.78042358653312, -5.429388476478695}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.231873661413244, -5.3195698038063295`}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.651445504477653, -5.6342626786920444`}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.9529156496671565`, -6.805203006195169}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.545128509627729, -6.664304566803539}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.704886111288101, -6.6237830137842675`}, 104}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.453201103369157, -6.371079026419827}, 104}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.485880089689211, -6.614163985521239}, 106}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.2826570426471, -6.233344184953057}, 106}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.638629937418449, -5.972754991290853}, 126}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.786304104033091, -5.807811987089824}, 126}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.395756919313325, -6.124612275409355}, 128}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.500706023986187, -5.785864906718476}, 128}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.397840374599341, -6.015209391390004}, 129}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.567320112270419, -5.699055373487858}, 129}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          49, {6.109893105100662, -8.70185883397343}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          49, {6.301835224253635, -8.901376508781759}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          49, {5.729821144303959, -8.901680012978902}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          49, {5.877351476667909, -8.83659420411408}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.129119813104879, -8.70962839214633}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.084708026315358, -8.445024908472224}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.348979399049103, -8.475873962751866}, 67}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.400396156727594, -8.387402212337715}, 67}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.25551810716968, -8.375376096166486}, 105}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.384831247045431, -8.251047645658032}, 105}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          51, {5.542491281506, -8.612231442862374}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          51, {5.593502593803582, -8.522355281741293}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          51, {5.194865579846771, -9.098351397439961}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          51, {5.025195275385748, -8.707241815936404}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.144243648882185, -5.386474012306209}, 53}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.053858820366933, -5.205751805969141}, 53}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.268564575334883, -5.169359320985121}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.282781819203365, -5.104812504675009}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.57657560258433, -4.667601584499322}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.828489686188016, -4.883827113891682}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.594380966909345, -4.909038436252724}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.699511604132493, -5.088701316105401}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          53, {7.948619386247432, -5.21641067498491}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          53, {8.053221458627348, -5.3325860650106645`}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          53, {7.681192053823509, -5.609274977737362}, 126}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          53, {7.604809843113098, -5.490024184838778}, 126}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          54, {8.485553412328986, -4.613713637203771}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          54, {8.723250252067961, -4.894485982907782}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          55, {9.049066643639819, -4.634165098174816}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          55, {8.902283197258862, -4.597602448634909}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          56, {9.328635080953944, -4.776148152924873}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          56, {9.286211904803984, -5.030922734973655}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          56, {9.020530828092285, -4.714614264835813}, 154}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          56, {9.074777270164635, -4.79852212118272}, 154}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          57, {11.457131063550612`, -2.3798892497027975`}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          57, {11.38016720824805, -2.4254960384546767`}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          57, {11.033867400878957`, -2.264205521304644}, 59}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          57, {11.108194859207995`, -2.0811620515865785`}, 59}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          60, {4.203294919274161, -14.87033180999194}, 61}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          60, {4.184327177411136, -15.10984583842435}, 61}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          60, {3.5726366211150475`, -15.0696488834614}, 62}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          60, {3.558473623655013, -14.895919416346779`}, 62}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {3.92728699387832, -15.218242640073388`}, 62}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {3.9320917382806604`, -14.804999144526393`}, 62}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {4.893046070044187, -14.93262442432865}, 124}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {4.87885561419804, -15.148374335272145`}, 124}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {5.256755524906455, -14.800378490388882`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {5.25006093544861, -15.257828271132459`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          62, {2.7466164242130104`, -15.188614159805937`}, 99}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          62, {2.745530863904285, -14.823319040525755`}, 99}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.436650084929383`, -4.717722687999474}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.649193992856635`, -4.659974337881526}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.81345828143443, -5.429490035337802}, 65}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.529967186207266`, -5.456455437637036}, 65}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.71787144183122, -4.659953598366671}, 66}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.909807242078767`, -4.7804046232113615`}, 66}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.73634832202674, -4.307947973883714}, 66}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.715740214347136`, -4.486147348845121}, 66}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.651412355569835`, -4.078510537450728}, 84}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.783569962349947`, -4.2510839937238885`}, 84}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.399419105033278`, -3.9665700378719766`}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.6472122491666, -4.011422048857839}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          65, {21.23564697299384, -6.205773569906712}, 93}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          65, {20.936614873802768`, -6.451397114568589}, 93}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          65, {20.63329304498818, -6.248251942491703}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          65, {20.426633779082582`, -6.128049082644548}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          66, {20.912025604792024`, -4.198940822778851}, 84}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          66, {21.06479131925235, -4.193314904090641}, 84}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          68, {12.853410591130098`, -15.484809957948388`}, 75}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          68, {13.03213550668794, -15.192778372831338`}, 75}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          68, {13.012024246535379`, -15.8408930701505}, 107}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          68, {12.948428715972703`, -15.573496966630548`}, 107}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          69, {10.447632716709881`, -4.352307337453641}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          69, {10.544834414841437`, -4.27918632097689}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          69, {10.521263557774517`, -4.748255690592618}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          69, {10.369071950358778`, -4.641545473185047}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          70, {10.45869819997105, -4.563919007961717}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          70, {10.209304894423319`, -4.530329807030582}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          71, {10.433979960290824`, -5.440127203735378}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          71, {10.099493360017426`, -5.429472051529032}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          71, {9.995713044620475, -5.043875190388651}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          71, {9.981981115041242, -4.850434557291064}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          72, {24.775006241864972`, -9.308227975477179}, 73}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          72, {24.647196041532293`, -9.41171769339827}, 73}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          72, {24.557799786723315`, -9.31511931115429}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          72, {24.46830033386228, -9.28833835784943}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.651230565428573`, -9.5611745866703}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.689541312900044`, -9.43090391544165}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {25.325374071317555`, -9.60622915068491}, 151}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {25.205341653417598`, -9.867308989877216}, 151}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.484310885884163`, -9.659330321848168}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.4969447882411, -9.410821424134188}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.921921905628018`, -9.775989192881966}, 155}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.779884919287785`, -9.764456234408367}, 155}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          74, {24.305415178213444`, -9.535950986303641}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          74, {24.279738333103833`, -9.417712759814275}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {12.733642144085524`, -14.641512964190435`}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {12.940396499923372`, -14.863983661828396`}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {12.657409785393343`, -15.423160992818717`}, 107}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {12.415089339272324`, -15.447796474417407`}, 107}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {11.611192652259591`, -15.352737473403737`}, 108}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {11.614906427720634`, -14.770126149105662`}, 108}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          76, {14.53660075725366, -14.059048315370472`}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          76, {14.599878754377903`, -13.90148092297733}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          77, {14.017844618398234`, -13.838194684657642`}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          77, {14.051299508396292`, -14.031654148620607`}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          77, {13.532279907678365`, -14.305046317305148`}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          77, {13.383417385426783`, -14.11915846293506}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          80, {2.8111378415651074`, -10.08931437353086}, 81}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          80, {2.9317304575097074`, -10.278692020578973`}, 81}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          81, {3.699268470650773, -9.357711778568476}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          81, {3.9755021484799773`, -9.80370105350984}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          81, {2.725026158510136, -10.510221912101272`}, 120}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          81, {2.5073573361017263`, -10.152955259710183`}, 120}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          82, {9.812270669149473, -5.547069081748845}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          82, {10.133025339843803`, -5.3642836008573225`}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          83, {9.386654171310742, -4.9064976994216725`}, 154}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          83, {9.483323789534625, -4.735630973719018}, 154}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          84, {20.727862102257898`, -3.8519369680783204`}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          84, {20.843497639610266`, -3.7242155227910456`}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          85, {20.448808270967948`, -3.3776995337727023`}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          85, {20.61589917716059, -3.3387924155704054`}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          85, {20.686681603713406`, -3.2208181986378928`}, 137}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          85, {20.900455651095434`, -3.353728575957705}, 137}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          86, {22.921574246407953`, -8.866552718820301}, 87}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          86, {22.872381085084207`, -8.764098322476594}, 87}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          86, {23.09120764363174, -8.89541685826355}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          86, {22.991767462958116`, -8.888015717447985}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          87, {22.91084918810032, -8.91897824224723}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          87, {22.86060216874918, -9.014031497782407}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          87, {22.476550196415733`, -8.873635924794055}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          87, {22.537996754794595`, -8.719757328308905}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {22.595936574288576`, -8.997553319769803}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {22.707630152020624`, -8.748621467752178}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {22.382158749843903`, -9.07325885645022}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {22.490648302233463`, -8.682658119058765}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {23.422933203870905`, -9.143442793054328}, 152}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {23.286593214916902`, -9.356905065717386}, 152}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {23.649303119893617`, -9.101361294298853}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {23.493751099634196`, -9.457402837919247}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {5.13290515946096, -8.508515440048194}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {5.202310525110208, -8.682000406952314}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {4.785279457802061, -8.9946353946257}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {4.634003206694003, -8.866886941147763}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {5.168290604674968, -8.330166174441553}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {5.33664959702523, -8.55947039416908}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          90, {5.083732108130996, -8.975860591702578}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          90, {4.8630504913735955`, -8.674627171320616}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          90, {5.466743255003971, -8.311391371518564}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          90, {5.565696881705528, -8.367210624341688}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.478910940454465`, -7.166116547112295}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.247850670857073`, -7.102857713629801}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {20.85719956381016, -6.825683546454922}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {20.949572397094336`, -6.459857141944139}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.788920793075714`, -6.580844710595976}, 96}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.844737929758214`, -6.815847554384779}, 96}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.855380651834537`, -6.772593501037128}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.784409352949694`, -7.009612809997956}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {20.645496742851517`, -7.145336086215249}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {20.968929845733616`, -6.8427685151888635`}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {21.42294405569519, -7.791386251804496}, 100}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {21.211140019943716`, -7.824165158865064}, 100}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {20.54792286854925, -7.695731589912292}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {20.56370988796627, -7.227804432035178}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          95, {20.249644594787064`, -7.052731018226281}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          95, {19.94199851132195, -6.887371431376011}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          96, {22.240565089773074`, -6.805235881554914}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          96, {22.113776654208635`, -6.807252346724935}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          98, {1.7603345368205354`, -14.870937588813629`}, 99}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          98, {1.7632218562115543`, -15.153075584905073`}, 99}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {20.49185476899753, -8.034127661902659}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {20.719445824165074`, -7.533421596968429}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.914409804896597`, -8.267472565981834}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.725797311582753`, -8.565588908112272}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.134028756717044`, -8.295239059774602}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.0812744285703, -8.124730867685274}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.700631980451003`, -8.343178102660081}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.508815461795642`, -8.499625559419258}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {20.21014623771473, -7.735117851228415}, 114}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {19.9622571308236, -7.894149844435774}, 114}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {20.48659862473646, -7.698878332945384}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {20.206253241422598`, -8.029076205790675}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {18.635717655017196`, -7.7678502286745985`}, 121}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {18.67574629847732, -6.985972191770835}, 121}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          102, {7.400327099383395, -7.686386747785165}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          102, {7.229712426862675, -7.541814526342634}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          106, {6.335986616788036, -6.802279451482506}, 156}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          106, {6.386312429069988, -6.510129412340722}, 156}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          108, {9.901030694706304, -15.325051601468271`}, 109}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          108, {9.902502605410264, -14.782044377518313`}, 109}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          109, {8.282096429534162, -15.309378564717429`}, 110}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          109, {8.283940995059291, -14.787633307121085`}, 110}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          110, {6.7182833394706005`, -15.295884066597912`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          110, {6.720394903313376, -14.789098763061023`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          111, {22.059553335889998`, -8.778984686976472}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          111, {22.056349310549958`, -8.637315801602556}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.42970598340158, -8.531525839168763}, 114}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.61167348100763, -8.404767675399405}, 114}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.70615837042356, -8.495286320886425}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.85566959160613, -8.539694036753628}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.987280682345364`, -8.720143811439144}, 116}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.948446854795627`, -8.887520178310664}, 116}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          114, {20.604431118540194`, -8.155261242307889}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          114, {20.57197484212046, -8.326427121946503}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          115, {21.129549541059827`, -8.515045094214297}, 116}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          115, {20.94120449233508, -8.638013745223695}, 116}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          115, {21.415030452879936`, -8.338126646551512}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          115, {21.27596826236747, -8.665082295396264}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          116, {21.507807716073092`, -8.685952788108743}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          116, {21.557090574287166`, -8.88993978594911}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          117, {25.271087413921517`, -15.213860921149713`}, 118}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          117, {25.271087413918256`, -14.884979426783469`}, 118}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          119, {1.7274672165103921`, -10.856854952011211`}, 120}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          119, {1.9102813370896523`, -11.024034221988652`}, 120}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          120, {1.7395450212708663`, -10.895530938228005`}, 139}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          120, {1.666335188960784, -10.652094460987373`}, 139}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          121, {16.874876484099563`, -7.689723025572857}, 122}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          121, {16.768678737943578`, -7.265293757678029}, 122}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          121, {16.22456590555294, -7.998653478548595}, 123}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          121, {16.06194696397873, -7.1279180938417666`}, 123}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          122, {15.52620532702012, -7.947891750854179}, 123}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          122, {15.46978413160213, -7.5015856340417715`}, 123}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {14.05748417000568, -8.352149851615364}, 141}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {13.884740209800338`, -7.794129145863531}, 141}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {13.748478431513504`, -8.159597976301153}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {13.750347311597153`, -7.455751664312663}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {14.319664484118741`, -8.003220306342683}, 147}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {14.3028511013875, -7.66893478892574}, 147}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {14.533334228044977`, -8.16455861784735}, 148}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {14.379045851274467`, -7.925604168318827}, 148}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          124, {5.577665847066321, -14.929827259057198`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          124, {5.585161713454155, -15.171527128857026`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          128, {6.93531579427915, -5.686281115996286}, 129}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          128, {6.999846427277331, -5.708874466786395}, 129}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          128, {6.5876627218697354`, -5.702290153025169}, 130}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          128, {6.71055685399353, -5.515404854672869}, 130}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          129, {6.6542768101541485`, -5.615480619794543}, 130}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          129, {6.712640309279535, -5.406001970653608}, 130}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          132, {20.086749922263465`, -2.6997910556611577`}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          132, {19.81501750965116, -2.6469920540953646`}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          133, {20.17482025174141, -2.9962719053628777`}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          133, {20.16899596613892, -3.194452572239483}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          133, {20.02993979737011, -2.7567143759186967`}, 136}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          133, {20.19458997280498, -2.9156639376165554`}, 136}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.32832260468203, -2.864659396686607}, 136}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.49879706571959, -2.82542829150869}, 136}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.711076391799125`, -2.94733559099634}, 137}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.757759532988036`, -3.119153086518957}, 137}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.697213201964768`, -2.732981574092215}, 138}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.873834902187397`, -2.9384147639063096`}, 138}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          137, {20.981769675899923`, -2.74791773447856}, 138}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          137, {21.11170823493302, -2.7815334287705547`}, 138}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {12.311300543242465`, -8.011043811846761}, 141}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {12.276964124415764`, -8.556078388270052}, 141}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {11.740505781392555`, -8.540515567789177}, 142}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {11.503320930710426`, -8.643389380305223}, 142}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {12.046451444339008`, -8.627984941221518}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {11.69762404950774, -8.895381320633263}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {12.002294804750896`, -7.818491936532559}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {12.142571226211587`, -8.217700906719378}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {12.857901727846267`, -8.952704039835698}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {12.543410751843313`, -8.675065842824463}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {12.813745088259349`, -8.143211035146933}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {12.988357928546973`, -7.997385428909408}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {13.598600884789272`, -8.148171676692687}, 148}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {13.617056468224975`, -8.46723793291658}, 148}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          142, {12.084258534141664`, -9.040015031871496}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          142, {11.97261598999267, -9.204537598766247}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.515052879784069`, -9.6685203010269}, 157}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.245403251347621`, -9.735392704450756}, 157}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.590591605782599`, -9.552760925069476}, 158}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.37490627231653, -9.687067764642434}, 158}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.41001502909243, -9.728354508280201}, 159}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.125354702320577`, -9.721200160202406}, 159}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.23895508651285, -9.703858914159628}, 161}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.002227256424163`, -9.59995177813717}, 161}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          144, {13.250538242660246`, -7.648455883637621}, 147}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          144, {13.231855979846015`, -8.018016678208618}, 147}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          145, {18.157334653280262`, -15.213860921149948`}, 146}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          145, {18.157334653280262`, -14.884979426784287`}, 146}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          152, {23.90566076883884, -9.41537072279398}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          152, {23.886448737533026`, -9.557949993750206}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          153, {24.550429673301227`, -9.632527366027892}, 155}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          153, {24.39575878460277, -9.869503305268358}, 155}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          157, {12.557433204189776`, -9.996146657320407}, 158}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          157, {12.611397499160805`, -10.063581093470571`}, 158}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          157, {12.37685662749837, -10.171740240532051`}, 159}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          157, {12.361845929166897`, -10.09771348903062}, 159}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          162, {21.71421103360089, -15.213860921148775`}, 163}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          162, {21.71421103360089, -14.88497942678335}, 163}], 
          0.09755920187528605]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.09755920187528605], DiskBox[2, 0.09755920187528605], 
         DiskBox[3, 0.09755920187528605], DiskBox[4, 0.09755920187528605], 
         DiskBox[5, 0.09755920187528605], DiskBox[6, 0.09755920187528605], 
         DiskBox[7, 0.09755920187528605], DiskBox[8, 0.09755920187528605], 
         DiskBox[9, 0.09755920187528605], DiskBox[10, 0.09755920187528605], 
         DiskBox[11, 0.09755920187528605], DiskBox[12, 0.09755920187528605], 
         DiskBox[13, 0.09755920187528605], DiskBox[14, 0.09755920187528605], 
         DiskBox[15, 0.09755920187528605], DiskBox[16, 0.09755920187528605], 
         DiskBox[17, 0.09755920187528605], DiskBox[18, 0.09755920187528605], 
         DiskBox[19, 0.09755920187528605], DiskBox[20, 0.09755920187528605], 
         DiskBox[21, 0.09755920187528605], DiskBox[22, 0.09755920187528605], 
         DiskBox[23, 0.09755920187528605], DiskBox[24, 0.09755920187528605], 
         DiskBox[25, 0.09755920187528605], DiskBox[26, 0.09755920187528605], 
         DiskBox[27, 0.09755920187528605], DiskBox[28, 0.09755920187528605], 
         DiskBox[29, 0.09755920187528605], DiskBox[30, 0.09755920187528605], 
         DiskBox[31, 0.09755920187528605], DiskBox[32, 0.09755920187528605], 
         DiskBox[33, 0.09755920187528605], DiskBox[34, 0.09755920187528605], 
         DiskBox[35, 0.09755920187528605], DiskBox[36, 0.09755920187528605], 
         DiskBox[37, 0.09755920187528605], DiskBox[38, 0.09755920187528605], 
         DiskBox[39, 0.09755920187528605], DiskBox[40, 0.09755920187528605], 
         DiskBox[41, 0.09755920187528605], DiskBox[42, 0.09755920187528605], 
         DiskBox[43, 0.09755920187528605], DiskBox[44, 0.09755920187528605], 
         DiskBox[45, 0.09755920187528605], DiskBox[46, 0.09755920187528605], 
         DiskBox[47, 0.09755920187528605], DiskBox[48, 0.09755920187528605], 
         DiskBox[49, 0.09755920187528605], DiskBox[50, 0.09755920187528605], 
         DiskBox[51, 0.09755920187528605], DiskBox[52, 0.09755920187528605], 
         DiskBox[53, 0.09755920187528605], DiskBox[54, 0.09755920187528605], 
         DiskBox[55, 0.09755920187528605], DiskBox[56, 0.09755920187528605], 
         DiskBox[57, 0.09755920187528605], DiskBox[58, 0.09755920187528605], 
         DiskBox[59, 0.09755920187528605], DiskBox[60, 0.09755920187528605], 
         DiskBox[61, 0.09755920187528605], DiskBox[62, 0.09755920187528605], 
         DiskBox[63, 0.09755920187528605], DiskBox[64, 0.09755920187528605], 
         DiskBox[65, 0.09755920187528605], DiskBox[66, 0.09755920187528605], 
         DiskBox[67, 0.09755920187528605], DiskBox[68, 0.09755920187528605], 
         DiskBox[69, 0.09755920187528605], DiskBox[70, 0.09755920187528605], 
         DiskBox[71, 0.09755920187528605], DiskBox[72, 0.09755920187528605], 
         DiskBox[73, 0.09755920187528605], DiskBox[74, 0.09755920187528605], 
         DiskBox[75, 0.09755920187528605], DiskBox[76, 0.09755920187528605], 
         DiskBox[77, 0.09755920187528605], DiskBox[78, 0.09755920187528605], 
         DiskBox[79, 0.09755920187528605], DiskBox[80, 0.09755920187528605], 
         DiskBox[81, 0.09755920187528605], DiskBox[82, 0.09755920187528605], 
         DiskBox[83, 0.09755920187528605], DiskBox[84, 0.09755920187528605], 
         DiskBox[85, 0.09755920187528605], DiskBox[86, 0.09755920187528605], 
         DiskBox[87, 0.09755920187528605], DiskBox[88, 0.09755920187528605], 
         DiskBox[89, 0.09755920187528605], DiskBox[90, 0.09755920187528605], 
         DiskBox[91, 0.09755920187528605], DiskBox[92, 0.09755920187528605], 
         DiskBox[93, 0.09755920187528605], DiskBox[94, 0.09755920187528605], 
         DiskBox[95, 0.09755920187528605], DiskBox[96, 0.09755920187528605], 
         DiskBox[97, 0.09755920187528605], DiskBox[98, 0.09755920187528605], 
         DiskBox[99, 0.09755920187528605], DiskBox[100, 0.09755920187528605], 
         DiskBox[101, 0.09755920187528605], DiskBox[102, 0.09755920187528605],
          DiskBox[103, 0.09755920187528605], 
         DiskBox[104, 0.09755920187528605], DiskBox[105, 0.09755920187528605],
          DiskBox[106, 0.09755920187528605], 
         DiskBox[107, 0.09755920187528605], DiskBox[108, 0.09755920187528605],
          DiskBox[109, 0.09755920187528605], 
         DiskBox[110, 0.09755920187528605], DiskBox[111, 0.09755920187528605],
          DiskBox[112, 0.09755920187528605], 
         DiskBox[113, 0.09755920187528605], DiskBox[114, 0.09755920187528605],
          DiskBox[115, 0.09755920187528605], 
         DiskBox[116, 0.09755920187528605], DiskBox[117, 0.09755920187528605],
          DiskBox[118, 0.09755920187528605], 
         DiskBox[119, 0.09755920187528605], DiskBox[120, 0.09755920187528605],
          DiskBox[121, 0.09755920187528605], 
         DiskBox[122, 0.09755920187528605], DiskBox[123, 0.09755920187528605],
          DiskBox[124, 0.09755920187528605], 
         DiskBox[125, 0.09755920187528605], DiskBox[126, 0.09755920187528605],
          DiskBox[127, 0.09755920187528605], 
         DiskBox[128, 0.09755920187528605], DiskBox[129, 0.09755920187528605],
          DiskBox[130, 0.09755920187528605], 
         DiskBox[131, 0.09755920187528605], DiskBox[132, 0.09755920187528605],
          DiskBox[133, 0.09755920187528605], 
         DiskBox[134, 0.09755920187528605], DiskBox[135, 0.09755920187528605],
          DiskBox[136, 0.09755920187528605], 
         DiskBox[137, 0.09755920187528605], DiskBox[138, 0.09755920187528605],
          DiskBox[139, 0.09755920187528605], 
         DiskBox[140, 0.09755920187528605], DiskBox[141, 0.09755920187528605],
          DiskBox[142, 0.09755920187528605], 
         DiskBox[143, 0.09755920187528605], DiskBox[144, 0.09755920187528605],
          DiskBox[145, 0.09755920187528605], 
         DiskBox[146, 0.09755920187528605], DiskBox[147, 0.09755920187528605],
          DiskBox[148, 0.09755920187528605], 
         DiskBox[149, 0.09755920187528605], DiskBox[150, 0.09755920187528605],
          DiskBox[151, 0.09755920187528605], 
         DiskBox[152, 0.09755920187528605], DiskBox[153, 0.09755920187528605],
          DiskBox[154, 0.09755920187528605], 
         DiskBox[155, 0.09755920187528605], DiskBox[156, 0.09755920187528605],
          DiskBox[157, 0.09755920187528605], 
         DiskBox[158, 0.09755920187528605], DiskBox[159, 0.09755920187528605],
          DiskBox[160, 0.09755920187528605], 
         DiskBox[161, 0.09755920187528605], DiskBox[162, 0.09755920187528605],
          DiskBox[163, 0.09755920187528605]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.8668270226148987`*^9, 3.866827081743894*^9, {3.866827119144883*^9, 
   3.86682713388288*^9}},
 CellLabel->
  "Out[236]=",ExpressionUUID->"c7fa9a67-5be6-4023-81c7-4d2a2225acd8"]
}, Open  ]],

Cell["Country chains Wolfram Challenge", "Text",
 CellChangeTimes->{{3.866827167324893*^9, 
  3.866827175059888*^9}},ExpressionUUID->"14be0d6b-d34a-40e1-9539-\
1ce882478422"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"countryGraph", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{"DeleteMissing", "@", 
    RowBox[{"Union", "@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"country", "\[Function]", 
         RowBox[{
          RowBox[{
           RowBox[{"UndirectedEdge", "[", 
            RowBox[{
             RowBox[{"CountryData", "@", "country"}], ",", "#"}], "]"}], 
           "&"}], "/@", 
          RowBox[{"CountryData", "[", 
           RowBox[{"country", ",", "\"\<BorderingCountries\>\""}], "]"}]}]}], 
        ")"}], "/@", 
       RowBox[{"DeleteMissing", "@", 
        RowBox[{"CountryData", "[", "]"}]}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8668271838828983`*^9, 3.866827186775899*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"8dc3aef5-fcfb-4a7f-815d-70706b658eb3"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Entity["Country", "Afghanistan"], 
       Entity["Country", "China"], 
       Entity["Country", "Iran"], 
       Entity["Country", "Pakistan"], 
       Entity["Country", "Tajikistan"], 
       Entity["Country", "Turkmenistan"], 
       Entity["Country", "Uzbekistan"], 
       Entity["Country", "Albania"], 
       Entity["Country", "Greece"], 
       Entity["Country", "Kosovo"], 
       Entity["Country", "Macedonia"], 
       Entity["Country", "Montenegro"], 
       Entity["Country", "Algeria"], 
       Entity["Country", "Libya"], 
       Entity["Country", "Mali"], 
       Entity["Country", "Mauritania"], 
       Entity["Country", "Morocco"], 
       Entity["Country", "Niger"], 
       Entity["Country", "Tunisia"], 
       Entity["Country", "WesternSahara"], 
       Entity["Country", "Andorra"], 
       Entity["Country", "France"], 
       Entity["Country", "Spain"], 
       Entity["Country", "Angola"], 
       Entity["Country", "DemocraticRepublicCongo"], 
       Entity["Country", "Namibia"], 
       Entity["Country", "RepublicCongo"], 
       Entity["Country", "Zambia"], 
       Entity["Country", "Argentina"], 
       Entity["Country", "Bolivia"], 
       Entity["Country", "Brazil"], 
       Entity["Country", "Chile"], 
       Entity["Country", "Paraguay"], 
       Entity["Country", "Uruguay"], 
       Entity["Country", "Armenia"], 
       Entity["Country", "Azerbaijan"], 
       Entity["Country", "Georgia"], 
       Entity["Country", "Turkey"], 
       Entity["Country", "Austria"], 
       Entity["Country", "CzechRepublic"], 
       Entity["Country", "Germany"], 
       Entity["Country", "Hungary"], 
       Entity["Country", "Italy"], 
       Entity["Country", "Liechtenstein"], 
       Entity["Country", "Slovakia"], 
       Entity["Country", "Slovenia"], 
       Entity["Country", "Switzerland"], 
       Entity["Country", "Russia"], 
       Entity["Country", "Bangladesh"], 
       Entity["Country", "India"], 
       Entity["Country", "Myanmar"], 
       Entity["Country", "Belarus"], 
       Entity["Country", "Latvia"], 
       Entity["Country", "Lithuania"], 
       Entity["Country", "Poland"], 
       Entity["Country", "Ukraine"], 
       Entity["Country", "Belgium"], 
       Entity["Country", "Luxembourg"], 
       Entity["Country", "Netherlands"], 
       Entity["Country", "Belize"], 
       Entity["Country", "Guatemala"], 
       Entity["Country", "Mexico"], 
       Entity["Country", "Benin"], 
       Entity["Country", "BurkinaFaso"], 
       Entity["Country", "Nigeria"], 
       Entity["Country", "Togo"], 
       Entity["Country", "Bhutan"], 
       Entity["Country", "Peru"], 
       Entity["Country", "BosniaHerzegovina"], 
       Entity["Country", "Croatia"], 
       Entity["Country", "Serbia"], 
       Entity["Country", "Botswana"], 
       Entity["Country", "SouthAfrica"], 
       Entity["Country", "Zimbabwe"], 
       Entity["Country", "Colombia"], 
       Entity["Country", "FrenchGuiana"], 
       Entity["Country", "Guyana"], 
       Entity["Country", "Suriname"], 
       Entity["Country", "Venezuela"], 
       Entity["Country", "Brunei"], 
       Entity["Country", "Malaysia"], 
       Entity["Country", "Bulgaria"], 
       Entity["Country", "Romania"], 
       Entity["Country", "Ghana"], 
       Entity["Country", "IvoryCoast"], 
       Entity["Country", "Burundi"], 
       Entity["Country", "Rwanda"], 
       Entity["Country", "Tanzania"], 
       Entity["Country", "Cambodia"], 
       Entity["Country", "Laos"], 
       Entity["Country", "Thailand"], 
       Entity["Country", "Vietnam"], 
       Entity["Country", "Cameroon"], 
       Entity["Country", "CentralAfricanRepublic"], 
       Entity["Country", "Chad"], 
       Entity["Country", "EquatorialGuinea"], 
       Entity["Country", "Gabon"], 
       Entity["Country", "Canada"], 
       Entity["Country", "UnitedStates"], 
       Entity["Country", "SouthSudan"], 
       Entity["Country", "Sudan"], 
       Entity["Country", "Kazakhstan"], 
       Entity["Country", "Kyrgyzstan"], 
       Entity["Country", "Mongolia"], 
       Entity["Country", "Nepal"], 
       Entity["Country", "NorthKorea"], 
       Entity["Country", "Ecuador"], 
       Entity["Country", "Panama"], 
       Entity["Country", "CostaRica"], 
       Entity["Country", "Nicaragua"], 
       Entity["Country", "Uganda"], 
       Entity["Country", "Denmark"], 
       Entity["Country", "Djibouti"], 
       Entity["Country", "Eritrea"], 
       Entity["Country", "Ethiopia"], 
       Entity["Country", "Somalia"], 
       Entity["Country", "DominicanRepublic"], 
       Entity["Country", "Haiti"], 
       Entity["Country", "EastTimor"], 
       Entity["Country", "Indonesia"], 
       Entity["Country", "Egypt"], 
       Entity["Country", "GazaStrip"], 
       Entity["Country", "Israel"], 
       Entity["Country", "ElSalvador"], 
       Entity["Country", "Honduras"], 
       Entity["Country", "Estonia"], 
       Entity["Country", "Kenya"], 
       Entity["Country", "Finland"], 
       Entity["Country", "Norway"], 
       Entity["Country", "Sweden"], 
       Entity["Country", "Monaco"], 
       Entity["Country", "Gambia"], 
       Entity["Country", "Senegal"], 
       Entity["Country", "Gibraltar"], 
       Entity["Country", "Guinea"], 
       Entity["Country", "GuineaBissau"], 
       Entity["Country", "Liberia"], 
       Entity["Country", "SierraLeone"], 
       Entity["Country", "PapuaNewGuinea"], 
       Entity["Country", "Iraq"], 
       Entity["Country", "Jordan"], 
       Entity["Country", "Kuwait"], 
       Entity["Country", "SaudiArabia"], 
       Entity["Country", "Syria"], 
       Entity["Country", "Ireland"], 
       Entity["Country", "UnitedKingdom"], 
       Entity["Country", "Lebanon"], 
       Entity["Country", "WestBank"], 
       Entity["Country", "SanMarino"], 
       Entity["Country", "VaticanCity"], 
       Entity["Country", "Lesotho"], 
       Entity["Country", "Malawi"], 
       Entity["Country", "Mozambique"], 
       Entity["Country", "Moldova"], 
       Entity["Country", "Swaziland"], 
       Entity["Country", "SouthKorea"], 
       Entity["Country", "Oman"], 
       Entity["Country", "UnitedArabEmirates"], 
       Entity["Country", "Yemen"], 
       Entity["Country", "Portugal"], 
       Entity["Country", "Qatar"], 
       Entity["Country", "SaintMartin"], 
       Entity["Country", "SintMaarten"]}, {Null, CompressedData["
1:eJwVk/lfIQ0AxtfIfZVqGIapMAxhcquEkrNjI5kIHY5uW9rdpFa1a1VL7Nbu
prba4x99e395np+/z+f79K8WwqvAq1evPr/E/00CSGRSB4lCopJodAadSWfR
2Rwuh8fp5HRx+JxuTk8v2CsQQkKRUCyEJVIJIumT9EsGZHKZQkaWoUqVElOq
lRrloFKr1Cn1cplcISfLcTk6ZBgymswmi8lqwk02O2jH7MP2kVHH6JjT5eQ7
3c7xCWDCIJVIEWmftF/qmfROsid9fpE/4If9QUSCSJEQMoVMI/2IB5lBBpDZ
13NhRpgVjoR9YdTldM27oi6ei+8aX4AWYgvEYnwxsbiUTCXTyeXkStKdFK+u
pZKpdApKiVOZVDadTKfS3DQ/7U5n+yR90j4PQAImAAOQA/JAHFgHjMAGsAl0
ADhAAZZCSGgrtB3yhGZ3dne2vZNetZft9Xl1KqUKU1lVWkgILUApSAzFoAxE
QAUIfoPt7e8V9w7evnt/uBXa8pSOSuUSt5Q9dhyfLCeXV/b39ov72Q/mD3hx
r7hfrBQPipli9vTsFD89B3tBO4iBGnAY/AgKQP0UMjWzklxZXhF/qh6VjsoK
mUKuwBUopsTsmAp7g4HYMDaCWTH9vGs+Oj/+WcCgM8IMFgN1jDqOHSeOsdpF
LVq7rPFq1drVRe2iOo1Mz0zPvnt7cnziONlVK9VedUTtU2vVOrXNMGSYMAAG
o2HD0HH4/nDu8AuZRJaR5eQ6uYOMkql1cr1Rv6436606+vVbuVQ+KjfKN+VW
+Vaj1ICa7xqdRq/5EXVF56O16GWU16g3yo1mo9W4zQG5fA7PUXO0SrFyUMlU
iEqBSWeymGym77p+3cwD+VyekqfFF+NA3BhPxJfMJvMHs8WM35RvWj8Dl7XL
6OUVl8NNc0tcPjfL7R5UDuotJovZYrXgw/ZhcBhj0VlhFoPFZPnu2nfEHTz3
eu5wLsHj8Fy8Gi/K6+TxedVOTievs9rZMzY65hhbu4/c2z6C68A6zqazJ9le
NpPt6+J0Cbp62nftQPuhTbThdtA4ZASMBmPcmBAJRX5RQARvABuGEfsItruz
e8Ln8J18Fz/N5/J5fLfb6U66027+JrCJb/46Oz3Dz84fm49Pj88dpA6gw9BB
3g5t73w57Jf0S190lnoQT58n5NmymqwqK2a1WHGr1mr7LfjTFAvFSXFKDIlX
IuGIOnIf8UVsuBw34QD+AT/FFXgON+MWfB3fxM9wK26LLcSgGBEr/P33XdOs
NxvN6+Zj80/zqflc/VStVS+qL/C+SV/Y5/WpfUwfy8f2Ra5qV5f//mqVWpVW
rbVqbTqlzqtT6zQHewfFg0rAH/gZaAdEgYdA8NdmJpWBMsVMJZPNFAS9AlDw
WdAl+J19uVO2lN3PFrPcbGYGmZmamX5oPwTOT8/P9Eo9qMf0Gv1gq94qtxqt
mxZKIVEASp5CIxYIiKgQd0SbiBEFAk4sJuKJuYRx3DnuGp/v5nRzURkqR8Oo
AmWgZLSOtqgkKpmao9IKUKFSiBUyBcJmsqlt9zar7WUYm/bp8an57eva6trY
gGQAoZFoOVqeRqFRf2hmkdnQ7PTS4hKwFL8t3zZ6OD2dPV3Pj89NWAj7YQi+
g9uwCCbgYNAfbAcDQfg/bKxcmA==
       "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
7eCA38u9FBBxUt6ftZpARrF6M6oqFOhLWK8jwoPz6qu8hx28FNAwZBvYJkAg
MRu7e8++i8PDLsHtkqL4fVppHl+DOOzzSbAqx3h6+vOBWEuBONCqHP8MyREo
SlHGQThaHKhaHHJPcZ66oy56IrVYFBTYIlyvjOJ+ftfwD8Z69TGsjLFmjkAe
QQLd3Edw7aHz4DwrzrfDg++cdopCo/ixilY8X7EVVWIX5EWB/7QM8UkI140G
s5m8ovCq8U5ONs7LdSZURuGkCOg2hR4TkyVRWbjpwyftIpDt93SPIc5LgRfj
HIRwflF1LqA11DBQrMltJx7s/23W7uDtLWSgJZfZS59wXqGYGPt+SGOgjmzf
+oAoKrza0u36KIaB1DjsvNrSqFC/X90rNYiBtPwnjn29QwXb2nenvY8wUOH1
CusMnAdM9GX/WmI/fUvvyY5xnI9L8p6WGFoyULu9UH2oKB2CzfgMj5fSkb1F
UfwBJTrw/G3b7p9HR9lclPRaYzroFX0n09PpiOf+K6HLjnR4ndNxsy+Rjrbt
MBlsDKADx/jCP9NYOhr+0l5mcwnvtz+9eCSSjti5qicVCulwW4Pwvn+ajuIc
JyZ0ER3kzKdcyoPp6NLg/B0FTyrs3vtTrmuGgYR1VO7oRlKh6dhT+ocpBlJ1
Fhrjv4bzsInxQM4YPv98TvX1+1Twrhq8uGmIgXgTJc53vKHCnVVcI0W9DBSs
3cJaNEAF3YXfRyc7GKh22mAt1yIVPG/ybBdqYiCj4faO7wI0+Lu3dTcFMZAP
h4JViCUdGlcY/cZ0BjpZoG7c7E4HRbeqJC2cLwaa5xXPnqYD/RufgBg7zid6
iSpXLtOh1KSY+WsWnz/Pv2PyJh3KnNnlWobpiNY3zRNfQwd7+3TK/U46SlrQ
17Nvxu8np54pfkVHuZWOW6z66LANdE+iCjp64vioR0EJ+/dBvZRzrDjP15++
UqBDhR3CG3d14JqrseOIyDYqWHwabspnw/73c65iqBkVJN4nZv1mJ5CC+ZmH
zbZU+DC9Z/45J4HSOU5MsLtQoX3rh9cCXAT6E+35nH6MCh8tv1Z+xvOjzsu6
STAQ42tCYR1zLYECW/5lJa+iwaYLsYNvgEDJMd877HlokORd/vyCEYGUY06y
/BKmQT3pOvYM66//vTFfKwYN0NHSvuNm2D8cE8sJ3ECDmuqAj/FWBJqguFH3
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
Ol4fmp3b94MFJ5LLCr5x6Kh74vWFKeInjOa4L7uvoOOTyP0nt82yYLVXowDd
hvitj04NSXMscD3rKMR2IP1zpfXprAXCT/tIr2vOdPR74P/hNA/Bd/hqtY07
HQW7fKaZ8WTernEQCiZ+V87x0kaZRDIv+z12qpLz8RacE1K9zILdd5Kqz5F5
eF/QZ5M7mc+hzxVrUgl/10rxrXpC8Iox+Gi8g/jbdwW9nesJXpbJBoqts8QP
p+77xUPwKiwbyfy4QENjxzU+3dks+Hiv0/gGL+FDqvUTnR7SX4t+tb3dRMfM
m1dsNYhehqT+8Bm4Ev7mbYiAYRbUm81XqHnQkVOeInJklAXf/7z+VbKLjtMa
du4viZ/K8ZgV6vKiI8P8vxEmwasn3CAi0YeOl4YDRMumWFAXNm7YQ/QVLbtN
0/YvC8KrCxQfBNDRo0C81Z/UfyhINGuB6Llftv24AalfjV3zZj3Bg/tTZGTj
JXK/6oOL+4meWXYWOy2SSf36PElFQzTMd95z9SzJE4tUu9gPxmho61ncnkbw
aB+++25mkob7r75rj7tO+C7wapkPwSOyzzPIgeDjuUrztQA34efWoV0VZSyw
PjCXNEzO13fp+bU1FYQPKUncBYfpyB0tcvw2yYN6we6pV4/TUdHgP9NOko+4
21pLss6R+vmOKrU/JPy1bTjbQPyD6vI7F24QPfLqbLDkJf5hwE5Q2YT0L7db
BxY2kjwgSx30SSHrisylvXk5dJQ48cDT4yzxq8dj193uouFq9sXip2Rtfwy0
uAZIHrX9aeF2jgUZv3eM2Y/SUP8YvUQtggV7u0ayokh9wpssk+jEj2U79h8u
JPWpzcZvdIwi+ORtintA6rOZeGNcfJ7gF6GomS1IR1GdSl+IYcHOe6UX/STp
eDOL7ZZH+LGqJ2rz2nA6Vow9+eNN+k+SQt/MJ1Jfj8qXP1tyCJ5mlA2upL6j
+izWIZJ34/69/X71Mh0n2B7+D/MIPj8KLmWm0lHtuvQaXZKP3/1pFgnMpKO1
/wvHeqK/06PfN1FI/qnviFk4X8IC47uZ55yKiF9y/LmrmPD5k3bCmpck/wWv
v23+gtzX94NSc2NEr3JZBhUlGUQ/Zc0/IwgeBUsCRv3IeY793FOQQvAoffeB
7xf5fbeXy3YqEz/45bjuTmvyew2zFKoEyXe7Lo16exC953YvX+dNpeMNynSp
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
mCdZzgKV4PyBSo4hGdJ7LKGazgLNOyc/XVQ2JEtLx7ezw1nwbWyXh4ci+uVf
Or4cDxZYjMb4XkX/45NaaaFnyQI/rxKnaTcNSPbbw0Z+nxgg3FFoM6/BgIga
/LqT9pABPnCj5E0N6mMrXe5AAwNyAws1AisMiCNr6eWwcwwIrZuZcanYgHwY
CzFclsGAhc61HxtQL29/F3okOBbjpb7ZHsk1IPFWl759CWaAhUDzmwDzd2LX
zqrHngx49GbRxBN11DOPq3ODspUhWZw9UoX3FxOR8QrIU4bqplXl8fMMiXuP
6gqxk8owutszeJkM5uv8iyWLC5Xhjr5hpOQMQ9Ko5zs0B/2Vle9+5U6s/xSx
rs44fO75jxRl/DEgXpxti1Px/W/201d6D+P3dxRvMDyuDPIWi6eNoX+RdPgZ
J9igDF+8+5QeYL2kNGNcwzyV4b5+Z3cD6tW9QttST1dleD5xNqgB/Qyz/rbs
kL0yMK6VTjzaZkBiCx6Ms22V4eKdVadnov/zI7LHJRYrQ7rBYx9v9H+vel59
LNJThsqY17xe9H/RA9fOjqkrQ0+KWcpurCdPl94eulwZxrqXu/xUMyStZrME
d/H9Z1b359oxDIllT8+eDTgPIavCruyda0h0dikylmorQ4VUhF3ubEOS6qUh
Fot+qv6p4+uc6YZE6/Wp4NmKynD8vHl+wqQBOf49CH7OUYYdrW+qPccMSP6d
X1mmOD+5DUqbf6ZjvKctagwes4D675X8LfS/dj8jnvXeZ4FVcU5uUoIBKZNl
Lvt4jwW3ng4uWhZlQL68T6TcEGdk3FwmGYb+eYt0N93Fgie292c+RH9nT9ra
/B6wYEJssqnIH/3BvBf1U5+woFbn7ZWY9Qak1VwYPfmMBemzd67+ZGxI3pjk
xhuZKcNtnYon4+hXzpR4mZ7loz+uCOq3MDQkJrWbftazlGHgvUvKNZyX5yNN
VVGSypDxe6Q8GP1swtm+839x/lWjOLKr9VDv/gxZuPgjC/aX5q/fPt+QpDd6
vV3VzYKXpSdZd3C+TKIOLFl4G/u//rzDC8z/x1t86YdNTHCkct5uQmy2RbGn
qJIJ7sptqTTi1XcKurwLmPAizSdMB3GGetYdpVQmhFQuOO6F+Lnx6sM9kUxQ
vn73VTvimjbf0TMBTJAsCxHdrm1ITqrMak5Zw4S0reuLVuqg3u7pv5RrxYSh
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
LZz35RLTyv0/GahfqtgJs+7v4pK2K9n39suz0P+sj+Ymc4mZ9uvXiiwWSGwT
Kc49ySU/iyJsO9VYsGpBylQt1Esm1bYmReg/8qK2/oFmLnETL5mZqY7P23bs
3aHHJh49up/yF+M+mDPQvIqF+9Q1pszQkAG+3tmzfCVwHzSPhLbwcP+e+noJ
htVIuVJq8FoVBsh31/0IfqlGRh1WjQ3LoP4+3Po4sk2NJH7rP3piCuYr9K/O
cJ0aMb9w9vf6L0oQ9Xxe/KvTamS61fWPts+UgPMvDG7nqpJvamXPPC8pwrnv
QX4LklRJbs2DxeF5ipAenecqCFMlEnt0pTviFSHIzd78xkZV8n64ZmVwoCJE
NYbtHHFSJdPV7k0NXIXvCyLfPcD+7rsWrdOlpwgXO/yZfgtUCaPsffWluYpw
/rSpWZ26KnmpYxqu+lMBViT/bH63gk0OBR3yXPJCCWw2tH40MGOTVZ9eq15s
UAIHkTq1uwI2Se6xPZ+WrwSRoVePnFNhk41hYw9G9ypBcvfrW8+k2GTfqf/2
D/spgV9l9oWgcZx/xtHmzBX4vtntk/6f1EjX65HsQQMleLzgqtWTHjUSsZPx
d6oqnrdaKf5qpyrZ6CgxpIDz/L7R8HnxVVWiNaj6YspbBZAq9NdVLVYl786+
XNTUpQBv3CJk6UxVEmq1q3cLKACdYu78PEaVNOwx9hevVICMe3l/DDerkstd
D7xzzijAXeVlZnYuqiRtsa02L08Bin0bEzSXqJLZ17MHb6YrQIRHf4rhJy75
FON8bdFJJljNJx8XveaSCddbV5r3YD/v7rJnon62Kz8TvtGNCcwFp6nue1wi
JmM4wDNggjCO+ITifCk9PhKth3rPdFejw88bXJIeL6KSivNi+IX/cH0Dl2Sf
kJRd3cQAxx6PBfU4nwMxi/6dOMGAFKO4+kTcZ6EfF4p6hiuC7OvRq53Y36GH
rnWY2SuCDbUuQyKMS3KkO4ruaylCRK/mO4MdXFJF/36mI6II34vO31wTyiWL
sty++TxVALE9QZXBiPXDT21Nu6QAXs8en4nA38ttN/racUABVpctmYjA88bV
5o8KfBTA0uqYmoyyOtm/JvK9O/rthfOmRcioqpOt4js+N3qjft25ZQtTTZ04
Tp0R9McY9dxKvoc+Ypt3jkNac5igMrdy4Wr8/YPlVSLeGK/j7ajkODxvKOCl
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
Zf4dOSSCGz7XvrDK04LHJ8JUx/eL4IrOQ7rKtopA+6jI3deui/F/u08uDlKE
lx9KW2Q/6eIGmep1bRcUQdRfnMlp1cUAk28/3z5XhJNKT77fbtFFu/rFh/72
KYL4whsWOc26uE3hgPQMWSWoGWq8ZE3iTP8L9isESiAeGgZrSDz1GiJCDJRg
qiR4Zh+JV+y+/KvISxkcEz58ze/WxSS/P+fehCpDgrb0k9qvuihJ99IqOK4M
DQprKvx7yPnMTPs915RBs1hb92CfLgaeT88RzVGGGlrnbW6/LtIiV1havVSG
Jvf8e8IhXTy65/sPvRZlqOzZ7108oov8007Dz/uVYSu+zasY08W1aUfzXM0U
4e39HXylCV08We3wfJePIgQeLQ5TERViaN1hnmusImxkH9VLlxAiXq8yaMxR
hC2eHgtRSojFSRWyHR8VgfmQm+4mI0S7mgWp88WVwHdjr0KwnBCzoy4u4nOU
4NZSY0paQYgTAaPvdXWV4Eez3yBPUYjLOatcI92UwSSz+kG/ihCvR/w9cnWb
Mhj8e33hkKoQPzcolb86oAxbov0tEkmc9mfw5EAieW5+45I2iS+UX3WZlqEM
GV7H+/TJ92rrZydPoDIYSZmXPucIUcyPJ131Thl2JEb9e8MSotZQtZFvrzJo
xesVr2OQehyj5wj1FeBYc05xFMHDpjvToZatAJUSu922j+sid/Huh31/5WE6
WryePqmLtpvf7zndKg8XzwefchARos6cJLnKYnn4NnrGUU9MiOq9dPGcZHkQ
HhPveiouxNGITD33Q/Jw1RaDuwl+MkGep6t85cHrSr1Z7jQSH8vsVHwkC2ua
Pk8/RvBJk10ZsylBFhIHPySNkph/Z/hSVrgszDOkPZxO8FLUYSydcJMF1VcN
FoXkeeWKz899TGTBqd43hEbic+aBGiMqsqD24suD6fJCvOwtGoz/ZEB/q9KF
W7JCrJLdcrK5TQb2a46MfZ4uxGeJpX9TdBVgk/PXyb2duthvOZtdqqgAD2Uq
NxR80cVfvkW+Z4bkoeLBmJ0rmY9CZ8cX/Hp5SLwZfmTZZ12MiGBbHH0kD68z
JZ8mk3nxnzD+0ZAgD48tK+xcSdya2DKpvkseVhwR9dhM4mjV6Js73eXhzLW/
P5r+H+u/HXt8TxaOfpAqSP2mi3GzotfMOS4L9nqqx3YTvm/NYx+uCZCFJ/1N
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
tMn9ojwIMs5fEMG4Pybvz6FaeahwWFeZhvfbFXS/j3glD53kvvG2Bpz/laO1
u7/Kw5ovj+49qOciVn9dvYqwAjzOTq33quMihfkvGwtUFcAjoWL+ZB4X7eu2
E8z2l4PPuscEGLn4vJnYJIWTcmC7uPflshwu6qxwT+kskINDLfyijtn4PF3/
PTV35WDFnyLld+e4qNj6qi20y4GJguK2GoyPHTU42f1JDu6eS6p/g/FEohll
gm8paAUHWFvj/TVl5bZTykvhL8uh9A7Wx710KRnBo/LgdXuP6iGsH/9j6xa+
ZshDls0b/iisr81J01/KbsiD6p7a6m6sx/VZs1xOszxoNMiGHb7CRb+dB219
38hDz7NkM89rXGSxZ983y9/yIC0wx5ddwkWPedbvnkopwKDTorPcdS4qG/O0
6KQqgP3V7QO9eH+/nUK/BdZ/zl4pMyLefyqa/vxbGQlaD+e8O1nMRd5du6Eb
6/97iGMPt5SLfoyHCorHkYB/h7qaCj7Pdc6+OiuYBPX7R/PXYf18IGS1xnmQ
YPomWyoT62cpZ+rL+20kIIWrSZErcb37LCbXGpHgyQa5bxf7uKh9OfFIxTZZ
SE0SnfUcxPVJl2gSM5aFk23JwQ5vuEhj08uzk2xZuMx2yD7yFud3WOagn5os
fNtultz2nosWg/IS4rAfELeedNr6iYsuUpbctuCXBd2xiq9/J7jotoSFQ/1P
IthflF32fJKLxGL4o8ZxvZzSfBb4Dr9PbftCo8Agruf39MK7WM+hT+994bSR
4MUR+9Ue97kormJJ+iX4P/7MxZFaLqJ57Knxvk2CNXmxP3Ww/sJ/fu+KuUQC
x1krpZ2PsJ8kcSrmz5Jg27quNMsmnP+SX5HvTpBAIe7JecmnXOR4b/LpWsxX
q3VdVPJXLnrhx3d3VawsTCjdiFL+zkWkK9IOosGysNJ5ZjJwiotMHu8L8/aQ
haFDdwPSf3JRa29Jov22/+M/fjfiN663zwnG79b+/+flJiW0v1z0aMn5Ewp0
Wdi4u83s/AwXXdjec3hBXhZOUU7d7v3HRVZR4/suCchCafWc7cMT2B9CXn55
5EOE5aZveUXxWN/NJ/lL9hCh6+TCiQTs5y81VRq3ehLBkUV6fxj7P+xlZN3x
IIKnjKnQPtwvFgR/7XuziwgBU0fTXLHeaxqGHz7DeFNZ5yprXF/2GprXDuP1
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
uX20kpz/vOoft721RL+//909QPSx7+uqnH8V5P2/lEL7iZ/dbnN9ny/Rm40q
dU4V5PwWBT+PNa3iw77kL/5qAWSe3o1vVtEi/q3oq9ZrXxa2ZD9td1cmflWr
3smE5E+CGfrqHIMPzxsVJM6T/v5242VLMYXU0w/4+sSdhVY6MhvqRfmQ0r+7
66UbC29Nv7X7RPg4x+u7cYtgqZDgHYOTPJBvVjHzJvffZh4APl0XFJ5Mecsx
2bhJTUoqi038he2YfD+bjYXyZgODyrrw36bHzQZKbNQ4wcpXU9eFq9lWmVRV
Np5a/ULFUkcXzkmeUfHXYOMtOWe3bbq68Nvr2U9TDhtz/Sr3r9fTBf8wmtD5
VWwE5VUwz0AX7AQNtjmvZ2OfUfSHkChdaMlOXGSSwkYV9p1yWrwuJMpeU4g8
T/yJmmDnuSRduLNtw2b1y2ysmeN7q+uMLtjevnphYx4bb29fdHZ+qi6Ye/36
VHuLjYoRAbITGWSf0XqXmVvGRn2bPf3lWbow/FRYp7ea6I/Hj7dGl3VB/J1i
RdQzNlYNShQ7UXThr7F4ewE5H87LvPBDTheW2qnuNzJgY2tLrE+hvC7hc9dU
rBkbrQR+j15k6kLlbcMqD2s2rrdLanmkSPyj19npXnsS/8p/1xar6IJ93bC5
gDMb3/PM/4sjfIXPOxtUuJ/oqWTQzRWEL+2jBSe/e5H5q/XE6NJh4i+pIwb/
1bBxx3d9hX3BupB2Se7MOXI+a/0shsUxso/c9irsfsVGP4aOoy3h67Bwjk9F
IxsbX336HEj42n+0a0ryPRtt15Zk3DtJ/HujX23/RzaWruw7tDBFFw49Wxdq
+JmcX/eskTfhp2+7rirlCxvbN9j7hZHznqv4fFGU9Pda5cmLAuR8Ah0Lf1TL
E/32S2gOXKMLcR8j7A0V2NgR3Crx2ZD4zR/WXqmkPqx6PJzUNuuC48dk9TJS
HzsVNr5ystGFHvNzqlfV2PitcCLq4E7yvOHW4G3a5Dyth6t2uurCA1R/8EaX
jZYeKYK6TbqgcdZT4WYGG0uCxkX+ftSF9nMqoT2XiJ6kOlkmfSX5F9IrbCf5
fiyXbPmzVxeSfTZOnLxD6mfnw1vSw7oQ+7Bz3fADNsalDGkKjhO/Xf1oYLaW
javV7j+4Oa0LAxtaJO+/JvWnGGIvM28V0BfM2op/IvkwW9IaT/K5hUIRWLiR
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
QD+3svbES7hfPK/MKTyeQo9H773cD7bSzIn2/K/Qn0YxZoRyWVjfYOuOnZ8o
tM1ExkoZbIunCRulP0A/sv+Gb99KFmYkzoiuAL2/vbYf7QQ7P+qn4l7Qe3fh
kbBRsM36jw7Jg149gUmf1fB892tviWegFxXeWHgD7K1JgvbhLRQKymcb6vIg
fojgrZ6gV/i65sok8LfOH8O6ZaC3ey8vwno97L+a+MZx0DunJDuOB/5/3Jjw
sAn0ug/9qNYH/ysrpYgXg96+IO6pQ+D/e1I5AjmJFHqT8p7TBP53ahT0yT9D
oS7V9x3m4O+U8Cj5p3HQL65bVTywEb7XpCzYsHDlNA9tqyv658u8ldP8d/SB
l0mfxMpp/tvrwBJ4LbJymreaxYxvFExpT/NY55BzcOiY9jSvWTNPVRr91J7m
uZe/JsrF+rSnec87JtHmWtj/7QEnYYtdR/5//65otUTOgf+/z++AkfuE1/+/
10Z4SL9y055eTzVWflzlrD3Nf5+L28uqbbWn+W/WHS+pbkvtab18/Xwe4uvn
8x9fP5//+Pr5vMXXz+cxvn4+r/H183mOr5/Pe3z9fJuvn38/Xz//fXz9/O/x
9fPXw9fP5z++fj7/8fXz9f4PpC9SVg==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{
          1, {7.296767714919395, -8.096463324617789}, 2}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.395250505194128, -7.707480333953697}, 2}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {8.6338807299907, -7.751769969819347}, 3}], 0.09755920187528605],
          ArrowBox[BezierCurveBox[{
          1, {8.675940524199095, -8.223733952958757}, 3}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.867882714053415, -8.18023851726785}, 4}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.805151602555639, -8.113893566415866}, 4}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.597926412294486, -8.252731300924394}, 5}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.54486492222713, -8.01199924574697}, 5}], 0.09755920187528605],
          ArrowBox[BezierCurveBox[{
          1, {8.076865130739971, -7.921535419479137}, 6}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {8.12689448201469, -8.02973619712177}, 6}], 0.09755920187528605],
          ArrowBox[BezierCurveBox[{
          1, {7.732789410130934, -8.067354742479113}, 7}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          1, {7.7634335238954595`, -7.942859799904074}, 7}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.325751536808533, -7.836023197455603}, 4}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.16453763503644, -8.15866123726815}, 4}], 0.09755920187528605],
          ArrowBox[BezierCurveBox[{
          2, {7.055795235050132, -7.90851598111162}, 5}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.904250954707649, -8.056766916598317}, 5}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.089669276468191, -6.734778482100068}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.628197865513385, -7.132262704815722}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.756487758042382, -8.171388729320647}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.5073405535342355`, -8.09066648862615}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.376415797245653, -8.37120990832564}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.082856805947911, -8.025884183957439}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.596275383189545, -8.137455478931498}, 67}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.398544936359922, -7.968261487822881}, 67}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.214271013233339, -8.338595263709976}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {5.971723334231953, -7.903393378220223}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.249656458447218, -8.160245998103452}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.106062406146615, -7.780863365437368}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.079354321828669, -7.425188306185053}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.2100957708346884`, -7.6817740895089806`}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.944867866223416, -7.75686066308248}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.90499464270882, -7.868874224963417}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.831324783450032, -7.2437683137735105`}, 104}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {7.118168364576074, -7.388548549124876}, 104}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.502814091311111, -8.036957612345912}, 105}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.382980026677483, -7.831906921143083}, 105}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.61231876185101, -7.234149285510889}, 106}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          2, {6.947624303854077, -7.25081370765835}, 106}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {8.606441555813612, -8.35227681646061}, 4}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {8.501650650107468, -7.813967882469327}, 4}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {8.815423972499762, -8.093573718672388}, 6}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {8.823393529566802, -7.7298105131752965`}, 6}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {9.450493385409139, -7.612764606932864}, 35}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {9.619879953404332, -7.7198136242940905`}, 35}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {9.158938656369148, -7.5244665436165725`}, 36}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {9.437650372406168, -7.475696669085229}, 36}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {9.851247161526087, -7.413329957984605}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {10.060778760488743`, -7.797182934646323}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {10.469550625960865`, -7.733397082603938}, 140}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          3, {10.368402786698125`, -8.421770476063713}, 140}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          4, {7.166388855403728, -8.577801961782757}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          4, {7.0784555526675845`, -8.174441681276267}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          5, {7.340272649921838, -8.0276583344598}, 7}], 0.09755920187528605],
          ArrowBox[BezierCurveBox[{
          5, {7.423978253751238, -8.143895447061988}, 7}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          5, {7.09448228325601, -8.061379574874062}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          5, {7.2061533400838425`, -8.025142201270505}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          6, {7.922302209708265, -8.045395285835662}, 7}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          6, {7.902916972194446, -7.812699565617449}, 7}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          6, {7.810998298648725, -7.7474441693529865`}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          6, {7.990193186653748, -7.506846184371201}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          7, {7.447537340529554, -7.6605677721350265`}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          7, {7.64611746604752, -7.652665507370118}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          7, {7.313050884925244, -7.992240129032052}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          7, {7.3410163379218165`, -7.839765642825273}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.856694375321554`, -5.985487241329057}, 9}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.615273748942297`, -5.913224284088148}, 9}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.725383831803676`, -5.417215827500169}, 10}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.846900593211922`, -5.377945045159581}, 10}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.694393453692042`, -5.660822782068874}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.677364165023981`, -5.555602444013001}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.649390029691277`, -5.227679717686182}, 12}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          8, {10.898242999058105`, -5.180301547304033}, 12}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.463821444909595`, -5.99172415648959}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.688212782620836`, -5.958766775674308}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.742413847738764`, -6.815776666859239}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.423294869063481`, -6.78731657250899}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.376982473833419`, -6.191616297559477}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          9, {10.499677477525614`, -6.06809341328648}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.695448289179158`, -5.4564449175616385`}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.556902239102918`, -5.3904953618458915`}, 11}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.650444865177775`, -5.02330185317893}, 12}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.777781073136662`, -5.015194465135588}, 12}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.457565093299904`, -5.1424880150639165`}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          10, {10.551809309477992`, -4.996628108097229}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          11, {10.288028665113035`, -5.320145413916726}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          11, {10.520818931367279`, -5.240235062666393}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          11, {10.439072889915918`, -5.833994457482844}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          11, {10.337376555896176`, -5.743428954026095}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.595043714017015`, -4.660111830224189}, 69}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.714143329651376`, -4.62906952870672}, 69}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.435276658081738`, -4.548896164068721}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.651577971848523`, -4.444732846075922}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.50890749914706, -4.944844517208395}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          12, {10.475815507366217`, -4.807091998283451}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {19.11587436179913, -5.28704287069114}, 14}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.577688136610064`, -5.422299273233888}, 14}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {19.136099235967293`, -4.067155522661969}, 15}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {19.31804313011088, -4.452552568668768}, 15}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.71832574536842, -4.062294641979419}, 16}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.984709025754217`, -4.20066629972725}, 16}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {17.54412275890236, -4.348625756586448}, 17}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {17.869768720868322`, -3.7341405478560805`}, 17}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {19.371810462839925`, -4.676567569245264}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {19.146017265623616`, -5.082909552402592}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.881907785844326`, -4.90457640137448}, 19}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.616411903814747`, -4.975621057212827}, 19}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.21734869200496, -4.266770083061427}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          13, {18.460159648721607`, -4.067865075868854}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.308348261166262`, -5.562402684569727}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.62074128913878, -5.833488265183882}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {18.818445584170544`, -5.79041151670072}, 19}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.09113592732996, -5.726199769994777}, 19}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.753991556760703`, -6.124687833369534}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.64563907245371, -6.55052566717664}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.656417682458923`, -6.675083337066424}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {19.240419114684766`, -6.935561584022705}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {18.447710700457733`, -7.005166630667662}, 121}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          14, {18.07174077614381, -6.483766840720536}, 121}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.39521853719524, -3.978383052739842}, 16}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.479657923438406`, -3.7313576644810897`}, 16}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.048703254666627`, -4.592655980004864}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.640966163306917`, -4.613600917154667}, 18}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.196953663749824`, -4.068887349581762}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.071165329169954`, -4.280073647356633}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.14124580365698, -3.6697403239373365`}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.263250613211923`, -3.9257786326973476`}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.694342592635998`, -3.5254004806061565`}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.989262593984655`, -3.54435100428704}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {19.998549685551108`, -3.4351648344979515`}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          15, {20.287645401296956`, -3.652296025055614}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          16, {18.560907379474354`, -3.9309722248806356`}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          16, {18.53733505580722, -3.5936955599401745`}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          16, {19.36100848827911, -3.273514211665321}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          16, {19.571489103385275`, -3.5394901236051877`}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          17, {17.445967074588488`, -3.464446473008882}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          17, {17.363132069340544`, -3.880026674546558}, 20}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          17, {15.478568605718998`, -3.496534699096435}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          17, {15.760745901879035`, -2.7380787948718472`}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.21899482699401, -4.993501607681957}, 63}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.288399675845362`, -5.241491318423198}, 63}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.024927799262592`, -4.699244333316118}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.306876556041587`, -4.889485693939775}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.40173599576782, -5.411011680651839}, 65}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.187649749392826`, -5.685966793692357}, 65}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {20.32232068577467, -5.785298112538}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          18, {19.901575173493924`, -5.940050365731542}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          21, {12.817522951764433`, -2.6187886939394525`}, 22}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          21, {12.797921382156646`, -2.2284161186109213`}, 22}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          21, {13.98231967707484, -2.3658671132647915`}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          21, {13.885461020130244`, -2.716246286908411}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {13.379033728138072`, -2.200481179137242}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {13.301776640800984`, -2.9412329281094665`}, 23}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.466892674928559`, -2.9450773733055624`}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.320943664789613`, -2.405502006018741}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.560380495931813`, -2.566494340102906}, 43}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.62089393431974, -2.1563134799712973`}, 43}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.639325335992256`, -2.7085658582765726`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.600099647510307`, -2.317509638996253}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.754195194231707`, -2.511772216498464}, 57}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.80935474052477, -2.227314695548075}, 57}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.86201332585394, -2.6059773139674633`}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {11.84020901684408, -2.3671265817681477`}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {12.224227488403818`, -2.0207554199650923`}, 131}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          22, {12.47908006449627, -2.111143087685351}, 131}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          23, {14.412574712229858`, -2.2938038311063425`}, 134}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          23, {14.65728036538144, -2.3387646760299807`}, 134}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          23, {14.596715266334444`, -2.328800721437335}, 160}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          23, {14.784701772283798`, -2.4762285296852093`}, 160}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {22.897633604110073`, -8.501084934026956}, 25}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {22.90706146728132, -8.244700700956713}, 25}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {23.85126488449679, -8.514327739197428}, 26}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {23.666672615759214`, -8.821397236341932}, 26}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {22.649499279797368`, -8.176237044683628}, 27}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {22.900183017727446`, -7.8359838294598765`}, 27}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {23.59983907684724, -8.617299520089118}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          24, {23.403207904207232`, -8.755031053840337}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.264431120473034`, -8.03371170579748}, 27}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.50568699523161, -7.949842723645799}, 27}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {23.21477091752171, -8.474774181201889}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {23.00871188171317, -8.86888994802855}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.845465132447675`, -8.460721634887637}, 86}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.719839852953466`, -8.638374898742814}, 86}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.714299838240557`, -8.586737415218517}, 87}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.53948139742318, -8.661936282730869}, 87}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.88393323546289, -8.615601554660884}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.6588677752948, -8.785853677704427}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {21.746364458827756`, -8.12695183008898}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.033409105455256`, -7.717376851927166}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {21.90210039502598, -8.43256899502139}, 100}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {21.977341005903522`, -8.055772923917152}, 100}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.449634243778316`, -8.570259237207749}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          25, {22.336262361343863`, -8.491579508230933}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {23.9743820660006, -9.051470716588419}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {23.962343162102606`, -8.882132753198134}, 28}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {24.425497093510106`, -9.003151118670981}, 72}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {24.354076042966863`, -9.111010234911484}, 72}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {24.64673807254688, -9.145716676261303}, 73}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          26, {24.44750682167179, -9.35706551042449}, 73}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {21.72012856063533, -7.335323585348799}, 93}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {21.996977602100507`, -7.072876422822839}, 93}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {21.739486009272152`, -7.7182349585915935`}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {21.78527478114128, -7.392528962582874}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {22.115955720653687`, -7.324711912517432}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          27, {22.321833463231382`, -7.2992840589514225`}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {24.162032381958653`, -8.936784936171662}, 72}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {24.102650235314105`, -9.213982015802378}, 72}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {24.166066905854585`, -9.086241829443122}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {24.017185306351887`, -9.3366579557695}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.380079672393045`, -9.125931907547171}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.36107324802794, -8.902068263764635}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.772777310288554`, -9.226479063379085}, 152}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.617430896976455`, -9.216077692261166}, 152}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.999147226312555`, -9.184397564621618}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          28, {23.824588781693308`, -9.316575464460866}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.420305612238698`, -15.731895347034957`}, 30}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.419635868122384`, -15.552933892880066`}, 30}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.212079051171543`, -15.351011460762408`}, 31}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.478135545013446`, -15.12280760519096}, 31}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.504263803928547`, -16.020854598621888`}, 32}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.31568935628734, -15.835319355864979`}, 32}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.599434998994823`, -15.448146973263583`}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.732219283121719`, -15.430900760149706`}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.798800963487784`, -15.277925019577015`}, 34}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          29, {14.99370394510421, -15.41224404917492}, 34}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {13.939668283659953`, -15.26254894864281}, 31}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {14.206394521619881`, -15.213306547230747`}, 31}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {14.231853036419883`, -15.932392086504008`}, 32}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {14.043948332892917`, -15.92581829790398}, 32}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {14.327024231483753`, -15.3596844611474}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {14.460478259729578`, -15.521399702188008`}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {13.761908624731364`, -15.752134874812022`}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          30, {13.772736187828526`, -15.50180841026701}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.385523908375262`, -14.929558173458268`}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.25225169866072, -15.140515815914894`}, 33}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.584889872867825`, -14.759336219771752`}, 34}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.513736360640676`, -15.121859104941622`}, 34}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.82040830162083, -15.322008587122417`}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.564509626758753`, -15.120924523995292`}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.287068924922055`, -15.196308094910847`}, 75}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.209895165617553`, -14.703192446665433`}, 75}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.278669056410585`, -14.32130967037262}, 76}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.527289068065015`, -14.587579430491553`}, 76}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.73008981042709, -14.45148289601471}, 77}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.008532929211444`, -14.366725799779417`}, 77}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.007479649736055`, -14.303891545836407`}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {14.319377658517565`, -14.412593913562183`}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.521914939016305`, -14.770743178482423`}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          31, {13.6514955355506, -14.500098227874512`}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          32, {13.657962112893031`, -16.034520337798575`}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          32, {13.856694379517537`, -15.790767661854069`}, 68}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {9.406379038021395, -7.320471898899339}, 36}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {9.515704186064449, -7.164653007007368}, 36}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {9.386670137100229, -7.19581746132536}, 37}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {9.573832770858383, -7.052634092477843}, 37}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {10.09868754317934, -7.209335313266635}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          35, {10.138832574147159`, -7.486139272567464}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {9.204440556101874, -6.9517005061192565`}, 37}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {9.282278041819538, -6.96433602916329}, 37}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {9.916457962180553, -6.96521835805835}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {9.847277845106575, -7.397841209251638}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {8.435570096128131, -6.80292050117915}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          36, {8.751809965201984, -6.388227624622822}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          37, {9.974586546975445, -6.853199443530256}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          37, {9.827568944186055, -7.273186771678053}, 38}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          37, {8.493698680922842, -6.69090158665073}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          37, {8.732101064281009, -6.263573187049018}, 48}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {10.174154976357974`, -6.662544254319565}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {10.615968958725793`, -6.567481464395546}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {11.157889814699576`, -7.606771748239227}, 140}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {10.847210376472548`, -7.9112921650365005`}, 140}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {11.694670778542427`, -7.193904395115357}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          38, {11.524267761776922`, -7.89763378209957}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.000700268756678`, -3.32406172318069}, 40}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {9.880142013473684, -3.1512914795114857`}, 40}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.3624894166895, -2.914856249629496}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.414194431905141`, -3.03671171902135}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.195475273100914`, -3.6383058597597664`}, 42}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {9.85037147152357, -3.5198025302600526`}, 42}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.455977237692796`, -2.5362732164267374`}, 43}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.714144701435403`, -2.7875231929740374`}, 43}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.186785499626861`, -2.685862780323603}, 44}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.408711647562336`, -2.748129296598153}, 44}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {9.934844923140842, -3.5801104321474977`}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {9.675161710190924, -3.318267355540793}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.347674481159197`, -3.145421055199979}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.265417133656392`, -3.213474066280155}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.534922077753214`, -2.6783447346004063`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          39, {10.693350414625892`, -2.948719351999009}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {10.039546918459106`, -3.0117563800025207`}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {10.211810188957601`, -3.306382093063769}, 41}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {9.61190242491011, -3.6770105625208975`}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {9.47277746724319, -3.58793772958352}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {9.514307516651222, -4.01315541605341}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          40, {9.194711533189782, -3.800534683921374}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.746031997954365`, -2.660665104483337}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.852755319610838`, -2.8091842524901884`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.048359935082352`, -3.898575655563624}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {9.556500681122701, -3.3913292103701096`}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.86090185619375, -2.4638714627053266`}, 57}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {11.062010412625732`, -2.718989309041581}, 57}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.968719987815753`, -2.558076560174425}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {11.092864688945122`, -2.8588011952618233`}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.545456325143896`, -2.4423928317751944`}, 59}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.820892339905017`, -2.5144672083936204`}, 59}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.189206676885139`, -2.5816065256789025`}, 112}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          41, {10.451554791333486`, -2.4150487007105426`}, 112}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.582131882959617, -4.045521613268435}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.667552471586852, -3.9021818661616283`}, 45}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.99496144097842, -3.610832236321064}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {10.25780789505305, -3.7973885769011586`}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.50234233902604, -4.6231033185550245`}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.260508455478574, -4.319653022714004}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {10.124480708198956`, -4.046666787733189}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {10.103348883627607`, -4.225020907969704}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {10.198111549263894`, -4.442615140872831}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.927586419145067, -4.587380060177788}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.910888858395696, -4.560212171092092}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          42, {9.626631798698035, -4.511536457299486}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {10.858734670890216`, -2.8785528990353826`}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {10.518309859644924`, -2.695355933568245}, 46}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {11.045982267484485`, -2.4114765784352046`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {10.946243140614412`, -2.4306012192863773`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {10.870240823962602`, -1.7823076910939377`}, 149}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {11.17825890353755, -1.8199399142040316`}, 149}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {10.696798378681894`, -1.841520014281119}, 150}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          43, {11.003528244111482`, -1.7646445464173997`}, 150}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          44, {10.7405492136117, -2.3720826820601406`}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          44, {10.677051402548324`, -2.5801907831841}, 47}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          45, {9.309327213367867, -4.180131292083076}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          45, {9.12885618757407, -4.056583392887753}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          45, {9.327132577693181, -4.421568143836582}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          45, {8.99987810551862, -4.261457595101353}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          46, {10.539526370331414`, -3.7403383237533583`}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          46, {10.255548091685624`, -3.7321361034096543`}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.011296703961246, -5.569231819523865}, 52}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.325737909802623, -5.704261814556843}, 52}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.781736343386157, -5.797005379860017}, 53}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.005792720711593, -5.75131316855586}, 53}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.906057269841331, -5.579890688539815}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.23471571954729, -5.650373867261647}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.214068297087868, -5.07813295205324}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.78042358653312, -5.429388476478695}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.231873661413244, -5.3195698038063295`}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {8.651445504477653, -5.6342626786920444`}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.9529156496671565`, -6.805203006195169}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.545128509627729, -6.664304566803539}, 102}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.704886111288101, -6.6237830137842675`}, 104}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.453201103369157, -6.371079026419827}, 104}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.485880089689211, -6.614163985521239}, 106}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.2826570426471, -6.233344184953057}, 106}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.638629937418449, -5.972754991290853}, 126}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.786304104033091, -5.807811987089824}, 126}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.395756919313325, -6.124612275409355}, 128}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.500706023986187, -5.785864906718476}, 128}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.397840374599341, -6.015209391390004}, 129}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          48, {7.567320112270419, -5.699055373487858}, 129}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          49, {6.109893105100662, -8.70185883397343}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          49, {6.301835224253635, -8.901376508781759}, 50}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          49, {5.729821144303959, -8.901680012978902}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          49, {5.877351476667909, -8.83659420411408}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.129119813104879, -8.70962839214633}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.084708026315358, -8.445024908472224}, 51}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.348979399049103, -8.475873962751866}, 67}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.400396156727594, -8.387402212337715}, 67}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.25551810716968, -8.375376096166486}, 105}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          50, {6.384831247045431, -8.251047645658032}, 105}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          51, {5.542491281506, -8.612231442862374}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          51, {5.593502593803582, -8.522355281741293}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          51, {5.194865579846771, -9.098351397439961}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          51, {5.025195275385748, -8.707241815936404}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.144243648882185, -5.386474012306209}, 53}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.053858820366933, -5.205751805969141}, 53}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.268564575334883, -5.169359320985121}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.282781819203365, -5.104812504675009}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.57657560258433, -4.667601584499322}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.828489686188016, -4.883827113891682}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.594380966909345, -4.909038436252724}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          52, {8.699511604132493, -5.088701316105401}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          53, {7.948619386247432, -5.21641067498491}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          53, {8.053221458627348, -5.3325860650106645`}, 54}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          53, {7.681192053823509, -5.609274977737362}, 126}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          53, {7.604809843113098, -5.490024184838778}, 126}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          54, {8.485553412328986, -4.613713637203771}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          54, {8.723250252067961, -4.894485982907782}, 55}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          55, {9.049066643639819, -4.634165098174816}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          55, {8.902283197258862, -4.597602448634909}, 56}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          56, {9.328635080953944, -4.776148152924873}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          56, {9.286211904803984, -5.030922734973655}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          56, {9.020530828092285, -4.714614264835813}, 154}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          56, {9.074777270164635, -4.79852212118272}, 154}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          57, {11.457131063550612`, -2.3798892497027975`}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          57, {11.38016720824805, -2.4254960384546767`}, 58}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          57, {11.033867400878957`, -2.264205521304644}, 59}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          57, {11.108194859207995`, -2.0811620515865785`}, 59}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          60, {4.203294919274161, -14.87033180999194}, 61}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          60, {4.184327177411136, -15.10984583842435}, 61}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          60, {3.5726366211150475`, -15.0696488834614}, 62}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          60, {3.558473623655013, -14.895919416346779`}, 62}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {3.92728699387832, -15.218242640073388`}, 62}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {3.9320917382806604`, -14.804999144526393`}, 62}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {4.893046070044187, -14.93262442432865}, 124}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {4.87885561419804, -15.148374335272145`}, 124}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {5.256755524906455, -14.800378490388882`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          61, {5.25006093544861, -15.257828271132459`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          62, {2.7466164242130104`, -15.188614159805937`}, 99}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          62, {2.745530863904285, -14.823319040525755`}, 99}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.436650084929383`, -4.717722687999474}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.649193992856635`, -4.659974337881526}, 64}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.81345828143443, -5.429490035337802}, 65}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.529967186207266`, -5.456455437637036}, 65}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.71787144183122, -4.659953598366671}, 66}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          63, {20.909807242078767`, -4.7804046232113615`}, 66}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.73634832202674, -4.307947973883714}, 66}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.715740214347136`, -4.486147348845121}, 66}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.651412355569835`, -4.078510537450728}, 84}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.783569962349947`, -4.2510839937238885`}, 84}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.399419105033278`, -3.9665700378719766`}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          64, {20.6472122491666, -4.011422048857839}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          65, {21.23564697299384, -6.205773569906712}, 93}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          65, {20.936614873802768`, -6.451397114568589}, 93}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          65, {20.63329304498818, -6.248251942491703}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          65, {20.426633779082582`, -6.128049082644548}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          66, {20.912025604792024`, -4.198940822778851}, 84}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          66, {21.06479131925235, -4.193314904090641}, 84}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          68, {12.853410591130098`, -15.484809957948388`}, 75}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          68, {13.03213550668794, -15.192778372831338`}, 75}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          68, {13.012024246535379`, -15.8408930701505}, 107}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          68, {12.948428715972703`, -15.573496966630548`}, 107}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          69, {10.447632716709881`, -4.352307337453641}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          69, {10.544834414841437`, -4.27918632097689}, 70}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          69, {10.521263557774517`, -4.748255690592618}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          69, {10.369071950358778`, -4.641545473185047}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          70, {10.45869819997105, -4.563919007961717}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          70, {10.209304894423319`, -4.530329807030582}, 71}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          71, {10.433979960290824`, -5.440127203735378}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          71, {10.099493360017426`, -5.429472051529032}, 82}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          71, {9.995713044620475, -5.043875190388651}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          71, {9.981981115041242, -4.850434557291064}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          72, {24.775006241864972`, -9.308227975477179}, 73}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          72, {24.647196041532293`, -9.41171769339827}, 73}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          72, {24.557799786723315`, -9.31511931115429}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          72, {24.46830033386228, -9.28833835784943}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.651230565428573`, -9.5611745866703}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.689541312900044`, -9.43090391544165}, 74}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {25.325374071317555`, -9.60622915068491}, 151}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {25.205341653417598`, -9.867308989877216}, 151}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.484310885884163`, -9.659330321848168}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.4969447882411, -9.410821424134188}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.921921905628018`, -9.775989192881966}, 155}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          73, {24.779884919287785`, -9.764456234408367}, 155}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          74, {24.305415178213444`, -9.535950986303641}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          74, {24.279738333103833`, -9.417712759814275}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {12.733642144085524`, -14.641512964190435`}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {12.940396499923372`, -14.863983661828396`}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {12.657409785393343`, -15.423160992818717`}, 107}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {12.415089339272324`, -15.447796474417407`}, 107}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {11.611192652259591`, -15.352737473403737`}, 108}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          75, {11.614906427720634`, -14.770126149105662`}, 108}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          76, {14.53660075725366, -14.059048315370472`}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          76, {14.599878754377903`, -13.90148092297733}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          77, {14.017844618398234`, -13.838194684657642`}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          77, {14.051299508396292`, -14.031654148620607`}, 78}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          77, {13.532279907678365`, -14.305046317305148`}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          77, {13.383417385426783`, -14.11915846293506}, 79}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          80, {2.8111378415651074`, -10.08931437353086}, 81}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          80, {2.9317304575097074`, -10.278692020578973`}, 81}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          81, {3.699268470650773, -9.357711778568476}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          81, {3.9755021484799773`, -9.80370105350984}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          81, {2.725026158510136, -10.510221912101272`}, 120}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          81, {2.5073573361017263`, -10.152955259710183`}, 120}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          82, {9.812270669149473, -5.547069081748845}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          82, {10.133025339843803`, -5.3642836008573225`}, 83}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          83, {9.386654171310742, -4.9064976994216725`}, 154}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          83, {9.483323789534625, -4.735630973719018}, 154}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          84, {20.727862102257898`, -3.8519369680783204`}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          84, {20.843497639610266`, -3.7242155227910456`}, 85}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          85, {20.448808270967948`, -3.3776995337727023`}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          85, {20.61589917716059, -3.3387924155704054`}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          85, {20.686681603713406`, -3.2208181986378928`}, 137}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          85, {20.900455651095434`, -3.353728575957705}, 137}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          86, {22.921574246407953`, -8.866552718820301}, 87}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          86, {22.872381085084207`, -8.764098322476594}, 87}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          86, {23.09120764363174, -8.89541685826355}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          86, {22.991767462958116`, -8.888015717447985}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          87, {22.91084918810032, -8.91897824224723}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          87, {22.86060216874918, -9.014031497782407}, 88}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          87, {22.476550196415733`, -8.873635924794055}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          87, {22.537996754794595`, -8.719757328308905}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {22.595936574288576`, -8.997553319769803}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {22.707630152020624`, -8.748621467752178}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {22.382158749843903`, -9.07325885645022}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {22.490648302233463`, -8.682658119058765}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {23.422933203870905`, -9.143442793054328}, 152}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {23.286593214916902`, -9.356905065717386}, 152}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {23.649303119893617`, -9.101361294298853}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          88, {23.493751099634196`, -9.457402837919247}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {5.13290515946096, -8.508515440048194}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {5.202310525110208, -8.682000406952314}, 90}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {4.785279457802061, -8.9946353946257}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {4.634003206694003, -8.866886941147763}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {5.168290604674968, -8.330166174441553}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          89, {5.33664959702523, -8.55947039416908}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          90, {5.083732108130996, -8.975860591702578}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          90, {4.8630504913735955`, -8.674627171320616}, 91}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          90, {5.466743255003971, -8.311391371518564}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          90, {5.565696881705528, -8.367210624341688}, 92}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.478910940454465`, -7.166116547112295}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.247850670857073`, -7.102857713629801}, 94}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {20.85719956381016, -6.825683546454922}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {20.949572397094336`, -6.459857141944139}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.788920793075714`, -6.580844710595976}, 96}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.844737929758214`, -6.815847554384779}, 96}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.855380651834537`, -6.772593501037128}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          93, {21.784409352949694`, -7.009612809997956}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {20.645496742851517`, -7.145336086215249}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {20.968929845733616`, -6.8427685151888635`}, 95}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {21.42294405569519, -7.791386251804496}, 100}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {21.211140019943716`, -7.824165158865064}, 100}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {20.54792286854925, -7.695731589912292}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          94, {20.56370988796627, -7.227804432035178}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          95, {20.249644594787064`, -7.052731018226281}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          95, {19.94199851132195, -6.887371431376011}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          96, {22.240565089773074`, -6.805235881554914}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          96, {22.113776654208635`, -6.807252346724935}, 97}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          98, {1.7603345368205354`, -14.870937588813629`}, 99}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          98, {1.7632218562115543`, -15.153075584905073`}, 99}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {20.49185476899753, -8.034127661902659}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {20.719445824165074`, -7.533421596968429}, 101}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.914409804896597`, -8.267472565981834}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.725797311582753`, -8.565588908112272}, 111}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.134028756717044`, -8.295239059774602}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.0812744285703, -8.124730867685274}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.700631980451003`, -8.343178102660081}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          100, {21.508815461795642`, -8.499625559419258}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {20.21014623771473, -7.735117851228415}, 114}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {19.9622571308236, -7.894149844435774}, 114}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {20.48659862473646, -7.698878332945384}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {20.206253241422598`, -8.029076205790675}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {18.635717655017196`, -7.7678502286745985`}, 121}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          101, {18.67574629847732, -6.985972191770835}, 121}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          102, {7.400327099383395, -7.686386747785165}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          102, {7.229712426862675, -7.541814526342634}, 103}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          106, {6.335986616788036, -6.802279451482506}, 156}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          106, {6.386312429069988, -6.510129412340722}, 156}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          108, {9.901030694706304, -15.325051601468271`}, 109}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          108, {9.902502605410264, -14.782044377518313`}, 109}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          109, {8.282096429534162, -15.309378564717429`}, 110}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          109, {8.283940995059291, -14.787633307121085`}, 110}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          110, {6.7182833394706005`, -15.295884066597912`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          110, {6.720394903313376, -14.789098763061023`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          111, {22.059553335889998`, -8.778984686976472}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          111, {22.056349310549958`, -8.637315801602556}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.42970598340158, -8.531525839168763}, 114}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.61167348100763, -8.404767675399405}, 114}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.70615837042356, -8.495286320886425}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.85566959160613, -8.539694036753628}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.987280682345364`, -8.720143811439144}, 116}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          113, {20.948446854795627`, -8.887520178310664}, 116}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          114, {20.604431118540194`, -8.155261242307889}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          114, {20.57197484212046, -8.326427121946503}, 115}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          115, {21.129549541059827`, -8.515045094214297}, 116}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          115, {20.94120449233508, -8.638013745223695}, 116}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          115, {21.415030452879936`, -8.338126646551512}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          115, {21.27596826236747, -8.665082295396264}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          116, {21.507807716073092`, -8.685952788108743}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          116, {21.557090574287166`, -8.88993978594911}, 127}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          117, {25.271087413921517`, -15.213860921149713`}, 118}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          117, {25.271087413918256`, -14.884979426783469`}, 118}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          119, {1.7274672165103921`, -10.856854952011211`}, 120}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          119, {1.9102813370896523`, -11.024034221988652`}, 120}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          120, {1.7395450212708663`, -10.895530938228005`}, 139}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          120, {1.666335188960784, -10.652094460987373`}, 139}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          121, {16.874876484099563`, -7.689723025572857}, 122}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          121, {16.768678737943578`, -7.265293757678029}, 122}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          121, {16.22456590555294, -7.998653478548595}, 123}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          121, {16.06194696397873, -7.1279180938417666`}, 123}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          122, {15.52620532702012, -7.947891750854179}, 123}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          122, {15.46978413160213, -7.5015856340417715`}, 123}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {14.05748417000568, -8.352149851615364}, 141}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {13.884740209800338`, -7.794129145863531}, 141}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {13.748478431513504`, -8.159597976301153}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {13.750347311597153`, -7.455751664312663}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {14.319664484118741`, -8.003220306342683}, 147}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {14.3028511013875, -7.66893478892574}, 147}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {14.533334228044977`, -8.16455861784735}, 148}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          123, {14.379045851274467`, -7.925604168318827}, 148}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          124, {5.577665847066321, -14.929827259057198`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          124, {5.585161713454155, -15.171527128857026`}, 125}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          128, {6.93531579427915, -5.686281115996286}, 129}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          128, {6.999846427277331, -5.708874466786395}, 129}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          128, {6.5876627218697354`, -5.702290153025169}, 130}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          128, {6.71055685399353, -5.515404854672869}, 130}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          129, {6.6542768101541485`, -5.615480619794543}, 130}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          129, {6.712640309279535, -5.406001970653608}, 130}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          132, {20.086749922263465`, -2.6997910556611577`}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          132, {19.81501750965116, -2.6469920540953646`}, 133}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          133, {20.17482025174141, -2.9962719053628777`}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          133, {20.16899596613892, -3.194452572239483}, 135}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          133, {20.02993979737011, -2.7567143759186967`}, 136}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          133, {20.19458997280498, -2.9156639376165554`}, 136}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.32832260468203, -2.864659396686607}, 136}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.49879706571959, -2.82542829150869}, 136}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.711076391799125`, -2.94733559099634}, 137}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.757759532988036`, -3.119153086518957}, 137}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.697213201964768`, -2.732981574092215}, 138}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          135, {20.873834902187397`, -2.9384147639063096`}, 138}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          137, {20.981769675899923`, -2.74791773447856}, 138}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          137, {21.11170823493302, -2.7815334287705547`}, 138}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {12.311300543242465`, -8.011043811846761}, 141}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {12.276964124415764`, -8.556078388270052}, 141}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {11.740505781392555`, -8.540515567789177}, 142}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {11.503320930710426`, -8.643389380305223}, 142}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {12.046451444339008`, -8.627984941221518}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {11.69762404950774, -8.895381320633263}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {12.002294804750896`, -7.818491936532559}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          140, {12.142571226211587`, -8.217700906719378}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {12.857901727846267`, -8.952704039835698}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {12.543410751843313`, -8.675065842824463}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {12.813745088259349`, -8.143211035146933}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {12.988357928546973`, -7.997385428909408}, 144}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {13.598600884789272`, -8.148171676692687}, 148}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          141, {13.617056468224975`, -8.46723793291658}, 148}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          142, {12.084258534141664`, -9.040015031871496}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          142, {11.97261598999267, -9.204537598766247}, 143}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.515052879784069`, -9.6685203010269}, 157}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.245403251347621`, -9.735392704450756}, 157}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.590591605782599`, -9.552760925069476}, 158}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.37490627231653, -9.687067764642434}, 158}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.41001502909243, -9.728354508280201}, 159}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.125354702320577`, -9.721200160202406}, 159}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.23895508651285, -9.703858914159628}, 161}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          143, {12.002227256424163`, -9.59995177813717}, 161}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          144, {13.250538242660246`, -7.648455883637621}, 147}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          144, {13.231855979846015`, -8.018016678208618}, 147}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          145, {18.157334653280262`, -15.213860921149948`}, 146}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          145, {18.157334653280262`, -14.884979426784287`}, 146}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          152, {23.90566076883884, -9.41537072279398}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          152, {23.886448737533026`, -9.557949993750206}, 153}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          153, {24.550429673301227`, -9.632527366027892}, 155}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          153, {24.39575878460277, -9.869503305268358}, 155}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          157, {12.557433204189776`, -9.996146657320407}, 158}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          157, {12.611397499160805`, -10.063581093470571`}, 158}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          157, {12.37685662749837, -10.171740240532051`}, 159}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          157, {12.361845929166897`, -10.09771348903062}, 159}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          162, {21.71421103360089, -15.213860921148775`}, 163}], 
          0.09755920187528605], 
         ArrowBox[BezierCurveBox[{
          162, {21.71421103360089, -14.88497942678335}, 163}], 
          0.09755920187528605]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.09755920187528605], DiskBox[2, 0.09755920187528605], 
         DiskBox[3, 0.09755920187528605], DiskBox[4, 0.09755920187528605], 
         DiskBox[5, 0.09755920187528605], DiskBox[6, 0.09755920187528605], 
         DiskBox[7, 0.09755920187528605], DiskBox[8, 0.09755920187528605], 
         DiskBox[9, 0.09755920187528605], DiskBox[10, 0.09755920187528605], 
         DiskBox[11, 0.09755920187528605], DiskBox[12, 0.09755920187528605], 
         DiskBox[13, 0.09755920187528605], DiskBox[14, 0.09755920187528605], 
         DiskBox[15, 0.09755920187528605], DiskBox[16, 0.09755920187528605], 
         DiskBox[17, 0.09755920187528605], DiskBox[18, 0.09755920187528605], 
         DiskBox[19, 0.09755920187528605], DiskBox[20, 0.09755920187528605], 
         DiskBox[21, 0.09755920187528605], DiskBox[22, 0.09755920187528605], 
         DiskBox[23, 0.09755920187528605], DiskBox[24, 0.09755920187528605], 
         DiskBox[25, 0.09755920187528605], DiskBox[26, 0.09755920187528605], 
         DiskBox[27, 0.09755920187528605], DiskBox[28, 0.09755920187528605], 
         DiskBox[29, 0.09755920187528605], DiskBox[30, 0.09755920187528605], 
         DiskBox[31, 0.09755920187528605], DiskBox[32, 0.09755920187528605], 
         DiskBox[33, 0.09755920187528605], DiskBox[34, 0.09755920187528605], 
         DiskBox[35, 0.09755920187528605], DiskBox[36, 0.09755920187528605], 
         DiskBox[37, 0.09755920187528605], DiskBox[38, 0.09755920187528605], 
         DiskBox[39, 0.09755920187528605], DiskBox[40, 0.09755920187528605], 
         DiskBox[41, 0.09755920187528605], DiskBox[42, 0.09755920187528605], 
         DiskBox[43, 0.09755920187528605], DiskBox[44, 0.09755920187528605], 
         DiskBox[45, 0.09755920187528605], DiskBox[46, 0.09755920187528605], 
         DiskBox[47, 0.09755920187528605], DiskBox[48, 0.09755920187528605], 
         DiskBox[49, 0.09755920187528605], DiskBox[50, 0.09755920187528605], 
         DiskBox[51, 0.09755920187528605], DiskBox[52, 0.09755920187528605], 
         DiskBox[53, 0.09755920187528605], DiskBox[54, 0.09755920187528605], 
         DiskBox[55, 0.09755920187528605], DiskBox[56, 0.09755920187528605], 
         DiskBox[57, 0.09755920187528605], DiskBox[58, 0.09755920187528605], 
         DiskBox[59, 0.09755920187528605], DiskBox[60, 0.09755920187528605], 
         DiskBox[61, 0.09755920187528605], DiskBox[62, 0.09755920187528605], 
         DiskBox[63, 0.09755920187528605], DiskBox[64, 0.09755920187528605], 
         DiskBox[65, 0.09755920187528605], DiskBox[66, 0.09755920187528605], 
         DiskBox[67, 0.09755920187528605], DiskBox[68, 0.09755920187528605], 
         DiskBox[69, 0.09755920187528605], DiskBox[70, 0.09755920187528605], 
         DiskBox[71, 0.09755920187528605], DiskBox[72, 0.09755920187528605], 
         DiskBox[73, 0.09755920187528605], DiskBox[74, 0.09755920187528605], 
         DiskBox[75, 0.09755920187528605], DiskBox[76, 0.09755920187528605], 
         DiskBox[77, 0.09755920187528605], DiskBox[78, 0.09755920187528605], 
         DiskBox[79, 0.09755920187528605], DiskBox[80, 0.09755920187528605], 
         DiskBox[81, 0.09755920187528605], DiskBox[82, 0.09755920187528605], 
         DiskBox[83, 0.09755920187528605], DiskBox[84, 0.09755920187528605], 
         DiskBox[85, 0.09755920187528605], DiskBox[86, 0.09755920187528605], 
         DiskBox[87, 0.09755920187528605], DiskBox[88, 0.09755920187528605], 
         DiskBox[89, 0.09755920187528605], DiskBox[90, 0.09755920187528605], 
         DiskBox[91, 0.09755920187528605], DiskBox[92, 0.09755920187528605], 
         DiskBox[93, 0.09755920187528605], DiskBox[94, 0.09755920187528605], 
         DiskBox[95, 0.09755920187528605], DiskBox[96, 0.09755920187528605], 
         DiskBox[97, 0.09755920187528605], DiskBox[98, 0.09755920187528605], 
         DiskBox[99, 0.09755920187528605], DiskBox[100, 0.09755920187528605], 
         DiskBox[101, 0.09755920187528605], DiskBox[102, 0.09755920187528605],
          DiskBox[103, 0.09755920187528605], 
         DiskBox[104, 0.09755920187528605], DiskBox[105, 0.09755920187528605],
          DiskBox[106, 0.09755920187528605], 
         DiskBox[107, 0.09755920187528605], DiskBox[108, 0.09755920187528605],
          DiskBox[109, 0.09755920187528605], 
         DiskBox[110, 0.09755920187528605], DiskBox[111, 0.09755920187528605],
          DiskBox[112, 0.09755920187528605], 
         DiskBox[113, 0.09755920187528605], DiskBox[114, 0.09755920187528605],
          DiskBox[115, 0.09755920187528605], 
         DiskBox[116, 0.09755920187528605], DiskBox[117, 0.09755920187528605],
          DiskBox[118, 0.09755920187528605], 
         DiskBox[119, 0.09755920187528605], DiskBox[120, 0.09755920187528605],
          DiskBox[121, 0.09755920187528605], 
         DiskBox[122, 0.09755920187528605], DiskBox[123, 0.09755920187528605],
          DiskBox[124, 0.09755920187528605], 
         DiskBox[125, 0.09755920187528605], DiskBox[126, 0.09755920187528605],
          DiskBox[127, 0.09755920187528605], 
         DiskBox[128, 0.09755920187528605], DiskBox[129, 0.09755920187528605],
          DiskBox[130, 0.09755920187528605], 
         DiskBox[131, 0.09755920187528605], DiskBox[132, 0.09755920187528605],
          DiskBox[133, 0.09755920187528605], 
         DiskBox[134, 0.09755920187528605], DiskBox[135, 0.09755920187528605],
          DiskBox[136, 0.09755920187528605], 
         DiskBox[137, 0.09755920187528605], DiskBox[138, 0.09755920187528605],
          DiskBox[139, 0.09755920187528605], 
         DiskBox[140, 0.09755920187528605], DiskBox[141, 0.09755920187528605],
          DiskBox[142, 0.09755920187528605], 
         DiskBox[143, 0.09755920187528605], DiskBox[144, 0.09755920187528605],
          DiskBox[145, 0.09755920187528605], 
         DiskBox[146, 0.09755920187528605], DiskBox[147, 0.09755920187528605],
          DiskBox[148, 0.09755920187528605], 
         DiskBox[149, 0.09755920187528605], DiskBox[150, 0.09755920187528605],
          DiskBox[151, 0.09755920187528605], 
         DiskBox[152, 0.09755920187528605], DiskBox[153, 0.09755920187528605],
          DiskBox[154, 0.09755920187528605], 
         DiskBox[155, 0.09755920187528605], DiskBox[156, 0.09755920187528605],
          DiskBox[157, 0.09755920187528605], 
         DiskBox[158, 0.09755920187528605], DiskBox[159, 0.09755920187528605],
          DiskBox[160, 0.09755920187528605], 
         DiskBox[161, 0.09755920187528605], DiskBox[162, 0.09755920187528605],
          DiskBox[163, 0.09755920187528605]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8668271883718815`*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"f5110106-6b41-4cdd-b4e4-8aa42b182fff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDistance", "[", 
  RowBox[{"countryGraph", ",", 
   RowBox[{"CountryData", "@", "\"\<China\>\""}], ",", 
   TemplateBox[<|"query" -> "russia", "boxes" -> TemplateBox[{"\"Russia\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
       "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.8200106`7.365364459894022, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668271919388723`*^9, 3.8668272391999693`*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"b399ab6b-2fa2-4514-ad52-273600076286"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8668272281789923`*^9, 3.8668272396249976`*^9}},
 CellLabel->
  "Out[240]=",ExpressionUUID->"7a1f4887-facd-4d1d-b29e-6e95da4bd1ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDistance", "[", 
  RowBox[{"countryGraph", ",", 
   RowBox[{"CountryData", "@", "\"\<Ethiopia\>\""}], ",", 
   TemplateBox[<|"query" -> "russia", "boxes" -> TemplateBox[{"\"Russia\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
       "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.8200106`7.365364459894022, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8668271919388723`*^9, 3.866827248996996*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"6d32979b-050d-4f34-80b8-28e15d031864"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.8668272493979797`*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"137c51d1-a1c6-4ea6-8f18-dc14301aedc2"]
}, Open  ]],

Cell["\<\
In a connected graph,  the VertexEccentivity can be computed using \
GraphDistance:\
\>", "Text",
 CellChangeTimes->{{3.8668273329359994`*^9, 
  3.866827347022996*^9}},ExpressionUUID->"0d0ab77c-7022-4f10-8298-\
0df7d247d6e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GridGraph", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8668273478379817`*^9, 3.866827351624014*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"b73e30bb-a234-4438-831b-e7179dd65630"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {Null, 
       SparseArray[
       Automatic, {12, 12}, 0, {
        1, {{0, 2, 5, 7, 10, 14, 17, 20, 24, 27, 29, 32, 34}, {{2}, {4}, {
          1}, {3}, {5}, {2}, {6}, {1}, {5}, {7}, {2}, {4}, {6}, {8}, {3}, {
          5}, {9}, {4}, {8}, {10}, {5}, {7}, {9}, {11}, {6}, {8}, {12}, {7}, {
          11}, {8}, {10}, {12}, {9}, {11}}}, Pattern}]}, {
      GraphLayout -> {"GridEmbedding", "Dimension" -> {3, 4}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 1.}, {1., 2.}, {1., 3.}, {2., 1.}, {2., 2.}, {
       2., 3.}, {3., 1.}, {3., 2.}, {3., 3.}, {4., 1.}, {4., 2.}, {4., 3.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 4}, {2, 3}, {2, 5}, {3, 6}, {4, 5}, {4, 7}, {5,
           6}, {5, 8}, {6, 9}, {7, 8}, {7, 10}, {8, 9}, {8, 11}, {9, 12}, {10,
           11}, {11, 12}}, 0.030239520958083826`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.030239520958083826], DiskBox[2, 0.030239520958083826], 
         DiskBox[3, 0.030239520958083826], DiskBox[4, 0.030239520958083826], 
         DiskBox[5, 0.030239520958083826], DiskBox[6, 0.030239520958083826], 
         DiskBox[7, 0.030239520958083826], DiskBox[8, 0.030239520958083826], 
         DiskBox[9, 0.030239520958083826], DiskBox[10, 0.030239520958083826], 
         DiskBox[11, 0.030239520958083826], 
         DiskBox[12, 0.030239520958083826]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.86682735290399*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"b5d98ca7-d714-44a0-b8cd-69b205b1c6da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GraphDistance", "[", 
    RowBox[{"g", ",", "1", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"VertexList", "[", "g", "]"}]}]], "Input",
 CellChangeTimes->{{3.8668273566729813`*^9, 3.8668273815499845`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"45a44ffa-19fd-462f-85d1-844f8adf0113"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "1", ",", "2", ",", "3", ",", "2", ",", "3", 
   ",", "4", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.8668273680139904`*^9, 3.866827382279982*^9}},
 CellLabel->
  "Out[248]=",ExpressionUUID->"2b9dce2a-18d8-4162-ba44-b55beb0e4ee0"]
}, Open  ]],

Cell["\<\
The distance between two vertices belonging to different connected components \
is Infinity:\
\>", "Text",
 CellChangeTimes->{{3.8668272902349896`*^9, 
  3.8668273039069934`*^9}},ExpressionUUID->"5e552cb1-0527-4da6-a509-\
07ab486a523b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {2, 3}, {3, 1}, {4, 5}}}, {
        PerformanceGoal -> "Quality", VertexShapeFunction -> {"Name"}}]], 
      Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], FontFamily -> "Arial", 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], FontFamily -> "Arial", 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.6761690079082845, -1.0470418161568924`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.179240449329538, -0.18279687581094373`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.17924679252702397`, -0.17924679252702402`},
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.179246792527024, -1.4055354012109404`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.17924679252702402`, -1.4055354012109404`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
          "VertexID$5"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        ImageSizeCache->{{0., 80.}, {-54.84020260787416, 
         49.999999999999986`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    BaseStyle->{FontFamily -> "Arial"},
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{80., Automatic},
    LabelStyle->{FontFamily -> "Arial"}]}], ";"}]], "Input",
 CellLabel->
  "In[242]:=",ExpressionUUID->"d8696be2-f529-456a-bfa7-8de3d228c6b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConnectedGraphQ", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.8668273089619827`*^9, 3.866827311764992*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"e278ad55-49c3-47aa-8f6f-8bd63564e333"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8668273121389904`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"9fdcdd35-d7e8-4e7b-897e-3d6b878323f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConnectedComponents", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.866827315675991*^9, 3.8668273165529966`*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"47d9bd85-079b-477e-a358-91cdf04d69b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.866827317004987*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"77e5b592-a01b-42df-8c0a-cede5cc4f023"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDistance", "[", 
  RowBox[{"g", ",", "3", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8668273204469695`*^9, 3.8668273213909826`*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"e367a856-e70a-44b0-b64c-79a71c1b2475"],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.8668273220269957`*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"5a211b2b-9fc3-4d69-a45f-02d1973cff9b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GraphDistanceMatrix:", "Chapter",
 CellChangeTimes->{{3.866827430571557*^9, 
  3.866827440808673*^9}},ExpressionUUID->"4315d6da-2d29-4dfb-ab07-\
4fab3051cfc3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphDistanceMatrix", "[", 
   RowBox[{"PetersenGraph", "[", "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.866827449352659*^9, 3.866827457835644*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"8a68a3cc-eb65-4bfc-8f0b-b7d32ee9e0dd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "2", "1", "1", "2", "1", "2", "2", "2", "2"},
     {"2", "0", "2", "1", "1", "2", "1", "2", "2", "2"},
     {"1", "2", "0", "2", "1", "2", "2", "1", "2", "2"},
     {"1", "1", "2", "0", "2", "2", "2", "2", "1", "2"},
     {"2", "1", "1", "2", "0", "2", "2", "2", "2", "1"},
     {"1", "2", "2", "2", "2", "0", "1", "2", "2", "1"},
     {"2", "1", "2", "2", "2", "1", "0", "1", "2", "2"},
     {"2", "2", "1", "2", "2", "2", "1", "0", "1", "2"},
     {"2", "2", "2", "1", "2", "2", "2", "1", "0", "1"},
     {"2", "2", "2", "2", "1", "1", "2", "2", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.86682745820465*^9},
 CellLabel->
  "Out[249]//MatrixForm=",ExpressionUUID->"7e26ce0d-97d4-47f2-b89f-\
e168658c16eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties and relations:", "Section",
 CellChangeTimes->{{3.866827471183654*^9, 
  3.866827477215227*^9}},ExpressionUUID->"86ec5925-ec2d-4f6c-826a-\
79d91de5e172"],

Cell["\<\
Rows and columns of the distance matrix follow the same order given by \
VertexList:\
\>", "Text",
 CellChangeTimes->{{3.8668274795092373`*^9, 
  3.866827493353243*^9}},ExpressionUUID->"a4afe49c-6cab-4f64-bdce-\
17018e496da2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{2, 3, 1, 4}, {Null, {{1, 2}, {2, 3}, {3, 1}, {3, 4}}}, {
        PerformanceGoal -> "Quality", VertexShapeFunction -> {"Name"}}]], 
      Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], FontFamily -> "Arial", 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], FontFamily -> "Arial", 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.0001964751172666146, 0.}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0., 0.8475386976306538}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.9164048379140673, 0.42386488156829044`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {2.031430211699506, 0.42382043094346533`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
          "VertexID$4"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        ImageSizeCache->{{8.881784197001252*^-16, 131.}, {-37.48274945537674, 
         31.999999999999993`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    BaseStyle->{FontFamily -> "Arial"},
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{131., Automatic},
    LabelStyle->{FontFamily -> "Arial"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866827494597252*^9, 3.8668275038762255`*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"ff369d0e-8fc7-4c1c-97e2-ca3906c3d629"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexList", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.866827507483229*^9, 3.866827528299224*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"113f3dc8-1851-43d0-999d-14f730a4a175"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "1", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.866827517904231*^9, 3.866827528793229*^9}},
 CellLabel->
  "Out[252]=",ExpressionUUID->"8db7a332-1f05-437b-8a84-65b668a562e3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{604.1999999999999, 575.4},
WindowMargins->{{Automatic, 40.799999999999955`}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (July 8, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6b211301-8141-4ed0-8b06-d7afa2d8748b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 163, 3, 69, "Chapter",ExpressionUUID->"05f54bbf-d844-48ae-97ff-f3ad29a09294"],
Cell[CellGroupData[{
Cell[768, 29, 161, 3, 67, "Section",ExpressionUUID->"66b53cf4-67fe-4c2c-889d-46963121e300"],
Cell[932, 34, 218, 5, 35, "Text",ExpressionUUID->"bd31ab1a-0cd7-468f-84c3-42a2c86dd709"],
Cell[1153, 41, 3833, 80, 134, "Input",ExpressionUUID->"1fec9562-14ea-4f5c-aae6-9012de4393ab"],
Cell[CellGroupData[{
Cell[5011, 125, 246, 4, 28, "Input",ExpressionUUID->"54720075-5a01-44f0-99f8-8d34e3907cc5"],
Cell[5260, 131, 205, 4, 32, "Output",ExpressionUUID->"c9b790ae-6982-4bad-a24c-e693457af257"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5502, 140, 1608, 42, 37, "Input",ExpressionUUID->"037f2cf3-9d56-4d22-b1be-1673ac4ab582"],
Cell[7113, 184, 4200, 87, 136, "Output",ExpressionUUID->"9b84ca6d-692d-46fa-8977-089e2c6cdd99"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11362, 277, 154, 3, 67, "Section",ExpressionUUID->"4d2780f2-5f84-4280-9ed9-b3d64b337aee"],
Cell[CellGroupData[{
Cell[11541, 284, 158, 3, 54, "Subsection",ExpressionUUID->"a0ed2fe3-1af0-4cbe-9fe5-98148799bb9f"],
Cell[11702, 289, 200, 3, 35, "Text",ExpressionUUID->"dde36f01-cdd9-4f82-a93a-0e4e27cedbda"],
Cell[CellGroupData[{
Cell[11927, 296, 961, 24, 67, "Input",ExpressionUUID->"ceb923dd-a70f-4905-881e-733e6c8b74fc"],
Cell[12891, 322, 3887, 71, 196, "Output",ExpressionUUID->"ef5568bd-95a6-4a67-b3ec-59d2f8b29515"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16815, 398, 1583, 38, 35, "Input",ExpressionUUID->"68224d02-1f1e-4201-8e48-4f17dd1157bc"],
Cell[18401, 438, 8706, 176, 196, "Output",ExpressionUUID->"1a96f85d-2f7d-4a4f-b69c-ccec106200b3"]
}, Open  ]],
Cell[27122, 617, 246, 4, 35, "Text",ExpressionUUID->"41958c3f-2bdb-4827-8f12-2d06b6d0538a"],
Cell[CellGroupData[{
Cell[27393, 625, 586, 16, 48, "Input",ExpressionUUID->"b966fe5d-855f-42d3-89e7-582c40d2902e"],
Cell[27982, 643, 1442, 30, 207, "Output",ExpressionUUID->"c7ba9c42-1e73-48bb-b121-bc87da5cf91d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29461, 678, 2101, 51, 64, "Input",ExpressionUUID->"beb75c3c-4b7e-48aa-82be-b0c6794dabd8"],
Cell[31565, 731, 2344, 49, 207, "Output",ExpressionUUID->"dd17ae4d-2c7d-479a-950c-2ac5a2f3bd5b"]
}, Open  ]],
Cell[33924, 783, 265, 6, 35, "Text",ExpressionUUID->"eef8d496-7d7c-4c46-961d-459321b97448"],
Cell[CellGroupData[{
Cell[34214, 793, 584, 16, 48, "Input",ExpressionUUID->"4f0e2b0a-0dbc-4ae1-837c-1bc7a3848ff1"],
Cell[34801, 811, 1442, 30, 207, "Output",ExpressionUUID->"0f191ba9-5f45-4526-9c13-4982ea685528"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36280, 846, 2100, 51, 64, "Input",ExpressionUUID->"80beca00-74e3-4ec2-beae-0d4ef38c833f"],
Cell[38383, 899, 2345, 49, 207, "Output",ExpressionUUID->"05fa2494-6b65-4406-b55d-2af6e11db6b5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40777, 954, 172, 3, 54, "Subsection",ExpressionUUID->"cd541097-59d5-4c5b-b42a-7a51588bd271"],
Cell[40952, 959, 223, 5, 35, "Text",ExpressionUUID->"c1fb84ff-95ab-4bb8-bc30-adeea627c78c"],
Cell[CellGroupData[{
Cell[41200, 968, 281, 6, 28, "Input",ExpressionUUID->"93ef3e91-fccc-4d63-82c6-d77571b846ff"],
Cell[41484, 976, 1971, 35, 449, "Output",ExpressionUUID->"1ff1c865-526e-477e-8bfa-970b6af73633"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43492, 1016, 966, 23, 37, "Input",ExpressionUUID->"3ac0fdf5-0b78-4ae3-aecb-402b8c0c6b15"],
Cell[44461, 1041, 240, 5, 32, "Output",ExpressionUUID->"3770a42b-4d4c-4376-80d7-82a86bc31689"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44738, 1051, 985, 24, 37, "Input",ExpressionUUID->"832e0bdd-78ba-4037-b1b6-9dc6eb1019b1"],
Cell[45726, 1077, 151, 2, 32, "Output",ExpressionUUID->"97d10f41-6e7f-4a4d-8f4b-1571d74e6366"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45914, 1084, 245, 4, 28, "Input",ExpressionUUID->"951b1554-24d7-493d-a4bc-86d3da4520f9"],
Cell[46162, 1090, 151, 2, 32, "Output",ExpressionUUID->"20795ffd-0321-468d-99fd-b579ba184270"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46386, 1100, 167, 3, 69, "Chapter",ExpressionUUID->"59322dc3-d711-494a-a85f-6929d6346be0"],
Cell[CellGroupData[{
Cell[46578, 1107, 161, 3, 67, "Section",ExpressionUUID->"1fd60702-c847-4eb7-9daf-d0709cc9ec34"],
Cell[46742, 1112, 200, 3, 35, "Text",ExpressionUUID->"ad9b2e05-642d-4e39-ae48-61b82eb816a3"],
Cell[CellGroupData[{
Cell[46967, 1119, 361, 8, 28, "Input",ExpressionUUID->"e98dd5e5-8ce5-4ce4-a3c4-753fe1305aa3"],
Cell[47331, 1129, 1911, 35, 376, "Output",ExpressionUUID->"0afc7f9a-e0bf-46d6-a44d-1f1994227da4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49279, 1169, 277, 5, 28, "Input",ExpressionUUID->"28b2ff61-0167-4596-a27d-a1c013c909e5"],
Cell[49559, 1176, 800, 20, 32, "Output",ExpressionUUID->"da657f69-8bfb-483b-89cd-c0ee6317549e"]
}, Open  ]],
Cell[50374, 1199, 191, 3, 35, "Text",ExpressionUUID->"0cbff545-7c65-48f0-ab3e-150568e8ab51"],
Cell[CellGroupData[{
Cell[50590, 1206, 459, 11, 28, "Input",ExpressionUUID->"7e3896bf-c98a-4843-b19f-7aa9f0609180"],
Cell[51052, 1219, 29322, 589, 829, "Output",ExpressionUUID->"f482f053-897a-46b0-8bad-25e821354ed0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80435, 1815, 163, 3, 69, "Chapter",ExpressionUUID->"abe9e32f-e45b-4003-90f5-eee76362df7e"],
Cell[CellGroupData[{
Cell[80623, 1822, 161, 3, 67, "Section",ExpressionUUID->"cb9509e5-a4b0-42ca-b44a-0fe16f45c33c"],
Cell[80787, 1827, 194, 3, 35, "Text",ExpressionUUID->"5ce0af44-fa12-45d0-ac9b-0486ab077fa2"],
Cell[CellGroupData[{
Cell[81006, 1834, 296, 6, 28, "Input",ExpressionUUID->"a6c7bca3-63a1-4846-884a-2434dc400073"],
Cell[81305, 1842, 2897, 49, 359, "Output",ExpressionUUID->"c099265f-a37b-42d9-a859-ea9ea14b0881"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84239, 1896, 219, 3, 28, "Input",ExpressionUUID->"ecb7bdca-890f-4552-aee2-b4ac7337e2c0"],
Cell[84461, 1901, 399, 8, 32, "Output",ExpressionUUID->"dead6a8b-e1a0-40e0-adb1-6a8c04ca0048"]
}, Open  ]],
Cell[84875, 1912, 161, 3, 35, "Text",ExpressionUUID->"64e132a5-4e4f-4531-a534-6c4fe7b39cdb"],
Cell[CellGroupData[{
Cell[85061, 1919, 1038, 24, 37, "Input",ExpressionUUID->"805f6980-4718-4a62-ab99-677cd9047645"],
Cell[86102, 1945, 8705, 178, 359, "Output",ExpressionUUID->"646d7201-442a-4229-8e80-e146f02a20f7"]
}, Open  ]],
Cell[94822, 2126, 219, 5, 35, "Text",ExpressionUUID->"3bcf28a8-bbc8-4ba0-8897-862143da9f35"],
Cell[CellGroupData[{
Cell[95066, 2135, 299, 6, 28, "Input",ExpressionUUID->"0e88d0c8-bacc-4176-84ca-469428191254"],
Cell[95368, 2143, 2897, 49, 359, "Output",ExpressionUUID->"942f427e-3b52-4705-a993-3dac271345e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98302, 2197, 252, 4, 28, "Input",ExpressionUUID->"2c52ecdf-f668-4bd3-81f9-509a25e7e51e"],
Cell[98557, 2203, 399, 8, 32, "Output",ExpressionUUID->"3c39b9b6-99d4-4c08-adb8-7b1fd17aa87a"]
}, Open  ]],
Cell[98971, 2214, 163, 3, 35, "Text",ExpressionUUID->"9dc774e2-bb9c-49c5-b7ca-4ec88bf26b81"],
Cell[CellGroupData[{
Cell[99159, 2221, 1044, 24, 37, "Input",ExpressionUUID->"5692b007-9650-404f-a5de-1df0fc1e4588"],
Cell[100206, 2247, 8705, 178, 359, "Output",ExpressionUUID->"f9abbf2b-9dbc-4fd8-b424-95a1b82a11c0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108960, 2431, 156, 3, 67, "Section",ExpressionUUID->"f031bb51-08d5-418e-a681-f8292e18179b"],
Cell[CellGroupData[{
Cell[109141, 2438, 164, 3, 54, "Subsection",ExpressionUUID->"9f9c8964-8533-48d5-9729-f1fed9f05a93"],
Cell[109308, 2443, 198, 3, 35, "Text",ExpressionUUID->"38fab7bc-bd63-4376-9615-eb3c5e2a881c"],
Cell[CellGroupData[{
Cell[109531, 2450, 1877, 57, 67, "Input",ExpressionUUID->"39c97696-e7a2-4867-9a86-3f6020ee140c"],
Cell[111411, 2509, 10328, 217, 80, "Output",ExpressionUUID->"828147cd-9507-4d5f-ac6d-c1eff071134c"]
}, Open  ]],
Cell[121754, 2729, 2247, 42, 62, "Input",ExpressionUUID->"f6b7cbe3-e5c9-45b5-825f-7c462532276b"],
Cell[124004, 2773, 165, 3, 35, "Text",ExpressionUUID->"77a973cf-a8b7-46ca-ac0d-9469fa266af6"],
Cell[CellGroupData[{
Cell[124194, 2780, 456, 12, 28, "Input",ExpressionUUID->"a1ce8057-9f3f-4355-b00b-7135f1d17d64"],
Cell[124653, 2794, 239, 5, 32, "Output",ExpressionUUID->"72658e22-87ed-4ece-8425-673a786826e0"]
}, Open  ]],
Cell[124907, 2802, 163, 3, 35, "Text",ExpressionUUID->"18e016b5-a736-4357-be76-e4e20ab0eebe"],
Cell[CellGroupData[{
Cell[125095, 2809, 277, 5, 28, "Input",ExpressionUUID->"6d586cf6-f100-43d2-93d5-8e90866b54cd"],
Cell[125375, 2816, 4001, 80, 208, "Output",ExpressionUUID->"3fdec6f6-8c62-436b-ae0d-04c133dcf834"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129437, 2903, 157, 3, 67, "Section",ExpressionUUID->"aeff0aa6-d00a-4db1-af40-badb8dc1cd99"],
Cell[129597, 2908, 260, 6, 58, "Text",ExpressionUUID->"9ae83256-89ff-4e7f-81cc-9a9f12c0d9b7"],
Cell[129860, 2916, 280, 6, 28, "Input",ExpressionUUID->"6929a04a-ecad-46f9-b27e-4cead365596f"],
Cell[CellGroupData[{
Cell[130165, 2926, 243, 4, 28, "Input",ExpressionUUID->"6642845e-0fb7-4e50-8941-a1fb167a9a3f"],
Cell[130411, 2932, 908, 14, 71, "Output",ExpressionUUID->"0b9ca166-6329-45c7-bbae-e20434c4cea9"]
}, Open  ]],
Cell[131334, 2949, 176, 3, 35, "Text",ExpressionUUID->"15db0ffb-f2aa-47b2-abdb-8e6620ff9928"],
Cell[CellGroupData[{
Cell[131535, 2956, 1161, 32, 67, "Input",ExpressionUUID->"24019775-618f-4695-9d99-d5e3d6a00f62"],
Cell[132699, 2990, 929, 22, 376, "Output",ExpressionUUID->"3e5abac1-325f-4544-9fde-1c926f845f7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133665, 3017, 543, 11, 48, "Input",ExpressionUUID->"0470a74d-8824-4cc3-9ba7-afe1088de8d4"],
Cell[134211, 3030, 32442, 634, 376, "Output",ExpressionUUID->"99a0e527-1621-46e0-9c97-87f5a5f8ed91"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166714, 3671, 164, 3, 69, "Chapter",ExpressionUUID->"a442c0fe-39cb-425a-9bcc-5622234b5864"],
Cell[CellGroupData[{
Cell[166903, 3678, 163, 3, 67, "Section",ExpressionUUID->"f0cc279b-8382-4da7-99d1-a62dbcc76d78"],
Cell[167069, 3683, 196, 3, 35, "Text",ExpressionUUID->"82ef3a91-cd54-474d-89f6-2432847ee73a"],
Cell[CellGroupData[{
Cell[167290, 3690, 4945, 106, 50, "Input",ExpressionUUID->"3b4f92e3-470e-4e6a-a19f-d37211dc8549"],
Cell[172238, 3798, 151, 2, 32, "Output",ExpressionUUID->"56ccb51b-3c48-45ad-b984-7cb0283b2d35"]
}, Open  ]],
Cell[172404, 3803, 6630, 139, 78, "Input",ExpressionUUID->"751424fb-f8c1-4ab4-8eea-14a3570ad1c9"],
Cell[CellGroupData[{
Cell[179059, 3946, 231, 3, 28, "Input",ExpressionUUID->"f7a1b208-456e-48b6-92f2-6ab401c09a0f"],
Cell[179293, 3951, 151, 2, 32, "Output",ExpressionUUID->"74e89c4e-c52f-440d-8a1e-4c6bbd75b222"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179481, 3958, 231, 3, 28, "Input",ExpressionUUID->"0a24d2a7-cf85-4c15-833a-c2f6a9945d60"],
Cell[179715, 3963, 13969, 303, 269, "Output",ExpressionUUID->"6753a2b1-fbb5-4ef4-b6e6-6bec908ea6a1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193733, 4272, 154, 3, 67, "Section",ExpressionUUID->"22d86ba2-8407-4455-9f58-b37d4defc163"],
Cell[CellGroupData[{
Cell[193912, 4279, 162, 3, 54, "Subsection",ExpressionUUID->"a31068f7-be9f-4326-b662-db04cf86678d"],
Cell[194077, 4284, 262, 6, 58, "Text",ExpressionUUID->"b65b949d-24f0-4391-b91a-89abce8f9f6e"],
Cell[CellGroupData[{
Cell[194364, 4294, 3263, 72, 71, "Input",ExpressionUUID->"e9e35dcb-73b2-4690-adef-205f3bff2d73"],
Cell[197630, 4368, 149, 2, 32, "Output",ExpressionUUID->"2e72964e-60f7-41e4-97c8-8f90cacf5c24"]
}, Open  ]],
Cell[197794, 4373, 200, 3, 35, "Text",ExpressionUUID->"83e412c8-54dd-40b2-99d0-4ccc9d4b25ae"],
Cell[CellGroupData[{
Cell[198019, 4380, 3339, 74, 71, "Input",ExpressionUUID->"8688fee7-ee4d-4d54-9319-52c2e5c79204"],
Cell[201361, 4456, 151, 2, 32, "Output",ExpressionUUID->"bc3cdcb1-adba-4293-b719-177c32a8b1b3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201561, 4464, 166, 3, 54, "Subsection",ExpressionUUID->"1080bb7f-91d4-4ec3-b6b6-f3357ea8733b"],
Cell[201730, 4469, 275, 6, 58, "Text",ExpressionUUID->"62edff8e-16f4-4813-8e79-c4886da7089d"],
Cell[CellGroupData[{
Cell[202030, 4479, 3261, 72, 71, "Input",ExpressionUUID->"f0a834cd-911b-4f56-8096-ae630533112c"],
Cell[205294, 4553, 149, 2, 32, "Output",ExpressionUUID->"6ba209ff-29a0-4f49-955c-78e55b5a958d"]
}, Open  ]],
Cell[205458, 4558, 262, 8, 35, "Text",ExpressionUUID->"24267fc3-5d0b-4b01-9563-83ac7e82d174"],
Cell[CellGroupData[{
Cell[205745, 4570, 3343, 74, 71, "Input",ExpressionUUID->"10c3cf43-d337-480a-aa7b-48d3f1e629ce"],
Cell[209091, 4646, 151, 2, 32, "Output",ExpressionUUID->"16039762-fa68-4ef4-b69a-71aea42433f3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[209303, 4655, 168, 3, 67, "Section",ExpressionUUID->"c5c18001-3ee6-4fa4-8959-99a3da65cab8"],
Cell[209474, 4660, 227, 5, 35, "Text",ExpressionUUID->"273dbf14-85bd-4749-b6ee-0c4f4d10f8e9"],
Cell[209704, 4667, 10495, 247, 101, "Input",ExpressionUUID->"1d12f9b2-002f-4a72-a7eb-d742c03ea777"],
Cell[CellGroupData[{
Cell[220224, 4918, 319, 7, 28, "Input",ExpressionUUID->"5fdfb9fb-0b5b-4d76-b984-1ce0a9afe143"],
Cell[220546, 4927, 943, 27, 131, "Output",ExpressionUUID->"32c6ec80-6b0b-4e08-991f-88e3aa87d0a0"]
}, Open  ]],
Cell[221504, 4957, 178, 3, 35, "Text",ExpressionUUID->"0f0d20d1-7609-4ca8-b820-dc8deb1b790a"],
Cell[CellGroupData[{
Cell[221707, 4964, 407, 10, 28, "Input",ExpressionUUID->"f0fbcd16-14a3-4525-8506-7afd2f52a5d9"],
Cell[222117, 4976, 216, 4, 32, "Output",ExpressionUUID->"c3fa8de8-aae9-4db4-888d-fd8a2b25e4f1"]
}, Open  ]],
Cell[222348, 4983, 178, 3, 35, "Text",ExpressionUUID->"6a9894f4-9812-49e1-b561-9414f18302f4"],
Cell[CellGroupData[{
Cell[222551, 4990, 405, 10, 28, "Input",ExpressionUUID->"7ddc0ac0-d350-4558-b744-fe063993b929"],
Cell[222959, 5002, 216, 4, 32, "Output",ExpressionUUID->"b4b2502a-a2af-48b9-b476-20e1515e330c"]
}, Open  ]],
Cell[223190, 5009, 199, 3, 35, "Text",ExpressionUUID->"b561ded5-61da-4ca4-a380-3857190f63c3"],
Cell[223392, 5014, 4443, 101, 74, "Input",ExpressionUUID->"1124b8cd-4a06-4647-8813-efd164128ef7"],
Cell[CellGroupData[{
Cell[227860, 5119, 248, 4, 28, "Input",ExpressionUUID->"8ddd3ce0-dae1-46d0-8567-550ea4590b51"],
Cell[228111, 5125, 149, 2, 32, "Output",ExpressionUUID->"dba184ef-1396-43a3-820e-f04fd8756ed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228297, 5132, 292, 6, 28, "Input",ExpressionUUID->"54654e3d-1e90-4637-bc0c-027e82bf10b4"],
Cell[228592, 5140, 149, 2, 32, "Output",ExpressionUUID->"ac2c73ca-2942-4805-a0c2-d0df2c940402"]
}, Open  ]],
Cell[228756, 5145, 239, 6, 35, "Text",ExpressionUUID->"1fb2b33e-625d-4dbb-87f3-61c166a37a07"],
Cell[228998, 5153, 5038, 109, 76, "Input",ExpressionUUID->"f619f476-fea3-431f-ac86-b28a31244a85"],
Cell[CellGroupData[{
Cell[234061, 5266, 250, 4, 28, "Input",ExpressionUUID->"e78ded20-c951-4e31-b42e-460f500f6017"],
Cell[234314, 5272, 151, 2, 32, "Output",ExpressionUUID->"95dd0be0-e4b9-43bb-954d-50433adbfa6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234502, 5279, 248, 4, 28, "Input",ExpressionUUID->"fc1bda8f-24bb-405b-bbad-6d14188253d7"],
Cell[234753, 5285, 151, 2, 32, "Output",ExpressionUUID->"10ae1152-49a3-4eef-b354-758a1fd0e2be"]
}, Open  ]],
Cell[234919, 5290, 203, 3, 35, "Text",ExpressionUUID->"72b9b191-e530-4d61-94fe-50f88d69a07f"],
Cell[235125, 5295, 3983, 95, 79, "Input",ExpressionUUID->"5a4d4da6-78db-4da0-9433-2d40e36d81a3"],
Cell[239111, 5392, 161, 3, 28, "Input",ExpressionUUID->"a31a5377-6c0e-4460-b27b-d2d1216c97a7"],
Cell[CellGroupData[{
Cell[239297, 5399, 384, 8, 28, "Input",ExpressionUUID->"c296ee68-d8ad-4b60-92bb-d4633865b2c5"],
Cell[239684, 5409, 151, 2, 32, "Output",ExpressionUUID->"ca88f1de-c633-49ed-a058-fddd47a92124"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[239896, 5418, 168, 3, 69, "Chapter",ExpressionUUID->"9365d948-f617-40c1-ae70-350d483946e4"],
Cell[CellGroupData[{
Cell[240089, 5425, 163, 3, 67, "Section",ExpressionUUID->"f4be960e-a071-4473-95b2-3ea1fa056e23"],
Cell[240255, 5430, 197, 3, 35, "Text",ExpressionUUID->"45527169-9b98-4807-aec4-0c9ea17da3ec"],
Cell[CellGroupData[{
Cell[240477, 5437, 5097, 112, 50, "Input",ExpressionUUID->"83acb7f9-046c-4900-b23c-a5aa790b6d5e"],
Cell[245577, 5551, 155, 3, 32, "Output",ExpressionUUID->"d0345abc-1028-49f9-ae70-a58fc9a4214a"]
}, Open  ]],
Cell[245747, 5557, 219, 5, 35, "Text",ExpressionUUID->"cfab37cf-7268-4e74-bcd0-c06b10133dea"],
Cell[245969, 5564, 6706, 141, 78, "Input",ExpressionUUID->"002ae082-cbfe-451d-b832-05c4146ab7f6"],
Cell[CellGroupData[{
Cell[252700, 5709, 235, 4, 28, "Input",ExpressionUUID->"2be7d974-ed36-472b-bcbc-8ff0605e3870"],
Cell[252938, 5715, 155, 3, 32, "Output",ExpressionUUID->"8f207b94-cb62-4bef-aafc-8481d34f685b"]
}, Open  ]],
Cell[253108, 5721, 165, 3, 35, "Text",ExpressionUUID->"9f596e23-c1e5-4728-8c34-6ea37f956c6f"],
Cell[CellGroupData[{
Cell[253298, 5728, 237, 4, 28, "Input",ExpressionUUID->"ce484dcc-22a4-4f0f-aa0d-92bb2b132782"],
Cell[253538, 5734, 13975, 304, 269, "Output",ExpressionUUID->"86ca7fde-27b7-40e4-aff4-5beb4627eef3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[267574, 6045, 164, 3, 69, "Chapter",ExpressionUUID->"933a82bc-6406-400b-bbb7-e85c0c31d9a6"],
Cell[CellGroupData[{
Cell[267763, 6052, 159, 3, 67, "Section",ExpressionUUID->"73c37f99-51ac-4187-b0ad-205429cfa902"],
Cell[267925, 6057, 199, 3, 35, "Text",ExpressionUUID->"6e5f63fe-793c-48b1-983c-8ac44cdb05ec"],
Cell[CellGroupData[{
Cell[268149, 6064, 5202, 110, 50, "Input",ExpressionUUID->"82e79a71-d5f0-4dd1-a473-ab908954fca4"],
Cell[273354, 6176, 14236, 310, 64, "Output",ExpressionUUID->"9d484a75-af26-49a7-a5d3-0a46eec4790e"]
}, Open  ]],
Cell[287605, 6489, 174, 3, 35, "Text",ExpressionUUID->"07a6a95d-5fea-4eae-a524-0b4a01ad60bb"],
Cell[CellGroupData[{
Cell[287804, 6496, 240, 4, 28, "Input",ExpressionUUID->"82ac59a9-129b-467a-92a5-c38ac30671a5"],
Cell[288047, 6502, 436, 9, 52, "Output",ExpressionUUID->"33413e27-ace3-407b-be18-1ef49a236c32"]
}, Open  ]],
Cell[288498, 6514, 165, 3, 35, "Text",ExpressionUUID->"378b650c-0b85-4422-94c1-e2c948fc1450"],
Cell[CellGroupData[{
Cell[288688, 6521, 237, 4, 28, "Input",ExpressionUUID->"0257aef7-73bb-4d6f-903f-8ae89d03200b"],
Cell[288928, 6527, 155, 3, 32, "Output",ExpressionUUID->"0db80203-56c9-463c-ac3e-469cc1ca9545"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[289144, 6537, 160, 3, 69, "Chapter",ExpressionUUID->"41d452d4-e236-434c-ad23-c5e7070d5c7a"],
Cell[CellGroupData[{
Cell[289329, 6544, 159, 3, 67, "Section",ExpressionUUID->"4e4f9f46-9767-4ea4-a06d-7c045c905a96"],
Cell[289491, 6549, 179, 3, 35, "Text",ExpressionUUID->"b25b44b7-4811-4c44-91e2-9fe95feee45f"],
Cell[CellGroupData[{
Cell[289695, 6556, 7248, 160, 101, "Input",ExpressionUUID->"8ea60241-6f95-4606-8366-bbdb99c1d4cc"],
Cell[296946, 6718, 155, 3, 32, "Output",ExpressionUUID->"1efbf0b6-2854-43ff-9cbf-829faf56d4a3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[297150, 6727, 154, 3, 67, "Section",ExpressionUUID->"3d0da9a9-d564-47d7-a8b0-df48718186bf"],
Cell[CellGroupData[{
Cell[297329, 6734, 153, 3, 54, "Subsection",ExpressionUUID->"0fee3cda-b780-458f-a2da-04ead9ad6fe1"],
Cell[297485, 6739, 199, 3, 35, "Text",ExpressionUUID->"49246f54-130b-4af0-b7c9-ae24d2abba00"],
Cell[CellGroupData[{
Cell[297709, 6746, 1042, 27, 86, "Input",ExpressionUUID->"35151a03-2de2-4ea7-a1c2-78aae88356f9"],
Cell[298754, 6775, 4060, 74, 210, "Output",ExpressionUUID->"931042a8-e25d-4f41-97c9-27fecabe9f39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302851, 6854, 1549, 38, 35, "Input",ExpressionUUID->"c9eb4497-7801-4ace-8ca5-8232976c61fe"],
Cell[304403, 6894, 202, 5, 32, "Output",ExpressionUUID->"a6cfe9ff-c4fb-4284-ada8-9ac7a5f0e00f"]
}, Open  ]],
Cell[304620, 6902, 243, 4, 35, "Text",ExpressionUUID->"8dc4ae1f-715b-4cc3-9aed-fc20d95b2845"],
Cell[CellGroupData[{
Cell[304888, 6910, 591, 17, 48, "Input",ExpressionUUID->"f57e91e6-5597-4608-976e-b5ef5a071317"],
Cell[305482, 6929, 1447, 31, 207, "Output",ExpressionUUID->"29124527-2f59-4884-a58c-bc9b035b159f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306966, 6965, 1106, 26, 37, "Input",ExpressionUUID->"e29b832b-0159-4f8a-b6e8-8b93b93ea30b"],
Cell[308075, 6993, 153, 3, 32, "Output",ExpressionUUID->"bebd0552-aa45-4c2f-8317-387ab1c231cf"]
}, Open  ]],
Cell[308243, 6999, 265, 6, 35, "Text",ExpressionUUID->"535a7b4b-1ab7-4966-af8b-1524af9e7ba6"],
Cell[CellGroupData[{
Cell[308533, 7009, 589, 17, 48, "Input",ExpressionUUID->"a9182286-f75c-4092-90bf-d3b1b1a4ea7a"],
Cell[309125, 7028, 1445, 31, 207, "Output",ExpressionUUID->"9ad4e50d-eb13-4860-b113-8d4d8b1a49e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310607, 7064, 1104, 26, 37, "Input",ExpressionUUID->"9d0d9202-95bf-484b-aeb3-a5ef97ca91a5"],
Cell[311714, 7092, 157, 3, 32, "Output",ExpressionUUID->"b10f7d00-856f-4da6-9fc8-a4ee576aeec3"]
}, Open  ]],
Cell[311886, 7098, 278, 6, 35, "Text",ExpressionUUID->"9fd40a7f-0e40-4c9b-b189-67e64730d10f"],
Cell[CellGroupData[{
Cell[312189, 7108, 1148, 28, 169, "Input",ExpressionUUID->"dba21433-cf62-4deb-9fe8-1a2e80b4b50d"],
Cell[313340, 7138, 1681, 37, 207, "Output",ExpressionUUID->"f3b62f67-653e-451d-a51e-96c0fb88ba70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315058, 7180, 1518, 33, 37, "Input",ExpressionUUID->"ac92058c-9d38-44b2-a3bf-2f72e5031c01"],
Cell[316579, 7215, 157, 3, 32, "Output",ExpressionUUID->"435b97c8-7aa2-489e-92c2-5ed754b945de"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[316797, 7225, 171, 3, 67, "Section",ExpressionUUID->"993ca490-0e9d-47fe-9be0-be6547eb2387"],
Cell[316971, 7230, 220, 5, 35, "Text",ExpressionUUID->"274e65f4-012b-4c83-b996-d8135fbdfb56"],
Cell[CellGroupData[{
Cell[317216, 7239, 283, 7, 28, "Input",ExpressionUUID->"ce653d28-29d9-4392-84ac-65b734ac3011"],
Cell[317502, 7248, 1973, 36, 263, "Output",ExpressionUUID->"d705fda7-44ec-4f84-96b8-ff8f7208cbde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319512, 7289, 254, 5, 28, "Input",ExpressionUUID->"f585aede-ea94-4d28-9577-fb8f676a0e38"],
Cell[319769, 7296, 244, 6, 32, "Output",ExpressionUUID->"0dadb15d-6c25-48d2-a861-92c36179a66a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320050, 7307, 315, 7, 28, "Input",ExpressionUUID->"109831f7-df0d-4a77-b579-bd6a45527418"],
Cell[320368, 7316, 155, 3, 32, "Output",ExpressionUUID->"a4cb9628-5f81-48ee-80e0-1c4dcfd10412"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320560, 7324, 251, 5, 28, "Input",ExpressionUUID->"5c97d246-33da-4ad3-9210-3df4afc72a6b"],
Cell[320814, 7331, 153, 3, 32, "Output",ExpressionUUID->"17882c5c-c8d9-4f9f-836e-0de804a37912"]
}, Open  ]],
Cell[320982, 7337, 160, 3, 35, "Text",ExpressionUUID->"b7a6fc9d-63db-41d0-9040-0050fd9aa461"],
Cell[CellGroupData[{
Cell[321167, 7344, 297, 7, 28, "Input",ExpressionUUID->"fd625ac3-bc3f-4314-99f2-1605c7c87862"],
Cell[321467, 7353, 155, 3, 32, "Output",ExpressionUUID->"0ddd2d62-db43-48ed-8368-769179d8abec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321659, 7361, 285, 6, 28, "Input",ExpressionUUID->"c0a2db0b-fa51-4345-bae4-204426489021"],
Cell[321947, 7369, 594, 15, 43, "Output",ExpressionUUID->"8e4d940c-b06a-4e5b-b2b7-c254673ef4a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322578, 7389, 457, 12, 48, "Input",ExpressionUUID->"56737b2f-c076-483b-bebb-bf9af2221598"],
Cell[323038, 7403, 1154, 27, 43, "Output",ExpressionUUID->"04b36354-3a75-4e3c-8dfe-6dc412716249"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324229, 7435, 565, 15, 48, "Input",ExpressionUUID->"ec20ab00-837b-4771-9530-250337456124"],
Cell[324797, 7452, 50044, 958, 1311, "Output",ExpressionUUID->"869cc1e7-434e-4578-acc6-d30ba69519aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374878, 8415, 688, 19, 67, "Input",ExpressionUUID->"3adbe5e6-2b3c-4727-89ac-a5fd60ac66f4"],
Cell[375569, 8436, 13321, 314, 344, "Output",ExpressionUUID->"4b67ef90-7c01-49d4-9642-b501b2257dce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388927, 8755, 735, 20, 105, "Input",ExpressionUUID->"efe9d8df-b87a-4a51-9a90-6199a39d5495"],
Cell[389665, 8777, 68164, 1611, 1754, "Output",ExpressionUUID->"8d637181-2233-4769-ae73-ab1474a4cec0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457866, 10393, 165, 4, 28, "Input",ExpressionUUID->"4a9402ce-0142-4060-989a-093071404d63"],
Cell[458034, 10399, 30917, 567, 360, "Output",ExpressionUUID->"39412052-9d0e-4b7f-ba09-e174ac78831f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488988, 10971, 897, 23, 143, "Input",ExpressionUUID->"751fa488-fe3d-4f6e-a2d3-4a28db9a5b2b"],
Cell[489888, 10996, 313394, 5727, 242, "Output",ExpressionUUID->"c7fa9a67-5be6-4023-81c7-4d2a2225acd8"]
}, Open  ]],
Cell[803297, 16726, 174, 3, 35, "Text",ExpressionUUID->"14be0d6b-d34a-40e1-9539-1ce882478422"],
Cell[CellGroupData[{
Cell[803496, 16733, 845, 22, 162, "Input",ExpressionUUID->"8dc3aef5-fcfb-4a7f-815d-70706b658eb3"],
Cell[804344, 16757, 313320, 5725, 242, "Output",ExpressionUUID->"f5110106-6b41-4cdd-b4e4-8aa42b182fff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1117701, 22487, 862, 17, 40, "Input",ExpressionUUID->"b399ab6b-2fa2-4514-ad52-273600076286"],
Cell[1118566, 22506, 181, 3, 32, "Output",ExpressionUUID->"7a1f4887-facd-4d1d-b29e-6e95da4bd1ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1118784, 22514, 863, 17, 40, "Input",ExpressionUUID->"6d32979b-050d-4f34-80b8-28e15d031864"],
Cell[1119650, 22533, 155, 3, 32, "Output",ExpressionUUID->"137c51d1-a1c6-4ea6-8f18-dc14301aedc2"]
}, Open  ]],
Cell[1119820, 22539, 235, 6, 35, "Text",ExpressionUUID->"0d0ab77c-7022-4f10-8298-0df7d247d6e8"],
Cell[CellGroupData[{
Cell[1120080, 22549, 285, 7, 28, "Input",ExpressionUUID->"b73e30bb-a234-4438-831b-e7179dd65630"],
Cell[1120368, 22558, 1970, 36, 263, "Output",ExpressionUUID->"b5d98ca7-d714-44a0-b8cd-69b205b1c6da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1122375, 22599, 334, 8, 28, "Input",ExpressionUUID->"45a44ffa-19fd-462f-85d1-844f8adf0113"],
Cell[1122712, 22609, 331, 7, 32, "Output",ExpressionUUID->"2b9dce2a-18d8-4162-ba44-b55beb0e4ee0"]
}, Open  ]],
Cell[1123058, 22619, 246, 6, 58, "Text",ExpressionUUID->"5e552cb1-0527-4da6-a509-07ab486a523b"],
Cell[1123307, 22627, 3607, 82, 119, "Input",ExpressionUUID->"d8696be2-f529-456a-bfa7-8de3d228c6b9"],
Cell[CellGroupData[{
Cell[1126939, 22713, 219, 4, 28, "Input",ExpressionUUID->"e278ad55-49c3-47aa-8f6f-8bd63564e333"],
Cell[1127161, 22719, 159, 3, 32, "Output",ExpressionUUID->"9fdcdd35-d7e8-4e7b-897e-3d6b878323f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127357, 22727, 223, 4, 28, "Input",ExpressionUUID->"47d9bd85-079b-477e-a358-91cdf04d69b2"],
Cell[1127583, 22733, 306, 9, 32, "Output",ExpressionUUID->"77e5b592-a01b-42df-8c0a-cede5cc4f023"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127926, 22747, 252, 5, 28, "Input",ExpressionUUID->"e367a856-e70a-44b0-b64c-79a71c1b2475"],
Cell[1128181, 22754, 165, 3, 32, "Output",ExpressionUUID->"5a211b2b-9fc3-4d69-a45f-02d1973cff9b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1128407, 22764, 165, 3, 69, "Chapter",ExpressionUUID->"4315d6da-2d29-4dfb-ab07-4fab3051cfc3"],
Cell[CellGroupData[{
Cell[1128597, 22771, 290, 6, 28, "Input",ExpressionUUID->"8a68a3cc-eb65-4bfc-8f0b-b7d32ee9e0dd"],
Cell[1128890, 22779, 1156, 27, 199, "Output",ExpressionUUID->"7e26ce0d-97d4-47f2-b89f-e168658c16eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1130083, 22811, 170, 3, 67, "Section",ExpressionUUID->"86ec5925-ec2d-4f6c-826a-79d91de5e172"],
Cell[1130256, 22816, 236, 6, 58, "Text",ExpressionUUID->"a4afe49c-6cab-4f64-bdce-17018e496da2"],
Cell[1130495, 22824, 3356, 76, 84, "Input",ExpressionUUID->"ff369d0e-8fc7-4c1c-97e2-ca3906c3d629"],
Cell[CellGroupData[{
Cell[1133876, 22904, 212, 4, 28, "Input",ExpressionUUID->"113f3dc8-1851-43d0-999d-14f730a4a175"],
Cell[1134091, 22910, 242, 5, 32, "Output",ExpressionUUID->"8db7a332-1f05-437b-8a84-65b668a562e3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

